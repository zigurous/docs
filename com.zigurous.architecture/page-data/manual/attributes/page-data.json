{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-js","path":"/manual/attributes","result":{"data":{"markdownRemark":{"html":"<h1>Attributes</h1>\n<p>The <strong>Architecture Toolkit</strong> includes a few different C# attributes that are useful to customize the editor interface for custom data structures and behaviours without needing to write custom editor scripts.</p>\n<hr/>\n<h3><a href=\"/com.zigurous.architecture/api/Zigurous.Architecture/ConditionalShowAttribute\">[ConditionalShow]</a></h3>\n<p>Shows the field in the editor based on the state of another field.</p>\n<pre><code class=\"language-csharp\">// boolean condition\r\npublic bool useCustomValue;\r\n[ConditionalShow(nameof(useCustomValue))]\r\npublic float customValue;\n</code></pre>\n<pre><code class=\"language-csharp\">// enum condition\r\npublic Axis axis;\r\n[ConditionalShow(nameof(axis), (int)Axis.X)]\r\npublic float x;\r\n[ConditionalShow(nameof(axis), (int)Axis.Y)]\r\npublic float y;\r\n[ConditionalShow(nameof(axis), (int)Axis.Z)]\r\npublic float z;\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.architecture/api/Zigurous.Architecture/ConditionalHideAttribute\">[ConditionalHide]</a></h3>\n<p>Hides the field in the editor based on the state of another field.</p>\n<pre><code class=\"language-csharp\">// boolean condition\r\npublic bool useDefaultValue;\r\n[ConditionalHide(nameof(useDefaultValue))]\r\npublic float customValue;\n</code></pre>\n<pre><code class=\"language-csharp\">// enum condition\r\npublic Option option;\r\n[ConditionalHide(nameof(option), (int)Option.B)]\r\npublic float a;\r\n[ConditionalHide(nameof(option), (int)Option.A)]\r\npublic float b;\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.architecture/api/Zigurous.Architecture/ReadOnlyAttribute\">[ReadOnly]</a></h3>\n<p>Prevents the field from being modified in the editor.</p>\n<pre><code class=\"language-csharp\">[ReadOnly]\r\npublic string info;\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.architecture/api/Zigurous.Architecture/RenameAttribute\">[Rename]</a></h3>\n<p>Renames the field in the editor.</p>\n<pre><code class=\"language-csharp\">[Rename(\"Custom Toggle\")]\r\npublic bool toggle;\n</code></pre>","frontmatter":{"slug":"/manual/attributes","class":null,"title":""}}},"pageContext":{"id":"85946abd-1716-5254-97c1-29f066d8c0ea","frontmatter__slug":"/manual/attributes","__params":{"frontmatter__slug":"manual"}}},"staticQueryHashes":["1654257956","2011016986","3218290725"]}