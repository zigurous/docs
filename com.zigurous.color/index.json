{
  "api/Zigurous.ColorUtils.Accessibility.html": {
    "href": "api/Zigurous.ColorUtils.Accessibility.html",
    "title": "Class Accessibility | Color Utils",
    "keywords": "Class Accessibility Inheritance System.Object Accessibility Namespace : Zigurous.ColorUtils Syntax public static class Accessibility Methods IsCompliant(Color, Accessibility.Requirement, Color) Determines if the contrast between the color and a background color is compliant to a given accessibility requirement. Declaration public static bool IsCompliant(this Color color, Accessibility.Requirement requirement, Color background) Parameters Type Name Description Color color Accessibility.Requirement requirement Color background Returns Type Description System.Boolean IsCompliant(Accessibility.Requirement, Color, Color) Determines if the contrast between a foreground color and a background color is compliant to a given accessibility requirement. Declaration public static bool IsCompliant(Accessibility.Requirement requirement, Color foreground, Color background) Parameters Type Name Description Accessibility.Requirement requirement Color foreground Color background Returns Type Description System.Boolean MinimumContrastRatio(Accessibility.Requirement) Returns the minimum contrast ratio needed to pass compliance of a given accessibility requirement. Declaration public static float MinimumContrastRatio(this Accessibility.Requirement requirement) Parameters Type Name Description Accessibility.Requirement requirement Returns Type Description System.Single"
  },
  "api/Zigurous.ColorUtils.Accessibility.Requirement.html": {
    "href": "api/Zigurous.ColorUtils.Accessibility.Requirement.html",
    "title": "Enum Accessibility.Requirement | Color Utils",
    "keywords": "Enum Accessibility.Requirement A requirement defining how the visual presentation of text achieves a minimum contrast ratio to pass the accessibility specification - https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast Namespace : Zigurous.ColorUtils Syntax public enum Requirement Fields Name Description Enhanced The visual presentation of text has a contrast ratio of at least 7:1 (Level AAA) - https://www.w3.org/WAI/WCAG21/quickref/?versions=2.0#qr-visual-audio-contrast7 EnhancedLargeText The visual presentation of large text has a contrast ratio of at least 4.5:1 (Level AAA) - https://www.w3.org/WAI/WCAG21/quickref/?versions=2.0#qr-visual-audio-contrast7 Minimum The visual presentation of text has a contrast ratio of at least 4.5:1 (Level AA) - https://www.w3.org/WAI/WCAG21/quickref/?versions=2.0#qr-visual-audio-contrast-contrast MinimumLargeText The visual presentation of large text has a contrast ratio of at least 3:1 (Level AA) - https://www.w3.org/WAI/WCAG21/quickref/?versions=2.0#qr-visual-audio-contrast-contrast"
  },
  "api/Zigurous.ColorUtils.Adjustment.html": {
    "href": "api/Zigurous.ColorUtils.Adjustment.html",
    "title": "Class Adjustment | Color Utils",
    "keywords": "Class Adjustment Inheritance System.Object Adjustment Namespace : Zigurous.ColorUtils Syntax public static class Adjustment Methods Complement(Color) Returns the complement of the color by shifting the hue 180Â°. Declaration public static Color Complement(this Color color) Parameters Type Name Description Color color Returns Type Description Color Darker(Color, Single) Returns a new instance of the color with decreased lightness. Declaration public static Color Darker(this Color color, float percent = 0.1F) Parameters Type Name Description Color color System.Single percent Returns Type Description Color Desaturated(Color, Single) Returns a new instance of the color with decreased saturation. Declaration public static Color Desaturated(this Color color, float percent = 0.1F) Parameters Type Name Description Color color System.Single percent Returns Type Description Color Grayscaled(Color) Returns a new instance of the color with 100% decreased saturation. Declaration public static Color Grayscaled(this Color color) Parameters Type Name Description Color color Returns Type Description Color HueShift(Color, Single) Returns a new instance of the color by shifting its hue by a given amount of degrees. Declaration public static Color HueShift(this Color color, float degrees) Parameters Type Name Description Color color System.Single degrees Returns Type Description Color Inverted(Color) Returns the inverse of the color by subtracting the RGB component values from 1. Declaration public static Color Inverted(this Color color) Parameters Type Name Description Color color Returns Type Description Color Lighter(Color, Single) Returns a new instance of the color with increased lightness. Declaration public static Color Lighter(this Color color, float percent = 0.1F) Parameters Type Name Description Color color System.Single percent Returns Type Description Color Saturated(Color, Single) Returns a new instance of the color with increased saturation. Declaration public static Color Saturated(this Color color, float percent = 0.1F) Parameters Type Name Description Color color System.Single percent Returns Type Description Color"
  },
  "api/Zigurous.ColorUtils.ARGB.html": {
    "href": "api/Zigurous.ColorUtils.ARGB.html",
    "title": "Struct ARGB | Color Utils",
    "keywords": "Struct ARGB The ARGB (alpha, red, green, blue) components of a color in the range [0..1]. Implements IEquatable < ARGB > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct ARGB : IEquatable<ARGB> Constructors ARGB(Color) Declaration public ARGB(Color color) Parameters Type Name Description Color color ARGB(Single, Single, Single, Single) Declaration public ARGB(float alpha, float red, float green, float blue) Parameters Type Name Description System.Single alpha System.Single red System.Single green System.Single blue Fields alpha The alpha component of the color in the range [0..1]. Declaration public float alpha blue The blue component of the color in the range [0..1]. Declaration public float blue green The green component of the color in the range [0..1]. Declaration public float green red The red component of the color in the range [0..1]. Declaration public float red Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(ARGB) Declaration public bool Equals(ARGB other) Parameters Type Name Description ARGB other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single, out Single) Extracts the ARGB (alpha, red, green, blue) components from a color. Declaration public static void Extract(Color color, out float a, out float r, out float g, out float b) Parameters Type Name Description Color color System.Single a System.Single r System.Single g System.Single b GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single, Single) Converts ARGB (alpha, red, green, blue) components into a color. Declaration public static Color ToColor(float alpha, float red, float green, float blue) Parameters Type Name Description System.Single alpha System.Single red System.Single green System.Single blue Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(ARGB, ARGB) Declaration public static bool operator ==(ARGB lhs, ARGB rhs) Parameters Type Name Description ARGB lhs ARGB rhs Returns Type Description System.Boolean Explicit(Color to ARGB) Declaration public static explicit operator ARGB(Color color) Parameters Type Name Description Color color Returns Type Description ARGB Explicit(ARGB to Color) Declaration public static explicit operator Color(ARGB argb) Parameters Type Name Description ARGB argb Returns Type Description Color Implicit(ARGB to RGB) Declaration public static implicit operator RGB(ARGB argb) Parameters Type Name Description ARGB argb Returns Type Description RGB Implicit(ARGB to RGBA) Declaration public static implicit operator RGBA(ARGB argb) Parameters Type Name Description ARGB argb Returns Type Description RGBA Inequality(ARGB, ARGB) Declaration public static bool operator !=(ARGB lhs, ARGB rhs) Parameters Type Name Description ARGB lhs ARGB rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.ARGB255.html": {
    "href": "api/Zigurous.ColorUtils.ARGB255.html",
    "title": "Struct ARGB255 | Color Utils",
    "keywords": "Struct ARGB255 The ARGB (alpha, red, green, blue) components of a color in the range [0..255]. Implements IEquatable < ARGB255 > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct ARGB255 : IEquatable<ARGB255> Constructors ARGB255(Color) Declaration public ARGB255(Color color) Parameters Type Name Description Color color ARGB255(Int32, Int32, Int32, Int32) Declaration public ARGB255(int alpha, int red, int green, int blue) Parameters Type Name Description System.Int32 alpha System.Int32 red System.Int32 green System.Int32 blue Fields alpha The alpha component of the color in the range [0..255]. Declaration public int alpha blue The blue component of the color in the range [0..255]. Declaration public int blue green The green component of the color in the range [0..255]. Declaration public int green red The red component of the color in the range [0..255]. Declaration public int red Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(ARGB255) Declaration public bool Equals(ARGB255 other) Parameters Type Name Description ARGB255 other Returns Type Description System.Boolean Extract(Color, out Int32, out Int32, out Int32, out Int32) Extracts the ARGB (alpha, red, green, blue) components from a color. Declaration public static void Extract(Color color, out int a, out int r, out int g, out int b) Parameters Type Name Description Color color System.Int32 a System.Int32 r System.Int32 g System.Int32 b GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Int32, Int32, Int32, Int32) Converts ARGB (alpha, red, green, blue) components into a color. Declaration public static Color ToColor(int alpha, int red, int green, int blue) Parameters Type Name Description System.Int32 alpha System.Int32 red System.Int32 green System.Int32 blue Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(ARGB255, ARGB255) Declaration public static bool operator ==(ARGB255 lhs, ARGB255 rhs) Parameters Type Name Description ARGB255 lhs ARGB255 rhs Returns Type Description System.Boolean Explicit(Color to ARGB255) Declaration public static explicit operator ARGB255(Color color) Parameters Type Name Description Color color Returns Type Description ARGB255 Explicit(ARGB255 to Color) Declaration public static explicit operator Color(ARGB255 argb) Parameters Type Name Description ARGB255 argb Returns Type Description Color Implicit(ARGB255 to RGB255) Declaration public static implicit operator RGB255(ARGB255 argb) Parameters Type Name Description ARGB255 argb Returns Type Description RGB255 Implicit(ARGB255 to RGBA255) Declaration public static implicit operator RGBA255(ARGB255 argb) Parameters Type Name Description ARGB255 argb Returns Type Description RGBA255 Inequality(ARGB255, ARGB255) Declaration public static bool operator !=(ARGB255 lhs, ARGB255 rhs) Parameters Type Name Description ARGB255 lhs ARGB255 rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.Arithmetic.html": {
    "href": "api/Zigurous.ColorUtils.Arithmetic.html",
    "title": "Class Arithmetic | Color Utils",
    "keywords": "Class Arithmetic Inheritance System.Object Arithmetic Namespace : Zigurous.ColorUtils Syntax public static class Arithmetic Methods Add(Color, Color, Boolean) Returns the result of adding the RGBA component values of lhs to rhs. Clamps the values in the range [0..1]. Declaration public static Color Add(Color lhs, Color rhs, bool alpha = true) Parameters Type Name Description Color lhs Color rhs System.Boolean alpha Returns Type Description Color Divide(Color, Color, Boolean) Returns the result of dividing the RGBA component values of lhs by rhs. Clamps the values in the range [0..1]. Declaration public static Color Divide(Color lhs, Color rhs, bool alpha = true) Parameters Type Name Description Color lhs Color rhs System.Boolean alpha Returns Type Description Color Divide(Color, Single, Boolean) Returns the result of dividing the RGBA component values of lhs by a given divisor. Clamps the values in the range [0..1]. Declaration public static Color Divide(Color color, float divisor, bool alpha = true) Parameters Type Name Description Color color System.Single divisor System.Boolean alpha Returns Type Description Color Multiply(Color, Color, Boolean) Returns the result of multiplying the RGBA component values of lhs to rhs. Clamps the values in the range [0..1]. Declaration public static Color Multiply(Color lhs, Color rhs, bool alpha = true) Parameters Type Name Description Color lhs Color rhs System.Boolean alpha Returns Type Description Color Multiply(Color, Single, Boolean) Returns the result of multiplying the RGBA component values of lhs to a given multiplier. Clamps the values in the range [0..1]. Declaration public static Color Multiply(Color color, float multiplier, bool alpha = true) Parameters Type Name Description Color color System.Single multiplier System.Boolean alpha Returns Type Description Color Subtract(Color, Color, Boolean) Returns the result of subtracting the RGBA component values of rhs from lhs. Clamps the values in the range [0..1]. Declaration public static Color Subtract(Color lhs, Color rhs, bool alpha = true) Parameters Type Name Description Color lhs Color rhs System.Boolean alpha Returns Type Description Color"
  },
  "api/Zigurous.ColorUtils.Averaging.html": {
    "href": "api/Zigurous.ColorUtils.Averaging.html",
    "title": "Class Averaging | Color Utils",
    "keywords": "Class Averaging Inheritance System.Object Averaging Namespace : Zigurous.ColorUtils Syntax public static class Averaging Methods Average(Color, Color, Boolean) Returns the result of averaging the RGBA component values of one color with another. Declaration public static Color Average(Color first, Color second, bool averageAlpha = true) Parameters Type Name Description Color first Color second System.Boolean averageAlpha Returns Type Description Color Average(Color[]) Returns the result of averaging the RGBA component values of multiple colors. Declaration public static Color Average(params Color[] colors) Parameters Type Name Description Color [] colors Returns Type Description Color AveragedWith(Color, Color, Boolean) Returns the result of averaging the RGBA component values of the color with another. Declaration public static Color AveragedWith(this Color color, Color other, bool averageAlpha = true) Parameters Type Name Description Color color Color other System.Boolean averageAlpha Returns Type Description Color"
  },
  "api/Zigurous.ColorUtils.CMYK.html": {
    "href": "api/Zigurous.ColorUtils.CMYK.html",
    "title": "Struct CMYK | Color Utils",
    "keywords": "Struct CMYK The CMYK (cyan, magenta, yellow, black) components of a color in the range [0..1]. Implements IEquatable < CMYK > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct CMYK : IEquatable<CMYK> Constructors CMYK(Color) Declaration public CMYK(Color color) Parameters Type Name Description Color color CMYK(Single, Single, Single, Single) Declaration public CMYK(float cyan, float magenta, float yellow, float black) Parameters Type Name Description System.Single cyan System.Single magenta System.Single yellow System.Single black Fields black The black component of the color in the range [0..1]. Declaration public float black cyan The cyan component of the color in the range [0..1]. Declaration public float cyan magenta The magenta component of the color in the range [0..1]. Declaration public float magenta yellow The yellow component of the color in the range [0..1]. Declaration public float yellow Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(CMYK) Declaration public bool Equals(CMYK other) Parameters Type Name Description CMYK other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single, out Single) Extracts the CMYK (cyan, magenta, yellow, black) components from a color in the range [0..1]. Declaration public static void Extract(Color color, out float c, out float m, out float y, out float k) Parameters Type Name Description Color color System.Single c System.Single m System.Single y System.Single k GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single, Single) Converts CMYK (cyan, magenta, yellow, black) components into a color. Declaration public static Color ToColor(float c, float m, float y, float k) Parameters Type Name Description System.Single c System.Single m System.Single y System.Single k Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(CMYK, CMYK) Declaration public static bool operator ==(CMYK lhs, CMYK rhs) Parameters Type Name Description CMYK lhs CMYK rhs Returns Type Description System.Boolean Explicit(Color to CMYK) Declaration public static explicit operator CMYK(Color color) Parameters Type Name Description Color color Returns Type Description CMYK Explicit(CMYK to Color) Declaration public static explicit operator Color(CMYK cmyk) Parameters Type Name Description CMYK cmyk Returns Type Description Color Inequality(CMYK, CMYK) Declaration public static bool operator !=(CMYK lhs, CMYK rhs) Parameters Type Name Description CMYK lhs CMYK rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.ColorModel.html": {
    "href": "api/Zigurous.ColorUtils.ColorModel.html",
    "title": "Enum ColorModel | Color Utils",
    "keywords": "Enum ColorModel A color model is an abstract mathematical model describing the ways colors can be represented as tuples of numbers, typically as three or four values or color components. Namespace : Zigurous.ColorUtils Syntax public enum ColorModel Fields Name Description CIE The CIE color spaces were the first defined quantitative links between distributions of wavelengths in the electromagnetic visible spectrum, and physiologically perceived colors in human color vision. The mathematical relationships that define these color spaces are essential tools for color management. CMYK The CMYK (cyan, magenta, yellow, black) color model, a subtractive color mixing model used in color printing. Hex A representation of the RGB color model using hexadecimal numbers, i.e., #0080ff . HSB The HSB (hue, saturation, brightness) color model is an alternative representation to the RGB color model designed to more closely align with the way human vision perceives color-making attributes. HSB is the same as HSV. The HSB representation models the way paints of different colors mix together, with the saturation dimension resembling various shades of brightly colored paint, and the brightness dimension resembling the mixture of those paints with varying amounts of black or white paint HSI The HSI (hue, saturation, intensity) color model is an alternative representation to the RGB color model designed to more closely align with the way human vision perceives color-making attributes. The HSI model commonly used for computer vision, which takes H as a hue dimension and the component average I (\"intensity\") as a lightness dimension, does not attempt to \"fill\" a cylinder by its definition of saturation. Instead of presenting color choice or modification interfaces to end users, the goal of HSI is to facilitate separation of shapes in an image. HSL The HSL (hue, saturation, lightness) color model is an alternative representation to the RGB color model designed to more closely align with the way human vision perceives color-making attributes. The HSL model attempts to resemble more perceptual color models such as the natural color system (NCS) or Munsell color system, placing fully saturated colors around a circle at a lightness value of âÂ½, where a lightness value of 0 or 1 is fully black or white, respectively. HSV The HSV (hue, saturation, value) color model is an alternative representation to the RGB color model designed to more closely align with the way human vision perceives color-making attributes. HSV is the same as HSB. The HSV representation models the way paints of different colors mix together, with the saturation dimension resembling various shades of brightly colored paint, and the value dimension resembling the mixture of those paints with varying amounts of black or white paint RGB The RGB (red, green, blue) color model, an additive color mixing, device-dependent model used mainly for the representation and display of images in digital formats. RYB The RYB (red, yellow, blue) color model, a traditional model used in a standard artist's color wheel, particularly in painting. YCbCr The YCbCr color model used as a part of the color image pipeline in video and digital photography systems. Y is the luminance (luma) component and Cb and Cr are the blue-difference and red-difference chrominance (chroma) components, respectively. YIQ YIQ is the color model used by the NTSC color TV system, intended to take advantage of human color-response characteristics. The chroma component I stands for in-phase , while chroma component Q stands for quadrature , referring to the used in quadrature amplitude modulation. YPbPr YPbPr is the analog version of the YCbCr color space; the two are numerically equivalent but YPbPr is designed for use in analog systems while YCbCr is intended for digital video. YUV YUV is a color encoding system typically used as part of a color image pipeline. It encodes a color image or video taking human perception into account, allowing reduced bandwidth for chroma components, thereby typically enabling transmission errors or compression artifacts to be more efficiently masked by human perception than using a \"direct\" RGB-representation."
  },
  "api/Zigurous.ColorUtils.ColorPalette.html": {
    "href": "api/Zigurous.ColorUtils.ColorPalette.html",
    "title": "Class ColorPalette | Color Utils",
    "keywords": "Class ColorPalette Represents a palette of colors that can be saved as a Unity asset. Inheritance System.Object ColorPalette Namespace : Zigurous.ColorUtils Syntax public sealed class ColorPalette : ScriptableObject Fields colors The colors that define the palette. Declaration public Color[] colors Methods CreateMaterialPalette(Material) Converts the color palette into a material palette by instantiating a new material for each color. Declaration public MaterialPalette CreateMaterialPalette(Material baseMaterial) Parameters Type Name Description Material baseMaterial Returns Type Description MaterialPalette Random() Returns a random color from the palette. Declaration public Color Random() Returns Type Description Color"
  },
  "api/Zigurous.ColorUtils.ColorPalettes.html": {
    "href": "api/Zigurous.ColorUtils.ColorPalettes.html",
    "title": "Class ColorPalettes | Color Utils",
    "keywords": "Class ColorPalettes Inheritance System.Object ColorPalettes Namespace : Zigurous.ColorUtils Syntax public static class ColorPalettes Methods Darker(Color, Int32) Generates a given amount of darker colors from a base color. Declaration public static Color[] Darker(this Color baseColor, int amount) Parameters Type Name Description Color baseColor System.Int32 amount Returns Type Description Color [] Desaturated(Color, Int32) Generates a given amount of desaturated colors from a base color. Declaration public static Color[] Desaturated(this Color baseColor, int amount) Parameters Type Name Description Color baseColor System.Int32 amount Returns Type Description Color [] Hues(Color, Single) Generates the hues of a base color with a given increment of degrees. Declaration public static Color[] Hues(this Color baseColor, float degrees = 30F) Parameters Type Name Description Color baseColor System.Single degrees Returns Type Description Color [] Lighter(Color, Int32) Generates a given amount of lighter colors from a base color. Declaration public static Color[] Lighter(this Color baseColor, int amount) Parameters Type Name Description Color baseColor System.Int32 amount Returns Type Description Color [] RandomDarker(Color, Int32, Single, Single) Generates a given amount of random darker colors from a base color. The darker colors can be constrained between a minimum and maximum percentage range if desired. Declaration public static Color[] RandomDarker(this Color baseColor, int amount, float min = 0F, float max = 1F) Parameters Type Name Description Color baseColor System.Int32 amount System.Single min System.Single max Returns Type Description Color [] RandomDesaturated(Color, Int32, Single, Single) Generates a given amount of random desaturated colors from a base color. The desaturated colors can be constrained between a minimum and maximum percentage range if desired. Declaration public static Color[] RandomDesaturated(this Color baseColor, int amount, float min = 0F, float max = 1F) Parameters Type Name Description Color baseColor System.Int32 amount System.Single min System.Single max Returns Type Description Color [] RandomHues(Color, Int32) Generates a given amount of random hues from a base color. Declaration public static Color[] RandomHues(this Color baseColor, int amount) Parameters Type Name Description Color baseColor System.Int32 amount Returns Type Description Color [] RandomLighter(Color, Int32, Single, Single) Generates a given amount of random lighter colors from a base color. The lighter colors can be constrained between a minimum and maximum percentage range if desired. Declaration public static Color[] RandomLighter(this Color baseColor, int amount, float min = 0F, float max = 1F) Parameters Type Name Description Color baseColor System.Int32 amount System.Single min System.Single max Returns Type Description Color [] RandomSaturated(Color, Int32, Single, Single) Generates a given amount of random saturated colors from a base color. The saturated colors can be constrained between a minimum and maximum percentage range if desired. Declaration public static Color[] RandomSaturated(this Color baseColor, int amount, float min = 0F, float max = 1F) Parameters Type Name Description Color baseColor System.Int32 amount System.Single min System.Single max Returns Type Description Color [] RandomShades(Color, Int32, Single, Single) Generates a given amount of random shades from a base color. The shades can be constrained between a minimum and maximum percentage range if desired. Declaration public static Color[] RandomShades(this Color baseColor, int amount, float min = 0F, float max = 1F) Parameters Type Name Description Color baseColor System.Int32 amount System.Single min System.Single max Returns Type Description Color [] RandomTints(Color, Int32, Single, Single) Generates a given amount of random tints from a base color. The tints can be constrained between a minimum and maximum percentage range if desired. Declaration public static Color[] RandomTints(this Color baseColor, int amount, float min = 0F, float max = 1F) Parameters Type Name Description Color baseColor System.Int32 amount System.Single min System.Single max Returns Type Description Color [] RandomTones(Color, Int32, Single, Single) Generates a given amount of random tones from a base color. The tones can be constrained between a minimum and maximum percentage range if desired. Declaration public static Color[] RandomTones(this Color baseColor, int amount, float min = 0F, float max = 1F) Parameters Type Name Description Color baseColor System.Int32 amount System.Single min System.Single max Returns Type Description Color [] Saturated(Color, Int32) Generates a given amount of saturated colors from a base color. Declaration public static Color[] Saturated(this Color baseColor, int amount) Parameters Type Name Description Color baseColor System.Int32 amount Returns Type Description Color [] Shades(Color, Int32) Generates a given amount of shades from a base color. Declaration public static Color[] Shades(this Color baseColor, int amount) Parameters Type Name Description Color baseColor System.Int32 amount Returns Type Description Color [] Tints(Color, Int32) Generates a given amount of tints from a base color. Declaration public static Color[] Tints(this Color baseColor, int amount) Parameters Type Name Description Color baseColor System.Int32 amount Returns Type Description Color [] ToColors(Gradient, Int32) Generates a palette of colors by interpolating a linear amount of stops within a gradient. Declaration public static Color[] ToColors(this Gradient gradient, int stops) Parameters Type Name Description Gradient gradient System.Int32 stops Returns Type Description Color [] Tones(Color, Int32) Generates a given amount of tones from a base color. Declaration public static Color[] Tones(this Color baseColor, int amount) Parameters Type Name Description Color baseColor System.Int32 amount Returns Type Description Color []"
  },
  "api/Zigurous.ColorUtils.ColorSpace.html": {
    "href": "api/Zigurous.ColorUtils.ColorSpace.html",
    "title": "Enum ColorSpace | Color Utils",
    "keywords": "Enum ColorSpace A color space is a specific organization of colors. In combination with physical device profiling, it allows for reproducible representations of color, in both analog and digital representations. Adding a specific mapping function between a color model and a reference color space establishes a definite \"footprint\", known as a gamut, and for a given color model this defines a color space. Namespace : Zigurous.ColorUtils Syntax public enum ColorSpace Fields Name Description CIELAB CIE 1976 L*a*b* is a color space in which L is lightness and a and b are chromaticity components, with the difference that the color values are far more than the human gamut. It was designed to be perceptually uniform with respect to human color vision, meaning that the same amount of numerical change in these values corresponds to about the same amount of visually perceived change. CIELCh The CIELChÂ° color space is a cylindrical representation of the CIELAB or CIELUV cube color space, where C* is the chroma and hÂ° is the hue. The L* lightness value remains unchanged. The LCh color space is not the same as the HSV, HSL or HSB color models, although their values can also be interpreted as a base color, saturation and lightness of a color. The HSL values are a polar coordinate transformation of what is technically defined RGB cube color space. LCh is still perceptually uniform. CIELUV The CIE 1976 L*u*v* color space is a simple-to-compute transformation of the CIE 1931 XYZ color space, but which attempted perceptual uniformity. It is extensively used for applications such as computer graphics which deal with colored lights. CIERGB In the 1920s, W. David Wright and John Guild independently conducted a series of experiments on human sight, from which they tried to determine the colors in human vision, and give it a mathematical basis. The results of these experiments defined the CIE 1931 RGB color space which became the basis for the trichromatic CIE 1931 XYZ color specification. CIEUCS The CIE 1960 UCS color space is another name for the (u, v) chromaticity space devised by David MacAdam. The CIE 1960 UCS does not define a luminance or lightness component. Today, the CIE 1960 UCS is mostly used to calculate correlated color temperature, where the isothermal lines are perpendicular to the Planckian locus. CIEUVW The CIE 1964 U*V*W* color space is based on the CIE 1960 UCS. Wyszecki invented the UVW color space in order to be able to calculate color differences without having to hold the luminance constant. He defined a lightness index W* by simplifying expressions suggested earlier. The chromaticity components U* and V* are defined such that the white point maps to the origin. This arrangement has the benefit of being able to express the loci of chromaticities with constant saturation. CIExyY In CIE xyY, Y is the luminance and x and y represents the chromaticity values derived from the tristimulus values X, Y and Z in the CIE 1931 XYZ color space. CIE xyY is just another way to represent CIE 1931 XYZ. CIEXYZ In 1931, based on the results of the CIE RGB version of the human eye, CIE mathematically determined a theoretical color space called the CIE 1931 XYZ color space to map out all of the colors perceived by the human eye. It is considered to be one of the most accurate color spaces; thus, it is commonly used for color management and conversions. X, Y and Z are extrapolations of RGB created mathematically to avoid negative numbers and are called Tristimulus values. Y means luminance, Z is somewhat equal to blue, and X is a mix of cone response curves chosen to be orthogonal to luminance and non-negative. HunterLab The Hunter Lab color space, defined in 1948 by Richard S. Hunter, is another color space sometimes referred to as \"Lab\". Like CIELAB, it was also designed to be computed via simple formulas from the CIE 1931 XYZ space but to be more perceptually uniform than CIE 1931 XYZ. Hunter named his coordinates L, a, and b; the CIELAB space, defined years later in 1976, named its coordinates L*, a*, and b* to distinguish them from Hunter's coordinates. sRGB sRGB (standard Red Green Blue) is an RGB color space that HP and Microsoft created cooperatively in 1996 to use on monitors, printers, and the Internet. It is often the \"default\" color space for images that contain no color space information, especially if the images' pixels are stored in 8-bit integers per color channel."
  },
  "api/Zigurous.ColorUtils.ColorWheelDivision.html": {
    "href": "api/Zigurous.ColorUtils.ColorWheelDivision.html",
    "title": "Enum ColorWheelDivision | Color Utils",
    "keywords": "Enum ColorWheelDivision A representation of the division of colors on the color wheel. Namespace : Zigurous.ColorUtils Syntax public enum ColorWheelDivision Fields Name Description Full All colors of the color wheel. Primary The primary colors of the color wheel. Secondary The secondary colors of the color wheel. Tertiary The tertiary colors of the color wheel."
  },
  "api/Zigurous.ColorUtils.Components.html": {
    "href": "api/Zigurous.ColorUtils.Components.html",
    "title": "Class Components | Color Utils",
    "keywords": "Class Components Inheritance System.Object Components Namespace : Zigurous.ColorUtils Syntax public static class Components Methods Brightness(Color) Returns the brightness component from the color using the HSB/HSV color model. Declaration public static float Brightness(this Color color) Parameters Type Name Description Color color Returns Type Description System.Single Hue(Color) Returns the hue component from the color. Declaration public static float Hue(this Color color) Parameters Type Name Description Color color Returns Type Description System.Single Lightness(Color) Returns the lightness component from the color using the HSL color model. Declaration public static float Lightness(this Color color) Parameters Type Name Description Color color Returns Type Description System.Single RGB(Color, out Single, out Single, out Single) Retrieves the RGB (red, green, blue) components from the color. Declaration public static void RGB(this Color color, out float r, out float g, out float b) Parameters Type Name Description Color color System.Single r System.Single g System.Single b RGBA(Color, out Single, out Single, out Single, out Single) Retrieves the RGBA (red, green, blue, alpha) components from the color. Declaration public static void RGBA(this Color color, out float r, out float g, out float b, out float a) Parameters Type Name Description Color color System.Single r System.Single g System.Single b System.Single a SaturationL(Color) Returns the saturation component from the color using the HSL color model. Declaration public static float SaturationL(this Color color) Parameters Type Name Description Color color Returns Type Description System.Single SaturationV(Color) Returns the saturation component from the color using the HSV color model. Declaration public static float SaturationV(this Color color) Parameters Type Name Description Color color Returns Type Description System.Single Value(Color) Returns the value component from the color using the HSV color model. Declaration public static float Value(this Color color) Parameters Type Name Description Color color Returns Type Description System.Single WithAlpha(Color, Single) Returns the color with a given alpha component value. Declaration public static Color WithAlpha(this Color color, float alpha) Parameters Type Name Description Color color System.Single alpha Returns Type Description Color WithBlue(Color, Single) Returns the color with a given blue component value. Declaration public static Color WithBlue(this Color color, float blue) Parameters Type Name Description Color color System.Single blue Returns Type Description Color WithGreen(Color, Single) Returns the color with a given green component value. Declaration public static Color WithGreen(this Color color, float green) Parameters Type Name Description Color color System.Single green Returns Type Description Color WithHue(Color, Single) Returns the color with a given hue component value. Declaration public static Color WithHue(this Color color, float hue) Parameters Type Name Description Color color System.Single hue Returns Type Description Color WithRed(Color, Single) Returns the color with a given red component value. Declaration public static Color WithRed(this Color color, float red) Parameters Type Name Description Color color System.Single red Returns Type Description Color"
  },
  "api/Zigurous.ColorUtils.Contrast.html": {
    "href": "api/Zigurous.ColorUtils.Contrast.html",
    "title": "Class Contrast | Color Utils",
    "keywords": "Class Contrast Inheritance System.Object Contrast Namespace : Zigurous.ColorUtils Syntax public static class Contrast Methods ContrastRatioBetween(Color, Color) Returns the contrast ratio between two colors. Declaration public static float ContrastRatioBetween(Color a, Color b) Parameters Type Name Description Color a Color b Returns Type Description System.Single ContrastRatioTo(Color, Color) Returns the contrast ratio of the color to another. Declaration public static float ContrastRatioTo(this Color color, Color other) Parameters Type Name Description Color color Color other Returns Type Description System.Single HigherContrastingColor(Color, Color, Color) Returns the color that has the higher contrast ratio to the current color. Declaration public static Color HigherContrastingColor(this Color color, Color a, Color b) Parameters Type Name Description Color color Color a Color b Returns Type Description Color HighestContrastingColor(Color, Color[]) Returns the color that has the highest contrast ratio to the current color. Declaration public static Color HighestContrastingColor(this Color color, params Color[] colors) Parameters Type Name Description Color color Color [] colors Returns Type Description Color LowerContrastingColor(Color, Color, Color) Returns the color that has the lower contrast ratio to the current color. Declaration public static Color LowerContrastingColor(this Color color, Color a, Color b) Parameters Type Name Description Color color Color a Color b Returns Type Description Color LowestContrastingColor(Color, Color[]) Returns the color that has the lowest contrast ratio to the current color. Declaration public static Color LowestContrastingColor(this Color color, params Color[] colors) Parameters Type Name Description Color color Color [] colors Returns Type Description Color"
  },
  "api/Zigurous.ColorUtils.Conversion.html": {
    "href": "api/Zigurous.ColorUtils.Conversion.html",
    "title": "Class Conversion | Color Utils",
    "keywords": "Class Conversion Inheritance System.Object Conversion Namespace : Zigurous.ColorUtils Syntax public static class Conversion Methods ToARGB(Color) Converts the color into ARGB (alpha, red, green, blue) components in the range [0..1]. Declaration public static ARGB ToARGB(this Color color) Parameters Type Name Description Color color Returns Type Description ARGB ToARGB(Color, out Single, out Single, out Single, out Single) Converts the color into ARGB (alpha, red, green, blue) components in the range [0..1]. Declaration public static void ToARGB(this Color color, out float a, out float r, out float g, out float b) Parameters Type Name Description Color color System.Single a System.Single r System.Single g System.Single b ToARGB255(Color) Converts the color into ARGB (alpha, red, green, blue) components in the range [0..255]. Declaration public static ARGB255 ToARGB255(this Color color) Parameters Type Name Description Color color Returns Type Description ARGB255 ToARGB255(Color, out Int32, out Int32, out Int32, out Int32) Converts the color into ARGB (alpha, red, green, blue) components in the range [0..1]. Declaration public static void ToARGB255(this Color color, out int a, out int r, out int g, out int b) Parameters Type Name Description Color color System.Int32 a System.Int32 r System.Int32 g System.Int32 b ToCMYK(Color) Converts the color into CMYK (cyan, magenta, yellow, black) components in the range [0..1]. Declaration public static CMYK ToCMYK(this Color color) Parameters Type Name Description Color color Returns Type Description CMYK ToCMYK(Color, out Single, out Single, out Single, out Single) Converts the color into CMYK (cyan, magenta, yellow, black) components in the range [0..1]. Declaration public static void ToCMYK(this Color color, out float c, out float m, out float y, out float k) Parameters Type Name Description Color color System.Single c System.Single m System.Single y System.Single k ToHSB(Color) Converts the color into HSB (hue, saturation, brightness) components in the range [0..1]. Declaration public static HSB ToHSB(this Color color) Parameters Type Name Description Color color Returns Type Description HSB ToHSB(Color, out Single, out Single, out Single) Converts the color into HSB (hue, saturation, brightness) components in the range [0..1]. Declaration public static void ToHSB(this Color color, out float h, out float s, out float b) Parameters Type Name Description Color color System.Single h System.Single s System.Single b ToHSI(Color) Converts the color into HSI (hue, saturation, intensity) components in the range [0..1]. Declaration public static HSI ToHSI(this Color color) Parameters Type Name Description Color color Returns Type Description HSI ToHSI(Color, out Single, out Single, out Single) Converts the color into HSI (hue, saturation, intensity) components in the range [0..1]. Declaration public static void ToHSI(this Color color, out float h, out float s, out float i) Parameters Type Name Description Color color System.Single h System.Single s System.Single i ToHSL(Color) Converts the color into HSL (hue, saturation, lightness) components in the range [0..1]. Declaration public static HSL ToHSL(this Color color) Parameters Type Name Description Color color Returns Type Description HSL ToHSL(Color, out Single, out Single, out Single) Converts the color into HSL (hue, saturation, lightness) components in the range [0..1]. Declaration public static void ToHSL(this Color color, out float h, out float s, out float l) Parameters Type Name Description Color color System.Single h System.Single s System.Single l ToHSV(Color) Converts the color into HSV (hue, saturation, value) components in the range [0..1]. Declaration public static HSV ToHSV(this Color color) Parameters Type Name Description Color color Returns Type Description HSV ToHSV(Color, out Single, out Single, out Single) Converts the color into HSV (hue, saturation, value) components in the range [0..1]. Declaration public static void ToHSV(this Color color, out float h, out float s, out float v) Parameters Type Name Description Color color System.Single h System.Single s System.Single v ToHunterLab(Color) Converts the color into Hunter Lab components. Declaration public static HunterLab ToHunterLab(this Color color) Parameters Type Name Description Color color Returns Type Description HunterLab ToHunterLab(Color, out Single, out Single, out Single) Converts the color into Hunter Lab components. Declaration public static void ToHunterLab(this Color color, out float L, out float a, out float b) Parameters Type Name Description Color color System.Single L System.Single a System.Single b ToHunterLab(Color, Illuminant, StandardObserver) Converts the color into Hunter Lab components using the given illuminant and standard observer. Declaration public static HunterLab ToHunterLab(this Color color, Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer Returns Type Description HunterLab ToHunterLab(Color, Illuminant, StandardObserver, out Single, out Single, out Single) Converts the color into Hunter Lab components using the given illuminant and standard observer. Declaration public static void ToHunterLab(this Color color, Illuminant illuminant, StandardObserver observer, out float L, out float a, out float b) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer System.Single L System.Single a System.Single b ToHunterLab(Color, Tristimulus) Converts the color into Hunter Lab components using the given white point. Declaration public static HunterLab ToHunterLab(this Color color, Tristimulus whitePoint) Parameters Type Name Description Color color Tristimulus whitePoint Returns Type Description HunterLab ToHunterLab(Color, Tristimulus, out Single, out Single, out Single) Converts the color into Hunter Lab components using the given white point. Declaration public static void ToHunterLab(this Color color, Tristimulus whitePoint, out float L, out float a, out float b) Parameters Type Name Description Color color Tristimulus whitePoint System.Single L System.Single a System.Single b ToLAB(Color) Converts the color into LAB components. Declaration public static LAB ToLAB(this Color color) Parameters Type Name Description Color color Returns Type Description LAB ToLAB(Color, out Single, out Single, out Single) Converts the color into LAB components. Declaration public static void ToLAB(this Color color, out float L, out float a, out float b) Parameters Type Name Description Color color System.Single L System.Single a System.Single b ToLAB(Color, Illuminant, StandardObserver) Converts the color into LAB components using the given illuminant and standard observer. Declaration public static LAB ToLAB(this Color color, Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer Returns Type Description LAB ToLAB(Color, Illuminant, StandardObserver, out Single, out Single, out Single) Converts the color into LAB components using the given illuminant and standard observer. Declaration public static void ToLAB(this Color color, Illuminant illuminant, StandardObserver observer, out float L, out float a, out float b) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer System.Single L System.Single a System.Single b ToLAB(Color, Tristimulus) Converts the color into LAB components using the given white point. Declaration public static LAB ToLAB(this Color color, Tristimulus whitePoint) Parameters Type Name Description Color color Tristimulus whitePoint Returns Type Description LAB ToLAB(Color, Tristimulus, out Single, out Single, out Single) Converts the color into LAB components using the given white point. Declaration public static void ToLAB(this Color color, Tristimulus whitePoint, out float L, out float a, out float b) Parameters Type Name Description Color color Tristimulus whitePoint System.Single L System.Single a System.Single b ToLCH_ab(Color) Converts the color into LCH_ab components. Declaration public static LCH_ab ToLCH_ab(this Color color) Parameters Type Name Description Color color Returns Type Description LCH_ab ToLCH_ab(Color, out Single, out Single, out Single) Converts the color into LCH_ab components. Declaration public static void ToLCH_ab(this Color color, out float L, out float C, out float h) Parameters Type Name Description Color color System.Single L System.Single C System.Single h ToLCH_ab(Color, Illuminant, StandardObserver) Converts the color into LCH_ab components using the given illuminant and standard observer. Declaration public static LCH_ab ToLCH_ab(this Color color, Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer Returns Type Description LCH_ab ToLCH_ab(Color, Illuminant, StandardObserver, out Single, out Single, out Single) Converts the color into LCH_ab components using the given illuminant and standard observer. Declaration public static void ToLCH_ab(this Color color, Illuminant illuminant, StandardObserver observer, out float L, out float C, out float h) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer System.Single L System.Single C System.Single h ToLCH_ab(Color, Tristimulus) Converts the color into LCH_ab components using the given white point. Declaration public static LCH_ab ToLCH_ab(this Color color, Tristimulus whitePoint) Parameters Type Name Description Color color Tristimulus whitePoint Returns Type Description LCH_ab ToLCH_ab(Color, Tristimulus, out Single, out Single, out Single) Converts the color into LCH_ab components using the given white point. Declaration public static void ToLCH_ab(this Color color, Tristimulus whitePoint, out float L, out float C, out float h) Parameters Type Name Description Color color Tristimulus whitePoint System.Single L System.Single C System.Single h ToLCH_uv(Color) Converts the color into LCH_uv components. Declaration public static LCH_uv ToLCH_uv(this Color color) Parameters Type Name Description Color color Returns Type Description LCH_uv ToLCH_uv(Color, out Single, out Single, out Single) Converts the color into LCH_uv components. Declaration public static void ToLCH_uv(this Color color, out float L, out float C, out float h) Parameters Type Name Description Color color System.Single L System.Single C System.Single h ToLCH_uv(Color, Illuminant, StandardObserver) Converts the color into LCH_uv components using the given illuminant and standard observer. Declaration public static LCH_uv ToLCH_uv(this Color color, Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer Returns Type Description LCH_uv ToLCH_uv(Color, Illuminant, StandardObserver, out Single, out Single, out Single) Converts the color into LCH_uv components using the given illuminant and standard observer. Declaration public static void ToLCH_uv(this Color color, Illuminant illuminant, StandardObserver observer, out float L, out float C, out float h) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer System.Single L System.Single C System.Single h ToLCH_uv(Color, Tristimulus) Converts the color into LCH_uv components using the given white point. Declaration public static LCH_uv ToLCH_uv(this Color color, Tristimulus whitePoint) Parameters Type Name Description Color color Tristimulus whitePoint Returns Type Description LCH_uv ToLCH_uv(Color, Tristimulus, out Single, out Single, out Single) Converts the color into LCH_uv components using the given white point. Declaration public static void ToLCH_uv(this Color color, Tristimulus whitePoint, out float L, out float C, out float h) Parameters Type Name Description Color color Tristimulus whitePoint System.Single L System.Single C System.Single h ToLUV(Color) Converts the color into LUV components. Declaration public static LUV ToLUV(this Color color) Parameters Type Name Description Color color Returns Type Description LUV ToLUV(Color, out Single, out Single, out Single) Converts the color into LUV components. Declaration public static void ToLUV(this Color color, out float L, out float u, out float v) Parameters Type Name Description Color color System.Single L System.Single u System.Single v ToLUV(Color, Illuminant, StandardObserver) Converts the color into LUV components using the given illuminant and standard observer. Declaration public static LUV ToLUV(this Color color, Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer Returns Type Description LUV ToLUV(Color, Illuminant, StandardObserver, out Single, out Single, out Single) Converts the color into LUV components using the given illuminant and standard observer. Declaration public static void ToLUV(this Color color, Illuminant illuminant, StandardObserver observer, out float L, out float u, out float v) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer System.Single L System.Single u System.Single v ToLUV(Color, Tristimulus) Converts the color into LUV components using the given white point. Declaration public static LUV ToLUV(this Color color, Tristimulus whitePoint) Parameters Type Name Description Color color Tristimulus whitePoint Returns Type Description LUV ToLUV(Color, Tristimulus, out Single, out Single, out Single) Converts the color into LUV components using the given white point. Declaration public static void ToLUV(this Color color, Tristimulus whitePoint, out float L, out float u, out float v) Parameters Type Name Description Color color Tristimulus whitePoint System.Single L System.Single u System.Single v ToRGB(Color) Converts the color into RGB (red, green, blue) components in the range [0..1]. Declaration public static RGB ToRGB(this Color color) Parameters Type Name Description Color color Returns Type Description RGB ToRGB(Color, out Single, out Single, out Single) Converts the color into RGB (red, green, blue) components in the range [0..1]. Declaration public static void ToRGB(this Color color, out float r, out float g, out float b) Parameters Type Name Description Color color System.Single r System.Single g System.Single b ToRGB255(Color) Converts the color into RGB (red, green, blue) components in the range [0..255]. Declaration public static RGB255 ToRGB255(this Color color) Parameters Type Name Description Color color Returns Type Description RGB255 ToRGB255(Color, out Int32, out Int32, out Int32) Converts the color into RGB (red, green, blue) components in the range [0..1]. Declaration public static void ToRGB255(this Color color, out int r, out int g, out int b) Parameters Type Name Description Color color System.Int32 r System.Int32 g System.Int32 b ToRGBA(Color) Converts the color into RGBA (red, green, blue, alpha) components in the range [0..1]. Declaration public static RGBA ToRGBA(this Color color) Parameters Type Name Description Color color Returns Type Description RGBA ToRGBA(Color, out Single, out Single, out Single, out Single) Converts the color into RGBA (red, green, blue, alpha) components in the range [0..1]. Declaration public static void ToRGBA(this Color color, out float r, out float g, out float b, out float a) Parameters Type Name Description Color color System.Single r System.Single g System.Single b System.Single a ToRGBA255(Color) Converts the color into RGBA (red, green, blue, alpha) components in the range [0..255]. Declaration public static RGBA255 ToRGBA255(this Color color) Parameters Type Name Description Color color Returns Type Description RGBA255 ToRGBA255(Color, out Int32, out Int32, out Int32, out Int32) Converts the color into RGBA (red, green, blue, alpha) components in the range [0..1]. Declaration public static void ToRGBA255(this Color color, out int r, out int g, out int b, out int a) Parameters Type Name Description Color color System.Int32 r System.Int32 g System.Int32 b System.Int32 a ToUCS(Color) Converts the color into UCS components. Declaration public static UCS ToUCS(this Color color) Parameters Type Name Description Color color Returns Type Description UCS ToUCS(Color, out Single, out Single) Converts the color into UCS components. Declaration public static void ToUCS(this Color color, out float u, out float v) Parameters Type Name Description Color color System.Single u System.Single v ToUVW(Color) Converts the color into UVW components. Declaration public static UVW ToUVW(this Color color) Parameters Type Name Description Color color Returns Type Description UVW ToUVW(Color, out Single, out Single, out Single) Converts the color into UVW components. Declaration public static void ToUVW(this Color color, out float U, out float V, out float W) Parameters Type Name Description Color color System.Single U System.Single V System.Single W ToUVW(Color, Illuminant, StandardObserver) Converts the color into UVW components using the given illuminant and standard observer. Declaration public static UVW ToUVW(this Color color, Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer Returns Type Description UVW ToUVW(Color, Illuminant, StandardObserver, out Single, out Single, out Single) Converts the color into UVW components using the given illuminant and standard observer. Declaration public static void ToUVW(this Color color, Illuminant illuminant, StandardObserver observer, out float U, out float V, out float W) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer System.Single U System.Single V System.Single W ToUVW(Color, Tristimulus) Converts the color into UVW components using the given white point. Declaration public static UVW ToUVW(this Color color, Tristimulus whitePoint) Parameters Type Name Description Color color Tristimulus whitePoint Returns Type Description UVW ToUVW(Color, Tristimulus, out Single, out Single, out Single) Converts the color into UVW components using the given white point. Declaration public static void ToUVW(this Color color, Tristimulus whitePoint, out float U, out float V, out float W) Parameters Type Name Description Color color Tristimulus whitePoint System.Single U System.Single V System.Single W ToxyY(Color) Converts the color into xyY components. Declaration public static xyY ToxyY(this Color color) Parameters Type Name Description Color color Returns Type Description xyY ToxyY(Color, out Single, out Single, out Single) Converts the color into xyY components. Declaration public static void ToxyY(this Color color, out float x, out float y, out float Y) Parameters Type Name Description Color color System.Single x System.Single y System.Single Y ToXYZ(Color) Converts the color into XYZ components. Declaration public static XYZ ToXYZ(this Color color) Parameters Type Name Description Color color Returns Type Description XYZ ToXYZ(Color, out Single, out Single, out Single) Converts the color into XYZ components. Declaration public static void ToXYZ(this Color color, out float X, out float Y, out float Z) Parameters Type Name Description Color color System.Single X System.Single Y System.Single Z ToYCbCr(Color) Converts the color into Yâ²CbCr components. Declaration public static YCbCr ToYCbCr(this Color color) Parameters Type Name Description Color color Returns Type Description YCbCr ToYCbCr(Color, out Single, out Single, out Single) Converts the color into Yâ²CbCr components. Declaration public static void ToYCbCr(this Color color, out float Y, out float Cb, out float Cr) Parameters Type Name Description Color color System.Single Y System.Single Cb System.Single Cr ToYCbCr(Color, SignalEncoding) Converts the color into Yâ²CbCr components using the given signal encoding. Declaration public static YCbCr ToYCbCr(this Color color, SignalEncoding encoding) Parameters Type Name Description Color color SignalEncoding encoding Returns Type Description YCbCr ToYCbCr(Color, SignalEncoding, out Single, out Single, out Single) Converts the color into Yâ²CbCr components using the given signal encoding. Declaration public static void ToYCbCr(this Color color, SignalEncoding encoding, out float Y, out float Cb, out float Cr) Parameters Type Name Description Color color SignalEncoding encoding System.Single Y System.Single Cb System.Single Cr ToYIQ(Color) Converts the color into Yâ²IQ components. Declaration public static YIQ ToYIQ(this Color color) Parameters Type Name Description Color color Returns Type Description YIQ ToYIQ(Color, out Single, out Single, out Single) Converts the color into Yâ²IQ components. Declaration public static void ToYIQ(this Color color, out float Y, out float I, out float Q) Parameters Type Name Description Color color System.Single Y System.Single I System.Single Q ToYIQ(Color, SignalEncoding) Converts the color into Yâ²IQ components using the given signal encoding. Declaration public static YIQ ToYIQ(this Color color, SignalEncoding encoding) Parameters Type Name Description Color color SignalEncoding encoding Returns Type Description YIQ ToYIQ(Color, SignalEncoding, out Single, out Single, out Single) Converts the color into Yâ²IQ components using the given signal encoding. Declaration public static void ToYIQ(this Color color, SignalEncoding encoding, out float Y, out float I, out float Q) Parameters Type Name Description Color color SignalEncoding encoding System.Single Y System.Single I System.Single Q ToYPbPr(Color) Converts the color into Yâ²PbPr components. Declaration public static YPbPr ToYPbPr(this Color color) Parameters Type Name Description Color color Returns Type Description YPbPr ToYPbPr(Color, out Single, out Single, out Single) Converts the color into Yâ²PbPr components. Declaration public static void ToYPbPr(this Color color, out float Y, out float Pb, out float Pr) Parameters Type Name Description Color color System.Single Y System.Single Pb System.Single Pr ToYPbPr(Color, SignalEncoding) Converts the color into Yâ²PbPr components using the given signal encoding. Declaration public static YPbPr ToYPbPr(this Color color, SignalEncoding encoding) Parameters Type Name Description Color color SignalEncoding encoding Returns Type Description YPbPr ToYPbPr(Color, SignalEncoding, out Single, out Single, out Single) Converts the color into Yâ²PbPr components using the given signal encoding. Declaration public static void ToYPbPr(this Color color, SignalEncoding encoding, out float Y, out float Pb, out float Pr) Parameters Type Name Description Color color SignalEncoding encoding System.Single Y System.Single Pb System.Single Pr ToYUV(Color) Converts the color into Yâ²UV components. Declaration public static YUV ToYUV(this Color color) Parameters Type Name Description Color color Returns Type Description YUV ToYUV(Color, out Single, out Single, out Single) Converts the color into Yâ²UV components. Declaration public static void ToYUV(this Color color, out float Y, out float U, out float V) Parameters Type Name Description Color color System.Single Y System.Single U System.Single V ToYUV(Color, SignalEncoding) Converts the color into Yâ²UV components using the given signal encoding. Declaration public static YUV ToYUV(this Color color, SignalEncoding encoding) Parameters Type Name Description Color color SignalEncoding encoding Returns Type Description YUV ToYUV(Color, SignalEncoding, out Single, out Single, out Single) Converts the color into Yâ²UV components using the given signal encoding. Declaration public static void ToYUV(this Color color, SignalEncoding encoding, out float Y, out float U, out float V) Parameters Type Name Description Color color SignalEncoding encoding System.Single Y System.Single U System.Single V WebSafe(Color) Returns the nearest websafe color to the current color. Declaration public static Color WebSafe(this Color color) Parameters Type Name Description Color color Returns Type Description Color"
  },
  "api/Zigurous.ColorUtils.Equality.html": {
    "href": "api/Zigurous.ColorUtils.Equality.html",
    "title": "Class Equality | Color Utils",
    "keywords": "Class Equality Inheritance System.Object Equality Namespace : Zigurous.ColorUtils Syntax public static class Equality Methods Equals(Color, Color, Single, Boolean) Determines if two colors are equal by comparing their component values after being rounded by a given amount. Declaration public static bool Equals(this Color lhs, Color rhs, float rounding, bool compareAlpha = false) Parameters Type Name Description Color lhs Color rhs System.Single rounding System.Boolean compareAlpha Returns Type Description System.Boolean EqualsHex(Color, Color) Determines if two colors are equal by comparing their hexadecimal representations. Declaration public static bool EqualsHex(this Color lhs, Color rhs) Parameters Type Name Description Color lhs Color rhs Returns Type Description System.Boolean"
  },
  "api/Zigurous.ColorUtils.Gradients.html": {
    "href": "api/Zigurous.ColorUtils.Gradients.html",
    "title": "Class Gradients | Color Utils",
    "keywords": "Class Gradients Inheritance System.Object Gradients Namespace : Zigurous.ColorUtils Syntax public static class Gradients Methods Create(Color, Color) Creates a new gradient with a given start color and end color. Declaration public static Gradient Create(Color start, Color end) Parameters Type Name Description Color start Color end Returns Type Description Gradient Create(Color, Color, Int32) Creates a new gradient that interpolates a linear amount of stops between a start color and end color. Declaration public static Gradient Create(Color start, Color end, int stops) Parameters Type Name Description Color start Color end System.Int32 stops Returns Type Description Gradient Create(Color, Color, Single[]) Creates a new gradient that distributes a predefined array of stops between a start color and end color. Declaration public static Gradient Create(Color start, Color end, float[] stops) Parameters Type Name Description Color start Color end System.Single [] stops Returns Type Description Gradient Create(GradientColorKey[], GradientAlphaKey[]) Creates a new gradient and sets the given color keys and alpha keys. Declaration public static Gradient Create(GradientColorKey[] colorKeys, GradientAlphaKey[] alphaKeys) Parameters Type Name Description GradientColorKey [] colorKeys GradientAlphaKey [] alphaKeys Returns Type Description Gradient Create(GradientColorKey[], Single) Creates a new gradient and sets the given color keys with a constant alpha value. Declaration public static Gradient Create(GradientColorKey[] colorKeys, float alpha = 1F) Parameters Type Name Description GradientColorKey [] colorKeys System.Single alpha Returns Type Description Gradient"
  },
  "api/Zigurous.ColorUtils.Harmonies.html": {
    "href": "api/Zigurous.ColorUtils.Harmonies.html",
    "title": "Class Harmonies | Color Utils",
    "keywords": "Class Harmonies Inheritance System.Object Harmonies Namespace : Zigurous.ColorUtils Syntax public static class Harmonies Methods Analogous(Color, Int32, Single) Creates an analogous harmony of the color, a set of colors located next to each other on the color wheel. Declaration public static Color[] Analogous(this Color color, int amount = 3, float hueShift = 30F) Parameters Type Name Description Color color System.Int32 amount System.Single hueShift Returns Type Description Color [] Complementary(Color) Creates a complementary harmony of the color, two colors located opposite to each other on the color wheel. Declaration public static Color[] Complementary(this Color color) Parameters Type Name Description Color color Returns Type Description Color [] DoubleSplitComplementary(Color) Creates a double split complementary harmony of the color, two pairs of complementary colors on either side of the base color. Declaration public static Color[] DoubleSplitComplementary(this Color color) Parameters Type Name Description Color color Returns Type Description Color [] Monochromatic(Color, Int32, Single) Creates a monochromatic harmony of the color, a set of tints and shades formed from a base color. Declaration public static Color[] Monochromatic(this Color color, int amount = 5, float delta = 0.25F) Parameters Type Name Description Color color System.Int32 amount System.Single delta Returns Type Description Color [] SplitComplementary(Color) Creates a split complementary harmony of the color, a base color with two colors adjacent to the directly opposing color on the color wheel. Declaration public static Color[] SplitComplementary(this Color color) Parameters Type Name Description Color color Returns Type Description Color [] Square(Color) Creates a tetradic (square) harmony of the color, four colors evenly spaced around the color wheel to form a square (90Â° hue shifts). Declaration public static Color[] Square(this Color color) Parameters Type Name Description Color color Returns Type Description Color [] Triadic(Color) Creates a triadic harmony of the color, three colors evenly spaced around the color wheel to form a triangle (120Â° hue shifts). Declaration public static Color[] Triadic(this Color color) Parameters Type Name Description Color color Returns Type Description Color []"
  },
  "api/Zigurous.ColorUtils.Hex.html": {
    "href": "api/Zigurous.ColorUtils.Hex.html",
    "title": "Class Hex | Color Utils",
    "keywords": "Class Hex Inheritance System.Object Hex Namespace : Zigurous.ColorUtils Syntax public static class Hex Methods ToARGBColor(Int32) Creates a color from a hexadecimal integer in the ARGB format (AARRGGBB), e.g., 0x80ffff00. Declaration public static Color ToARGBColor(int hex) Parameters Type Name Description System.Int32 hex Returns Type Description Color ToARGBColor(String) Creates a color from a hexadecimal string in the ARGB format (AARRGGBB), e.g., \"#80ffff00\". Declaration public static Color ToARGBColor(string hex) Parameters Type Name Description System.String hex Returns Type Description Color ToHex(Color) Converts the color to a hexadecimal integer in the RGB format (RRGGBB), e.g., 0xffff00. Declaration public static int ToHex(this Color color) Parameters Type Name Description Color color Returns Type Description System.Int32 ToHexARGB(Color) Converts the color to a hexadecimal integer in the ARGB format (AARRGGBB), e.g., 0x80ffff00. Declaration public static int ToHexARGB(this Color color) Parameters Type Name Description Color color Returns Type Description System.Int32 ToHexRGBA(Color) Converts the color to a hexadecimal integer in the RGBA format (RRGGBBAA), e.g., 0xffff0080. Declaration public static int ToHexRGBA(this Color color) Parameters Type Name Description Color color Returns Type Description System.Int32 ToHexString(Color) Converts the color to a hexadecimal string in the RGB format (RRGGBB), e.g., \"#ffff00\". Declaration public static string ToHexString(this Color color) Parameters Type Name Description Color color Returns Type Description System.String ToHexStringARGB(Color) Converts the color to a hexadecimal string in the ARGB format (AARRGGBB), e.g., \"#80ffff00\". Declaration public static string ToHexStringARGB(this Color color) Parameters Type Name Description Color color Returns Type Description System.String ToHexStringRGBA(Color) Converts the color to a hexadecimal string in the RGBA format (RRGGBBAA), e.g., \"#ffff0080\". Declaration public static string ToHexStringRGBA(this Color color) Parameters Type Name Description Color color Returns Type Description System.String ToInt(String) Converts a hex string to a 32-bit integer in base 16. Declaration public static int ToInt(string hex) Parameters Type Name Description System.String hex Returns Type Description System.Int32 ToRGBAColor(Int32) Creates a color from a hexadecimal integer in the RGBA format (RRGGBBAA), e.g., 0xffff0080. Declaration public static Color ToRGBAColor(int hex) Parameters Type Name Description System.Int32 hex Returns Type Description Color ToRGBAColor(String) Creates a color from a hexadecimal string in the ARGB format (RRGGBBAA), e.g., \"#ffff0080\". Declaration public static Color ToRGBAColor(string hex) Parameters Type Name Description System.String hex Returns Type Description Color ToRGBColor(Int32, Single) Creates a color from a hexadecimal integer in the RGB format (RRGGBB), e.g., 0xffff00. Declaration public static Color ToRGBColor(int hex, float alpha = 1F) Parameters Type Name Description System.Int32 hex System.Single alpha Returns Type Description Color ToRGBColor(String, Single) Creates a color from a hexadecimal string in the RGB format (RRGGBB), e.g., \"#ffff00\". Declaration public static Color ToRGBColor(string hex, float alpha = 1F) Parameters Type Name Description System.String hex System.Single alpha Returns Type Description Color"
  },
  "api/Zigurous.ColorUtils.HSB.html": {
    "href": "api/Zigurous.ColorUtils.HSB.html",
    "title": "Struct HSB | Color Utils",
    "keywords": "Struct HSB The HSB (hue, saturation, brightness) components of a color in the range [0..1]. Implements IEquatable < HSB > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct HSB : IEquatable<HSB> Constructors HSB(Color) Declaration public HSB(Color color) Parameters Type Name Description Color color HSB(Single, Single, Single) Declaration public HSB(float hue, float saturation, float brightness) Parameters Type Name Description System.Single hue System.Single saturation System.Single brightness Fields brightness The brightness component of the color in the range [0..1]. Declaration public float brightness hue The hue component of the color in the range [0..1]. Declaration public float hue saturation The saturation component of the color in the range [0..1]. Declaration public float saturation Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(HSB) Declaration public bool Equals(HSB other) Parameters Type Name Description HSB other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the HSB (hue, saturation, brightness) components from a color in the range [0..1]. Declaration public static void Extract(Color color, out float h, out float s, out float b) Parameters Type Name Description Color color System.Single h System.Single s System.Single b GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single) Converts HSB (hue, saturation, brightness) components into a color. Declaration public static Color ToColor(float h, float s, float b) Parameters Type Name Description System.Single h System.Single s System.Single b Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(HSB, HSB) Declaration public static bool operator ==(HSB lhs, HSB rhs) Parameters Type Name Description HSB lhs HSB rhs Returns Type Description System.Boolean Explicit(Color to HSB) Declaration public static explicit operator HSB(Color color) Parameters Type Name Description Color color Returns Type Description HSB Explicit(HSB to Color) Declaration public static explicit operator Color(HSB hsb) Parameters Type Name Description HSB hsb Returns Type Description Color Implicit(HSB to HSV) Declaration public static implicit operator HSV(HSB hsb) Parameters Type Name Description HSB hsb Returns Type Description HSV Inequality(HSB, HSB) Declaration public static bool operator !=(HSB lhs, HSB rhs) Parameters Type Name Description HSB lhs HSB rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.HSI.html": {
    "href": "api/Zigurous.ColorUtils.HSI.html",
    "title": "Struct HSI | Color Utils",
    "keywords": "Struct HSI The HSI (hue, saturation, intensity) components of a color in the range [0..1]. Implements IEquatable < HSI > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct HSI : IEquatable<HSI> Constructors HSI(Color) Declaration public HSI(Color color) Parameters Type Name Description Color color HSI(Single, Single, Single) Declaration public HSI(float hue, float saturation, float intensity) Parameters Type Name Description System.Single hue System.Single saturation System.Single intensity Fields hue The hue component of the color in the range [0..1]. Declaration public float hue intensity The intensity component of the color in the range [0..1]. Declaration public float intensity saturation The saturation component of the color in the range [0..1]. Declaration public float saturation Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(HSI) Declaration public bool Equals(HSI other) Parameters Type Name Description HSI other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the HSI (hue, saturation, intensity) components from a color in the range [0..1]. Declaration public static void Extract(Color color, out float h, out float s, out float i) Parameters Type Name Description Color color System.Single h System.Single s System.Single i GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single) Converts HSI (hue, saturation, intensity) components into a color. Declaration public static Color ToColor(float h, float s, float i) Parameters Type Name Description System.Single h System.Single s System.Single i Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(HSI, HSI) Declaration public static bool operator ==(HSI lhs, HSI rhs) Parameters Type Name Description HSI lhs HSI rhs Returns Type Description System.Boolean Explicit(Color to HSI) Declaration public static explicit operator HSI(Color color) Parameters Type Name Description Color color Returns Type Description HSI Explicit(HSI to Color) Declaration public static explicit operator Color(HSI hsi) Parameters Type Name Description HSI hsi Returns Type Description Color Inequality(HSI, HSI) Declaration public static bool operator !=(HSI lhs, HSI rhs) Parameters Type Name Description HSI lhs HSI rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.HSL.html": {
    "href": "api/Zigurous.ColorUtils.HSL.html",
    "title": "Struct HSL | Color Utils",
    "keywords": "Struct HSL The HSL (hue, saturation, lightness) components of a color in the range [0..1]. Implements IEquatable < HSL > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct HSL : IEquatable<HSL> Constructors HSL(Color) Declaration public HSL(Color color) Parameters Type Name Description Color color HSL(Single, Single, Single) Declaration public HSL(float hue, float saturation, float lightness) Parameters Type Name Description System.Single hue System.Single saturation System.Single lightness Fields hue The hue component of the color in the range [0..1]. Declaration public float hue lightness The lightness component of the color in the range [0..1]. Declaration public float lightness saturation The saturation component of the color in the range [0..1]. Declaration public float saturation Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(HSL) Declaration public bool Equals(HSL other) Parameters Type Name Description HSL other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the HSL (hue, saturation, lightness) components from a color in the range [0..1]. Declaration public static void Extract(Color color, out float h, out float s, out float l) Parameters Type Name Description Color color System.Single h System.Single s System.Single l GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single) Converts HSL (hue, saturation, lightness) components into a color. Declaration public static Color ToColor(float h, float s, float l) Parameters Type Name Description System.Single h System.Single s System.Single l Returns Type Description Color ToHSB(in Single, ref Single, in Single, out Single) Converts HSL (hue, saturation, lightness) components to HSB (hue, saturation, brightness) components in the range [0..1]. Declaration public static void ToHSB(in float h, ref float s, in float l, out float b) Parameters Type Name Description System.Single h System.Single s System.Single l System.Single b ToHSV(in Single, ref Single, in Single, out Single) Converts HSL (hue, saturation, lightness) components to HSV (hue, saturation, value) components in the range [0..1]. Declaration public static void ToHSV(in float h, ref float s, in float l, out float v) Parameters Type Name Description System.Single h System.Single s System.Single l System.Single v ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(HSL, HSL) Declaration public static bool operator ==(HSL lhs, HSL rhs) Parameters Type Name Description HSL lhs HSL rhs Returns Type Description System.Boolean Explicit(Color to HSL) Declaration public static explicit operator HSL(Color color) Parameters Type Name Description Color color Returns Type Description HSL Explicit(HSL to Color) Declaration public static explicit operator Color(HSL hsl) Parameters Type Name Description HSL hsl Returns Type Description Color Inequality(HSL, HSL) Declaration public static bool operator !=(HSL lhs, HSL rhs) Parameters Type Name Description HSL lhs HSL rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.HSV.html": {
    "href": "api/Zigurous.ColorUtils.HSV.html",
    "title": "Struct HSV | Color Utils",
    "keywords": "Struct HSV The HSV (hue, saturation, value) components of a color in the range [0..1]. Implements IEquatable < HSV > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct HSV : IEquatable<HSV> Constructors HSV(Color) Declaration public HSV(Color color) Parameters Type Name Description Color color HSV(Single, Single, Single) Declaration public HSV(float hue, float saturation, float value) Parameters Type Name Description System.Single hue System.Single saturation System.Single value Fields hue The hue component of the color in the range [0..1]. Declaration public float hue saturation The saturation component of the color in the range [0..1]. Declaration public float saturation value The value component of the color in the range [0..1]. Declaration public float value Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(HSV) Declaration public bool Equals(HSV other) Parameters Type Name Description HSV other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the HSV (hue, saturation, value) components from a color in the range [0..1]. Declaration public static void Extract(Color color, out float h, out float s, out float v) Parameters Type Name Description Color color System.Single h System.Single s System.Single v GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single) Converts HSV (hue, saturation, value) components into a color. Declaration public static Color ToColor(float h, float s, float v) Parameters Type Name Description System.Single h System.Single s System.Single v Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(HSV, HSV) Declaration public static bool operator ==(HSV lhs, HSV rhs) Parameters Type Name Description HSV lhs HSV rhs Returns Type Description System.Boolean Explicit(Color to HSV) Declaration public static explicit operator HSV(Color color) Parameters Type Name Description Color color Returns Type Description HSV Explicit(HSV to Color) Declaration public static explicit operator Color(HSV hsv) Parameters Type Name Description HSV hsv Returns Type Description Color Implicit(HSV to HSB) Declaration public static implicit operator HSB(HSV hsv) Parameters Type Name Description HSV hsv Returns Type Description HSB Inequality(HSV, HSV) Declaration public static bool operator !=(HSV lhs, HSV rhs) Parameters Type Name Description HSV lhs HSV rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.html": {
    "href": "api/Zigurous.ColorUtils.html",
    "title": "Namespace Zigurous.ColorUtils | Color Utils",
    "keywords": "Namespace Zigurous.ColorUtils Classes Accessibility Adjustment Arithmetic Averaging ColorPalette Represents a palette of colors that can be saved as a Unity asset. ColorPalettes Components Contrast Conversion Equality Gradients Harmonies Hex IlluminantExtensions Luminance MaterialPalette Represents a palette of materials that can be saved as a Unity asset. Mixing MixingModelExtensions Random SignalEncodingExtensions Temperature Structs ARGB The ARGB (alpha, red, green, blue) components of a color in the range [0..1]. ARGB255 The ARGB (alpha, red, green, blue) components of a color in the range [0..255]. CMYK The CMYK (cyan, magenta, yellow, black) components of a color in the range [0..1]. HSB The HSB (hue, saturation, brightness) components of a color in the range [0..1]. HSI The HSI (hue, saturation, intensity) components of a color in the range [0..1]. HSL The HSL (hue, saturation, lightness) components of a color in the range [0..1]. HSV The HSV (hue, saturation, value) components of a color in the range [0..1]. HunterLab The Hunter Lab components of a color - lightness (L) and chromaticity (a,b). LAB The LAB components of a color - lightness (L) and chromaticity (a,b). LCH_ab The LCH(ab) components of a color - lightness (L), chroma (C), and hue (h). LCH_uv The LCH(uv) components of a color - lightness (L), chroma (C), and hue (h). LUV The LUV components of a color - lightness (L) and chromaticity (u,v). RGB The RGB (red, green, blue) components of a color in the range [0..1]. RGB255 The RGB (red, green, blue) components of a color in the range [0..255]. RGBA The RGBA (red, green, blue, alpha) components of a color in the range [0..1]. RGBA255 The RGBA (red, green, blue, alpha) components of a color in the range [0..255]. Tristimulus Tristimulus system, a system for visually matching a color under standardized conditions against the three primary colors â red, green, and blue; the three results are expressed as X, Y, and Z, respectively, and are called tristimulus values. UCS The UCS components of a color - (u,v) chromaticity coordinates. UVW The UVW components of a color - chromaticity (U,V) and lightness (W). xyY The xyY components of a color - chromaticity (x,y) and luminance (Y). XYZ The XYZ components of a color - luminance (Y) and chromaticity (X,Z). YCbCr The Yâ²CbCr components of a color - luma (Yâ²) and chroma (Cb,Cr). YIQ The Yâ²IQ components of a color - luma (Yâ²) and chroma (I,Q). YPbPr The Yâ²PbPr components of a color - luma (Yâ²) and chroma (Pb,Pr). YUV The Yâ²UV components of a color - luma (Yâ²) and chroma (U,V). Enums Accessibility.Requirement A requirement defining how the visual presentation of text achieves a minimum contrast ratio to pass the accessibility specification - https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast ColorModel A color model is an abstract mathematical model describing the ways colors can be represented as tuples of numbers, typically as three or four values or color components. ColorSpace A color space is a specific organization of colors. In combination with physical device profiling, it allows for reproducible representations of color, in both analog and digital representations. Adding a specific mapping function between a color model and a reference color space establishes a definite \"footprint\", known as a gamut, and for a given color model this defines a color space. ColorWheelDivision A representation of the division of colors on the color wheel. Illuminant A standard illuminant defined by the International Commission on Illumination (CIE) which provides a basis for comparing images or colors recorded under different lighting. MixingModel A model that describes how colors are mixed together to form all other colors. SignalEncoding A standard ITU-R Recommendation signal encoding. ITU-R Recommendations are the names given to the set of international technical standards developed by the Radiocommunication Sector of the International Telecommunication Union (ITU). StandardObserver A CIE color-mapping function called the standard observer which represents an average human's chromatic response while observing an object under an illuminant."
  },
  "api/Zigurous.ColorUtils.HunterLab.html": {
    "href": "api/Zigurous.ColorUtils.HunterLab.html",
    "title": "Struct HunterLab | Color Utils",
    "keywords": "Struct HunterLab The Hunter Lab components of a color - lightness (L) and chromaticity (a,b). Implements IEquatable < HunterLab > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct HunterLab : IEquatable<HunterLab> Constructors HunterLab(Color) Declaration public HunterLab(Color color) Parameters Type Name Description Color color HunterLab(Color, Illuminant, StandardObserver) Declaration public HunterLab(Color color, Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer HunterLab(Color, Tristimulus) Declaration public HunterLab(Color color, Tristimulus whitePoint) Parameters Type Name Description Color color Tristimulus whitePoint HunterLab(Single, Single, Single) Declaration public HunterLab(float L, float a, float b) Parameters Type Name Description System.Single L System.Single a System.Single b Fields a The green-red chromaticity component of the color. Declaration public float a b The blue-yellow chromaticity component of the color. Declaration public float b L The lightness component of the color in the range [0..100]. Declaration public float L Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(HunterLab) Declaration public bool Equals(HunterLab other) Parameters Type Name Description HunterLab other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the Hunter Lab components from a color. Declaration public static void Extract(Color color, out float L, out float a, out float b) Parameters Type Name Description Color color System.Single L System.Single a System.Single b Extract(Color, Illuminant, StandardObserver, out Single, out Single, out Single) Extracts the Hunter Lab components from a color. Declaration public static void Extract(Color color, Illuminant illuminant, StandardObserver observer, out float L, out float a, out float b) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer System.Single L System.Single a System.Single b Extract(Color, Tristimulus, out Single, out Single, out Single) Extracts the Hunter Lab components from a color using the given white point. Declaration public static void Extract(Color color, Tristimulus whitePoint, out float L, out float a, out float b) Parameters Type Name Description Color color Tristimulus whitePoint System.Single L System.Single a System.Single b GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single, Tristimulus) Converts Hunter Lab components into a color using the given white point. Declaration public static Color ToColor(float L, float a, float b, Tristimulus whitePoint) Parameters Type Name Description System.Single L System.Single a System.Single b Tristimulus whitePoint Returns Type Description Color ToColor(Illuminant, StandardObserver) Converts the components into a color using the given illuminant and standard observer. Declaration public Color ToColor(Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Illuminant illuminant StandardObserver observer Returns Type Description Color ToColor(Tristimulus) Converts the components into a color using the given white point. Declaration public Color ToColor(Tristimulus whitePoint) Parameters Type Name Description Tristimulus whitePoint Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(HunterLab, HunterLab) Declaration public static bool operator ==(HunterLab lhs, HunterLab rhs) Parameters Type Name Description HunterLab lhs HunterLab rhs Returns Type Description System.Boolean Explicit(Color to HunterLab) Declaration public static explicit operator HunterLab(Color color) Parameters Type Name Description Color color Returns Type Description HunterLab Explicit(HunterLab to Color) Declaration public static explicit operator Color(HunterLab components) Parameters Type Name Description HunterLab components Returns Type Description Color Inequality(HunterLab, HunterLab) Declaration public static bool operator !=(HunterLab lhs, HunterLab rhs) Parameters Type Name Description HunterLab lhs HunterLab rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.Illuminant.html": {
    "href": "api/Zigurous.ColorUtils.Illuminant.html",
    "title": "Enum Illuminant | Color Utils",
    "keywords": "Enum Illuminant A standard illuminant defined by the International Commission on Illumination (CIE) which provides a basis for comparing images or colors recorded under different lighting. Namespace : Zigurous.ColorUtils Syntax public enum Illuminant Fields Name Description a Incandescent/Tungsten b Old Direct Sunlight at Noon c Old Daylight d50 ICC Profile PCS d55 Mid-morning Daylight d65 Daylight, sRGB, Adobe-RGB d75 North Sky Daylight e Equal Energy f1 Daylight Fluorescent f10 Ultralume 50, Philips TL85 f11 Ultralume 40, Philips TL84 f12 Ultralume 30, Philips TL83 f2 Cool Fluorescent f3 White Fluorescent f4 Warm White Fluorescent f5 Daylight Fluorescent f6 Lite White Fluorescent f7 Daylight Fluorescent, D65 Simulator f8 Sylvania F40, D50 Simulator f9 Cool White Fluorescent"
  },
  "api/Zigurous.ColorUtils.IlluminantExtensions.html": {
    "href": "api/Zigurous.ColorUtils.IlluminantExtensions.html",
    "title": "Class IlluminantExtensions | Color Utils",
    "keywords": "Class IlluminantExtensions Inheritance System.Object IlluminantExtensions Namespace : Zigurous.ColorUtils Syntax public static class IlluminantExtensions Methods GetWhitePoint(Illuminant, StandardObserver, Single) Retrieves the white point tristimulus values of the illuminant while observed under a given standard observer. Values are usually scaled between 0 and 100. Declaration public static Tristimulus GetWhitePoint(this Illuminant illuminant, StandardObserver observer = StandardObserver.Two, float scale = 100F) Parameters Type Name Description Illuminant illuminant StandardObserver observer System.Single scale Returns Type Description Tristimulus"
  },
  "api/Zigurous.ColorUtils.LAB.html": {
    "href": "api/Zigurous.ColorUtils.LAB.html",
    "title": "Struct LAB | Color Utils",
    "keywords": "Struct LAB The LAB components of a color - lightness (L) and chromaticity (a,b). Implements IEquatable < LAB > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct LAB : IEquatable<LAB> Constructors LAB(Color) Declaration public LAB(Color color) Parameters Type Name Description Color color LAB(Color, Illuminant, StandardObserver) Declaration public LAB(Color color, Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer LAB(Color, Tristimulus) Declaration public LAB(Color color, Tristimulus whitePoint) Parameters Type Name Description Color color Tristimulus whitePoint LAB(Single, Single, Single) Declaration public LAB(float L, float a, float b) Parameters Type Name Description System.Single L System.Single a System.Single b Fields a The green-red chromaticity component of the color typically in the range [-128..128]. Declaration public float a b The blue-yellow chromaticity component of the color typically in the range [-128..128]. Declaration public float b L The lightness component of the color in the range [0..100]. Declaration public float L Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(LAB) Declaration public bool Equals(LAB other) Parameters Type Name Description LAB other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the LAB components from a color. Declaration public static void Extract(Color color, out float L, out float a, out float b) Parameters Type Name Description Color color System.Single L System.Single a System.Single b Extract(Color, Illuminant, StandardObserver, out Single, out Single, out Single) Extracts the LAB components from a color. Declaration public static void Extract(Color color, Illuminant illuminant, StandardObserver observer, out float L, out float a, out float b) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer System.Single L System.Single a System.Single b Extract(Color, Tristimulus, out Single, out Single, out Single) Extracts the LAB components from a color using the given white point. Declaration public static void Extract(Color color, Tristimulus whitePoint, out float L, out float a, out float b) Parameters Type Name Description Color color Tristimulus whitePoint System.Single L System.Single a System.Single b GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single, Tristimulus) Converts LAB components into a color using the given white point. Declaration public static Color ToColor(float L, float a, float b, Tristimulus whitePoint) Parameters Type Name Description System.Single L System.Single a System.Single b Tristimulus whitePoint Returns Type Description Color ToColor(Illuminant, StandardObserver) Converts the components into a color using the given illuminant and standard observer. Declaration public Color ToColor(Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Illuminant illuminant StandardObserver observer Returns Type Description Color ToColor(Tristimulus) Converts the components into a color using the given white point. Declaration public Color ToColor(Tristimulus whitePoint) Parameters Type Name Description Tristimulus whitePoint Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(LAB, LAB) Declaration public static bool operator ==(LAB lhs, LAB rhs) Parameters Type Name Description LAB lhs LAB rhs Returns Type Description System.Boolean Explicit(Color to LAB) Declaration public static explicit operator LAB(Color color) Parameters Type Name Description Color color Returns Type Description LAB Explicit(LAB to Color) Declaration public static explicit operator Color(LAB components) Parameters Type Name Description LAB components Returns Type Description Color Inequality(LAB, LAB) Declaration public static bool operator !=(LAB lhs, LAB rhs) Parameters Type Name Description LAB lhs LAB rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.LCH_ab.html": {
    "href": "api/Zigurous.ColorUtils.LCH_ab.html",
    "title": "Struct LCH_ab | Color Utils",
    "keywords": "Struct LCH_ab The LCH(ab) components of a color - lightness (L), chroma (C), and hue (h). Implements IEquatable < LCH_ab > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct LCH_ab : IEquatable<LCH_ab> Constructors LCH_ab(Color) Declaration public LCH_ab(Color color) Parameters Type Name Description Color color LCH_ab(Color, Illuminant, StandardObserver) Declaration public LCH_ab(Color color, Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer LCH_ab(Color, Tristimulus) Declaration public LCH_ab(Color color, Tristimulus whitePoint) Parameters Type Name Description Color color Tristimulus whitePoint LCH_ab(Single, Single, Single) Declaration public LCH_ab(float L, float C, float h) Parameters Type Name Description System.Single L System.Single C System.Single h Fields C The chroma component of the color. Declaration public float C h The hue component of the color in the range [0..360Â°]. Declaration public float h L The lightness component of the color in the range [0..100]. Declaration public float L Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(LCH_ab) Declaration public bool Equals(LCH_ab other) Parameters Type Name Description LCH_ab other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the LCH(ab) components from a color. Declaration public static void Extract(Color color, out float L, out float C, out float h) Parameters Type Name Description Color color System.Single L System.Single C System.Single h Extract(Color, Illuminant, StandardObserver, out Single, out Single, out Single) Extracts the LCH(ab) components from a color using the given illuminant and standard observer. Declaration public static void Extract(Color color, Illuminant illuminant, StandardObserver observer, out float L, out float C, out float h) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer System.Single L System.Single C System.Single h Extract(Color, Tristimulus, out Single, out Single, out Single) Extracts the LCH(ab) components from a color using the given white point. Declaration public static void Extract(Color color, Tristimulus whitePoint, out float L, out float C, out float h) Parameters Type Name Description Color color Tristimulus whitePoint System.Single L System.Single C System.Single h GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single, Tristimulus) Converts LCH(ab) components into a color using the given white point. Declaration public static Color ToColor(float L, float C, float h, Tristimulus whitePoint) Parameters Type Name Description System.Single L System.Single C System.Single h Tristimulus whitePoint Returns Type Description Color ToColor(Illuminant, StandardObserver) Converts the components into a color using the given illuminant and standard observer. Declaration public Color ToColor(Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Illuminant illuminant StandardObserver observer Returns Type Description Color ToColor(Tristimulus) Converts the components into a color using the given white point. Declaration public Color ToColor(Tristimulus whitePoint) Parameters Type Name Description Tristimulus whitePoint Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(LCH_ab, LCH_ab) Declaration public static bool operator ==(LCH_ab lhs, LCH_ab rhs) Parameters Type Name Description LCH_ab lhs LCH_ab rhs Returns Type Description System.Boolean Explicit(Color to LCH_ab) Declaration public static explicit operator LCH_ab(Color color) Parameters Type Name Description Color color Returns Type Description LCH_ab Explicit(LCH_ab to Color) Declaration public static explicit operator Color(LCH_ab components) Parameters Type Name Description LCH_ab components Returns Type Description Color Inequality(LCH_ab, LCH_ab) Declaration public static bool operator !=(LCH_ab lhs, LCH_ab rhs) Parameters Type Name Description LCH_ab lhs LCH_ab rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.LCH_uv.html": {
    "href": "api/Zigurous.ColorUtils.LCH_uv.html",
    "title": "Struct LCH_uv | Color Utils",
    "keywords": "Struct LCH_uv The LCH(uv) components of a color - lightness (L), chroma (C), and hue (h). Implements IEquatable < LCH_uv > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct LCH_uv : IEquatable<LCH_uv> Constructors LCH_uv(Color) Declaration public LCH_uv(Color color) Parameters Type Name Description Color color LCH_uv(Color, Illuminant, StandardObserver) Declaration public LCH_uv(Color color, Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer LCH_uv(Color, Tristimulus) Declaration public LCH_uv(Color color, Tristimulus whitePoint) Parameters Type Name Description Color color Tristimulus whitePoint LCH_uv(Single, Single, Single) Declaration public LCH_uv(float L, float C, float h) Parameters Type Name Description System.Single L System.Single C System.Single h Fields C The chroma component of the color. Declaration public float C h The hue component of the color in the range [0..360Â°]. Declaration public float h L The lightness component of the color in the range [0..100]. Declaration public float L Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(LCH_uv) Declaration public bool Equals(LCH_uv other) Parameters Type Name Description LCH_uv other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the LCH(uv) components from a color. Declaration public static void Extract(Color color, out float L, out float C, out float h) Parameters Type Name Description Color color System.Single L System.Single C System.Single h Extract(Color, Illuminant, StandardObserver, out Single, out Single, out Single) Extracts the LCH(uv) components from a color using the given illuminant and standard observer. Declaration public static void Extract(Color color, Illuminant illuminant, StandardObserver observer, out float L, out float C, out float h) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer System.Single L System.Single C System.Single h Extract(Color, Tristimulus, out Single, out Single, out Single) Extracts the LCH(uv) components from a color using the given white point. Declaration public static void Extract(Color color, Tristimulus whitePoint, out float L, out float C, out float h) Parameters Type Name Description Color color Tristimulus whitePoint System.Single L System.Single C System.Single h GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single, Tristimulus) Converts LCH(uv) components into a color using the given white point. Declaration public static Color ToColor(float L, float C, float h, Tristimulus whitePoint) Parameters Type Name Description System.Single L System.Single C System.Single h Tristimulus whitePoint Returns Type Description Color ToColor(Illuminant, StandardObserver) Converts the components into a color using the given illuminant and standard observer. Declaration public Color ToColor(Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Illuminant illuminant StandardObserver observer Returns Type Description Color ToColor(Tristimulus) Converts the components into a color using the given white point. Declaration public Color ToColor(Tristimulus whitePoint) Parameters Type Name Description Tristimulus whitePoint Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(LCH_uv, LCH_uv) Declaration public static bool operator ==(LCH_uv lhs, LCH_uv rhs) Parameters Type Name Description LCH_uv lhs LCH_uv rhs Returns Type Description System.Boolean Explicit(Color to LCH_uv) Declaration public static explicit operator LCH_uv(Color color) Parameters Type Name Description Color color Returns Type Description LCH_uv Explicit(LCH_uv to Color) Declaration public static explicit operator Color(LCH_uv components) Parameters Type Name Description LCH_uv components Returns Type Description Color Inequality(LCH_uv, LCH_uv) Declaration public static bool operator !=(LCH_uv lhs, LCH_uv rhs) Parameters Type Name Description LCH_uv lhs LCH_uv rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.Luminance.html": {
    "href": "api/Zigurous.ColorUtils.Luminance.html",
    "title": "Class Luminance | Color Utils",
    "keywords": "Class Luminance Inheritance System.Object Luminance Namespace : Zigurous.ColorUtils Syntax public static class Luminance Methods IsDark(Color) Determines if the color is perceived darker than it is lighter. Declaration public static bool IsDark(this Color color) Parameters Type Name Description Color color Returns Type Description System.Boolean IsLight(Color) Determines if the color is perceived lighter than it is darker. Declaration public static bool IsLight(this Color color) Parameters Type Name Description Color color Returns Type Description System.Boolean PerceivedBrightness(Color) Calculates the perceived brightness of the color, measured according to the HSP color model - http://alienryderflex.com/hsp.html . Declaration public static float PerceivedBrightness(this Color color) Parameters Type Name Description Color color Returns Type Description System.Single RelativeLuminance(Color) Calculates the relative luminance of the color, measured according to the HSL color model. Declaration public static float RelativeLuminance(this Color color) Parameters Type Name Description Color color Returns Type Description System.Single"
  },
  "api/Zigurous.ColorUtils.LUV.html": {
    "href": "api/Zigurous.ColorUtils.LUV.html",
    "title": "Struct LUV | Color Utils",
    "keywords": "Struct LUV The LUV components of a color - lightness (L) and chromaticity (u,v). Implements IEquatable < LUV > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct LUV : IEquatable<LUV> Constructors LUV(Color) Declaration public LUV(Color color) Parameters Type Name Description Color color LUV(Color, Illuminant, StandardObserver) Declaration public LUV(Color color, Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer LUV(Color, Tristimulus) Declaration public LUV(Color color, Tristimulus whitePoint) Parameters Type Name Description Color color Tristimulus whitePoint LUV(Single, Single, Single) Declaration public LUV(float L, float u, float v) Parameters Type Name Description System.Single L System.Single u System.Single v Fields L The lightness component of the color in the range [0..100]. Declaration public float L u The green-red chromaticity component of the color typically in the range [-100..100]. Declaration public float u v The blue-yellow chromaticity component of the color typically in the range [-100..100]. Declaration public float v Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(LUV) Declaration public bool Equals(LUV other) Parameters Type Name Description LUV other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the LUV components from a color. Declaration public static void Extract(Color color, out float L, out float u, out float v) Parameters Type Name Description Color color System.Single L System.Single u System.Single v Extract(Color, Illuminant, StandardObserver, out Single, out Single, out Single) Extracts the LUV components from a color. Declaration public static void Extract(Color color, Illuminant illuminant, StandardObserver observer, out float L, out float u, out float v) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer System.Single L System.Single u System.Single v Extract(Color, Tristimulus, out Single, out Single, out Single) Extracts the LUV components from a color using the given white point. Declaration public static void Extract(Color color, Tristimulus whitePoint, out float L, out float u, out float v) Parameters Type Name Description Color color Tristimulus whitePoint System.Single L System.Single u System.Single v GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single, Tristimulus) Converts LUV components into a color using the given white point. Declaration public static Color ToColor(float L, float u, float v, Tristimulus whitePoint) Parameters Type Name Description System.Single L System.Single u System.Single v Tristimulus whitePoint Returns Type Description Color ToColor(Illuminant, StandardObserver) Converts the components into a color using the given illuminant and standard observer. Declaration public Color ToColor(Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Illuminant illuminant StandardObserver observer Returns Type Description Color ToColor(Tristimulus) Converts the components into a color using the given white point. Declaration public Color ToColor(Tristimulus whitePoint) Parameters Type Name Description Tristimulus whitePoint Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(LUV, LUV) Declaration public static bool operator ==(LUV lhs, LUV rhs) Parameters Type Name Description LUV lhs LUV rhs Returns Type Description System.Boolean Explicit(Color to LUV) Declaration public static explicit operator LUV(Color color) Parameters Type Name Description Color color Returns Type Description LUV Explicit(LUV to Color) Declaration public static explicit operator Color(LUV components) Parameters Type Name Description LUV components Returns Type Description Color Inequality(LUV, LUV) Declaration public static bool operator !=(LUV lhs, LUV rhs) Parameters Type Name Description LUV lhs LUV rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.MaterialPalette.html": {
    "href": "api/Zigurous.ColorUtils.MaterialPalette.html",
    "title": "Class MaterialPalette | Color Utils",
    "keywords": "Class MaterialPalette Represents a palette of materials that can be saved as a Unity asset. Inheritance System.Object MaterialPalette Namespace : Zigurous.ColorUtils Syntax public sealed class MaterialPalette : ScriptableObject Fields materials The materials that define the palette. Declaration public Material[] materials Methods CreateColorPalette() Converts the material palette into a color palette using each material's main color. Declaration public ColorPalette CreateColorPalette() Returns Type Description ColorPalette Random() Returns a random material from the palette. Declaration public Material Random() Returns Type Description Material"
  },
  "api/Zigurous.ColorUtils.Mixing.html": {
    "href": "api/Zigurous.ColorUtils.Mixing.html",
    "title": "Class Mixing | Color Utils",
    "keywords": "Class Mixing Inheritance System.Object Mixing Namespace : Zigurous.ColorUtils Syntax public static class Mixing Methods Mix(Color, Color, Single, Boolean) Returns the result of mixing two colors together using a given weight between [0..1]. Declaration public static Color Mix(Color first, Color second, float weight = 0.5F, bool mixAlpha = true) Parameters Type Name Description Color first Color second System.Single weight System.Boolean mixAlpha Returns Type Description Color MixedWith(Color, Color, Single, Boolean) Returns the result of mixing the current color with another using a given weight between [0..1]. Declaration public static Color MixedWith(this Color color, Color other, float weight = 0.5F, bool mixAlpha = true) Parameters Type Name Description Color color Color other System.Single weight System.Boolean mixAlpha Returns Type Description Color Shade(Color, Single) Returns a shade of the color by mixing it with a percentage of black. Declaration public static Color Shade(this Color color, float percent = 0.1F) Parameters Type Name Description Color color System.Single percent Returns Type Description Color Tint(Color, Single) Returns a tint of the color by mixing it with a percentage of white. Declaration public static Color Tint(this Color color, float percent = 0.1F) Parameters Type Name Description Color color System.Single percent Returns Type Description Color Tone(Color, Single) Returns a tone of the color by mixing it with a percentage of gray. Declaration public static Color Tone(this Color color, float percent = 0.1F) Parameters Type Name Description Color color System.Single percent Returns Type Description Color"
  },
  "api/Zigurous.ColorUtils.MixingModel.html": {
    "href": "api/Zigurous.ColorUtils.MixingModel.html",
    "title": "Enum MixingModel | Color Utils",
    "keywords": "Enum MixingModel A model that describes how colors are mixed together to form all other colors. Namespace : Zigurous.ColorUtils Syntax public enum MixingModel Fields Name Description Additive A mixing model that leads to the RGB color model with primary colors of red, green, and blue. The absence of color is black, and the presence of all three primary colors is white. Colors are added together to form white. Additive color mixing simulates light. Subtractive A mixing model that leads to the CMYK color model with primary colors of cyan, magenta, and yellow. The absence of color is white, and the presence of all three primary colors is black. Colors are subtracted to form black. Subtractive color mixing simulates print. Traditional A mixing model that leads to the RYB color model with primary colors of red, yellow, and blue. The absence of color is white, and the presence of all three primary colors is black. Traditional color mixing simulates paint."
  },
  "api/Zigurous.ColorUtils.MixingModelExtensions.html": {
    "href": "api/Zigurous.ColorUtils.MixingModelExtensions.html",
    "title": "Class MixingModelExtensions | Color Utils",
    "keywords": "Class MixingModelExtensions Inheritance System.Object MixingModelExtensions Namespace : Zigurous.ColorUtils Syntax public static class MixingModelExtensions Methods ColorWheel(MixingModel) Returns the primary, secondary, and tertiary colors of the mixing model. Declaration public static Color[] ColorWheel(this MixingModel model) Parameters Type Name Description MixingModel model Returns Type Description Color [] PrimaryColors(MixingModel) Returns the primary colors of the mixing model. Declaration public static Color[] PrimaryColors(this MixingModel model) Parameters Type Name Description MixingModel model Returns Type Description Color [] SecondaryColors(MixingModel) Returns the secondary colors of the mixing model. Declaration public static Color[] SecondaryColors(this MixingModel model) Parameters Type Name Description MixingModel model Returns Type Description Color [] TertiaryColors(MixingModel) Returns the tertiary colors of the mixing model. Declaration public static Color[] TertiaryColors(this MixingModel model) Parameters Type Name Description MixingModel model Returns Type Description Color []"
  },
  "api/Zigurous.ColorUtils.Random.html": {
    "href": "api/Zigurous.ColorUtils.Random.html",
    "title": "Class Random | Color Utils",
    "keywords": "Class Random Inheritance System.Object Random Namespace : Zigurous.ColorUtils Syntax public static class Random Methods Color(Boolean) Returns a random color. Declaration public static Color Color(bool randomizeAlpha = false) Parameters Type Name Description System.Boolean randomizeAlpha Returns Type Description Color Colors(Int32, Boolean) Returns a random array of colors. Declaration public static Color[] Colors(int amount, bool randomizeAlpha = false) Parameters Type Name Description System.Int32 amount System.Boolean randomizeAlpha Returns Type Description Color [] ColorSet(Int32, Boolean) Returns a random set of unique colors. Declaration public static HashSet<Color> ColorSet(int amount, bool randomizeAlpha = false) Parameters Type Name Description System.Int32 amount System.Boolean randomizeAlpha Returns Type Description HashSet < Color > ColorSetNonAlloc(HashSet<Color>, Int32, Boolean) Populates an existing set with unique random colors. This function does not allocate any memory on the heap. Declaration public static void ColorSetNonAlloc(HashSet<Color> colors, int amount, bool randomizeAlpha = false) Parameters Type Name Description HashSet < Color > colors System.Int32 amount System.Boolean randomizeAlpha ColorsNonAlloc(Color[], Boolean) Populates an existing array with random colors. This function does not allocate any memory on the heap. The amount of colors created is determined by the size of the array. Declaration public static void ColorsNonAlloc(Color[] colors, bool randomizeAlpha = false) Parameters Type Name Description Color [] colors System.Boolean randomizeAlpha"
  },
  "api/Zigurous.ColorUtils.RGB.html": {
    "href": "api/Zigurous.ColorUtils.RGB.html",
    "title": "Struct RGB | Color Utils",
    "keywords": "Struct RGB The RGB (red, green, blue) components of a color in the range [0..1]. Implements IEquatable < RGB > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct RGB : IEquatable<RGB> Constructors RGB(Color) Declaration public RGB(Color color) Parameters Type Name Description Color color RGB(Single, Single, Single) Declaration public RGB(float red, float green, float blue) Parameters Type Name Description System.Single red System.Single green System.Single blue Fields blue The blue component of the color in the range [0..1]. Declaration public float blue green The green component of the color in the range [0..1]. Declaration public float green red The red component of the color in the range [0..1]. Declaration public float red Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(RGB) Declaration public bool Equals(RGB other) Parameters Type Name Description RGB other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the RGB (red, green, blue) components from a color. Declaration public static void Extract(Color color, out float r, out float g, out float b) Parameters Type Name Description Color color System.Single r System.Single g System.Single b GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single) Converts RGB (red, green, blue) components into a color. Declaration public static Color ToColor(float red, float green, float blue) Parameters Type Name Description System.Single red System.Single green System.Single blue Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(RGB, RGB) Declaration public static bool operator ==(RGB lhs, RGB rhs) Parameters Type Name Description RGB lhs RGB rhs Returns Type Description System.Boolean Explicit(Color to RGB) Declaration public static explicit operator RGB(Color color) Parameters Type Name Description Color color Returns Type Description RGB Explicit(RGB to Color) Declaration public static explicit operator Color(RGB rgb) Parameters Type Name Description RGB rgb Returns Type Description Color Implicit(RGB to ARGB) Declaration public static implicit operator ARGB(RGB rgb) Parameters Type Name Description RGB rgb Returns Type Description ARGB Implicit(RGB to RGBA) Declaration public static implicit operator RGBA(RGB rgb) Parameters Type Name Description RGB rgb Returns Type Description RGBA Inequality(RGB, RGB) Declaration public static bool operator !=(RGB lhs, RGB rhs) Parameters Type Name Description RGB lhs RGB rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.RGB255.html": {
    "href": "api/Zigurous.ColorUtils.RGB255.html",
    "title": "Struct RGB255 | Color Utils",
    "keywords": "Struct RGB255 The RGB (red, green, blue) components of a color in the range [0..255]. Implements IEquatable < RGB255 > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct RGB255 : IEquatable<RGB255> Constructors RGB255(Color) Declaration public RGB255(Color color) Parameters Type Name Description Color color RGB255(Int32, Int32, Int32) Declaration public RGB255(int red, int green, int blue) Parameters Type Name Description System.Int32 red System.Int32 green System.Int32 blue Fields blue The blue component of the color in the range [0..255]. Declaration public int blue green The green component of the color in the range [0..255]. Declaration public int green red The red component of the color in the range [0..255]. Declaration public int red Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(RGB255) Declaration public bool Equals(RGB255 other) Parameters Type Name Description RGB255 other Returns Type Description System.Boolean Extract(Color, out Int32, out Int32, out Int32) Extracts the RGB (red, green, blue) components from a color. Declaration public static void Extract(Color color, out int r, out int g, out int b) Parameters Type Name Description Color color System.Int32 r System.Int32 g System.Int32 b GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Int32, Int32, Int32) Converts RGB (red, green, blue) components into a color. Declaration public static Color ToColor(int red, int green, int blue) Parameters Type Name Description System.Int32 red System.Int32 green System.Int32 blue Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(RGB255, RGB255) Declaration public static bool operator ==(RGB255 lhs, RGB255 rhs) Parameters Type Name Description RGB255 lhs RGB255 rhs Returns Type Description System.Boolean Explicit(Color to RGB255) Declaration public static explicit operator RGB255(Color color) Parameters Type Name Description Color color Returns Type Description RGB255 Explicit(RGB255 to Color) Declaration public static explicit operator Color(RGB255 rgb) Parameters Type Name Description RGB255 rgb Returns Type Description Color Implicit(RGB255 to ARGB255) Declaration public static implicit operator ARGB255(RGB255 rgb) Parameters Type Name Description RGB255 rgb Returns Type Description ARGB255 Implicit(RGB255 to RGBA255) Declaration public static implicit operator RGBA255(RGB255 rgb) Parameters Type Name Description RGB255 rgb Returns Type Description RGBA255 Inequality(RGB255, RGB255) Declaration public static bool operator !=(RGB255 lhs, RGB255 rhs) Parameters Type Name Description RGB255 lhs RGB255 rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.RGBA.html": {
    "href": "api/Zigurous.ColorUtils.RGBA.html",
    "title": "Struct RGBA | Color Utils",
    "keywords": "Struct RGBA The RGBA (red, green, blue, alpha) components of a color in the range [0..1]. Implements IEquatable < RGBA > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct RGBA : IEquatable<RGBA> Constructors RGBA(Color) Declaration public RGBA(Color color) Parameters Type Name Description Color color RGBA(Single, Single, Single, Single) Declaration public RGBA(float red, float green, float blue, float alpha) Parameters Type Name Description System.Single red System.Single green System.Single blue System.Single alpha Fields alpha The alpha component of the color in the range [0..1]. Declaration public float alpha blue The blue component of the color in the range [0..1]. Declaration public float blue green The green component of the color in the range [0..1]. Declaration public float green red The red component of the color in the range [0..1]. Declaration public float red Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(RGBA) Declaration public bool Equals(RGBA other) Parameters Type Name Description RGBA other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single, out Single) Extracts the RGBA (red, green, blue, alpha) components from a color. Declaration public static void Extract(Color color, out float r, out float g, out float b, out float a) Parameters Type Name Description Color color System.Single r System.Single g System.Single b System.Single a GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single, Single) Converts RGBA (red, green, blue, alpha) components into a color. Declaration public static Color ToColor(float red, float green, float blue, float alpha) Parameters Type Name Description System.Single red System.Single green System.Single blue System.Single alpha Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(RGBA, RGBA) Declaration public static bool operator ==(RGBA lhs, RGBA rhs) Parameters Type Name Description RGBA lhs RGBA rhs Returns Type Description System.Boolean Explicit(Color to RGBA) Declaration public static explicit operator RGBA(Color color) Parameters Type Name Description Color color Returns Type Description RGBA Explicit(RGBA to Color) Declaration public static explicit operator Color(RGBA rgba) Parameters Type Name Description RGBA rgba Returns Type Description Color Implicit(RGBA to ARGB) Declaration public static implicit operator ARGB(RGBA rgba) Parameters Type Name Description RGBA rgba Returns Type Description ARGB Implicit(RGBA to RGB) Declaration public static implicit operator RGB(RGBA rgba) Parameters Type Name Description RGBA rgba Returns Type Description RGB Inequality(RGBA, RGBA) Declaration public static bool operator !=(RGBA lhs, RGBA rhs) Parameters Type Name Description RGBA lhs RGBA rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.RGBA255.html": {
    "href": "api/Zigurous.ColorUtils.RGBA255.html",
    "title": "Struct RGBA255 | Color Utils",
    "keywords": "Struct RGBA255 The RGBA (red, green, blue, alpha) components of a color in the range [0..255]. Implements IEquatable < RGBA255 > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct RGBA255 : IEquatable<RGBA255> Constructors RGBA255(Color) Declaration public RGBA255(Color color) Parameters Type Name Description Color color RGBA255(Int32, Int32, Int32, Int32) Declaration public RGBA255(int red, int green, int blue, int alpha) Parameters Type Name Description System.Int32 red System.Int32 green System.Int32 blue System.Int32 alpha Fields alpha The alpha component of the color in the range [0..255]. Declaration public int alpha blue The blue component of the color in the range [0..255]. Declaration public int blue green The green component of the color in the range [0..255]. Declaration public int green red The red component of the color in the range [0..255]. Declaration public int red Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(RGBA255) Declaration public bool Equals(RGBA255 other) Parameters Type Name Description RGBA255 other Returns Type Description System.Boolean Extract(Color, out Int32, out Int32, out Int32, out Int32) Extracts the RGBA (red, green, blue, alpha) components from a color. Declaration public static void Extract(Color color, out int r, out int g, out int b, out int a) Parameters Type Name Description Color color System.Int32 r System.Int32 g System.Int32 b System.Int32 a GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Int32, Int32, Int32, Int32) Converts RGBA (red, green, blue, alpha) components into a color. Declaration public static Color ToColor(int red, int green, int blue, int alpha) Parameters Type Name Description System.Int32 red System.Int32 green System.Int32 blue System.Int32 alpha Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(RGBA255, RGBA255) Declaration public static bool operator ==(RGBA255 lhs, RGBA255 rhs) Parameters Type Name Description RGBA255 lhs RGBA255 rhs Returns Type Description System.Boolean Explicit(Color to RGBA255) Declaration public static explicit operator RGBA255(Color color) Parameters Type Name Description Color color Returns Type Description RGBA255 Explicit(RGBA255 to Color) Declaration public static explicit operator Color(RGBA255 rgba) Parameters Type Name Description RGBA255 rgba Returns Type Description Color Implicit(RGBA255 to ARGB255) Declaration public static implicit operator ARGB255(RGBA255 rgba) Parameters Type Name Description RGBA255 rgba Returns Type Description ARGB255 Implicit(RGBA255 to RGB255) Declaration public static implicit operator RGB255(RGBA255 rgba) Parameters Type Name Description RGBA255 rgba Returns Type Description RGB255 Inequality(RGBA255, RGBA255) Declaration public static bool operator !=(RGBA255 lhs, RGBA255 rhs) Parameters Type Name Description RGBA255 lhs RGBA255 rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.SignalEncoding.html": {
    "href": "api/Zigurous.ColorUtils.SignalEncoding.html",
    "title": "Enum SignalEncoding | Color Utils",
    "keywords": "Enum SignalEncoding A standard ITU-R Recommendation signal encoding. ITU-R Recommendations are the names given to the set of international technical standards developed by the Radiocommunication Sector of the International Telecommunication Union (ITU). Namespace : Zigurous.ColorUtils Syntax public enum SignalEncoding Fields Name Description Rec601 ITU-R BT.601 (standard-definition television) Rec709 ITU-R BT.709 (high-definition television)"
  },
  "api/Zigurous.ColorUtils.SignalEncodingExtensions.html": {
    "href": "api/Zigurous.ColorUtils.SignalEncodingExtensions.html",
    "title": "Class SignalEncodingExtensions | Color Utils",
    "keywords": "Class SignalEncodingExtensions Inheritance System.Object SignalEncodingExtensions Namespace : Zigurous.ColorUtils Syntax public static class SignalEncodingExtensions Methods GetCoefficients(SignalEncoding) Returns the coefficients of the signal encoding used to calculate figures such as relative luminance and perceived brightness. Declaration public static Tristimulus GetCoefficients(this SignalEncoding encoding) Parameters Type Name Description SignalEncoding encoding Returns Type Description Tristimulus"
  },
  "api/Zigurous.ColorUtils.StandardObserver.html": {
    "href": "api/Zigurous.ColorUtils.StandardObserver.html",
    "title": "Enum StandardObserver | Color Utils",
    "keywords": "Enum StandardObserver A CIE color-mapping function called the standard observer which represents an average human's chromatic response while observing an object under an illuminant. Namespace : Zigurous.ColorUtils Syntax public enum StandardObserver Fields Name Description Ten CIE 1964 10Â° Standard Observer Two CIE 1931 2Â° Standard Observer"
  },
  "api/Zigurous.ColorUtils.Temperature.html": {
    "href": "api/Zigurous.ColorUtils.Temperature.html",
    "title": "Class Temperature | Color Utils",
    "keywords": "Class Temperature Inheritance System.Object Temperature Namespace : Zigurous.ColorUtils Syntax public static class Temperature Methods IsCool(Color) Determines if the color falls within a cool temperature range. Declaration public static bool IsCool(this Color color) Parameters Type Name Description Color color Returns Type Description System.Boolean IsWarm(Color) Determines if the color falls within a warm temperature range. Declaration public static bool IsWarm(this Color color) Parameters Type Name Description Color color Returns Type Description System.Boolean"
  },
  "api/Zigurous.ColorUtils.Tristimulus.html": {
    "href": "api/Zigurous.ColorUtils.Tristimulus.html",
    "title": "Struct Tristimulus | Color Utils",
    "keywords": "Struct Tristimulus Tristimulus system, a system for visually matching a color under standardized conditions against the three primary colors â red, green, and blue; the three results are expressed as X, Y, and Z, respectively, and are called tristimulus values. Implements IEquatable < Tristimulus > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct Tristimulus : IEquatable<Tristimulus> Constructors Tristimulus(Single, Single, Single) Declaration public Tristimulus(float X, float Y, float Z) Parameters Type Name Description System.Single X System.Single Y System.Single Z Fields X Declaration public float X Y Declaration public float Y Z Declaration public float Z Properties Item[Int32] Declaration public float this[int index] { get; set; } Parameters Type Name Description System.Int32 index Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(Tristimulus) Declaration public bool Equals(Tristimulus other) Parameters Type Name Description Tristimulus other Returns Type Description System.Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(Tristimulus, Tristimulus) Declaration public static bool operator ==(Tristimulus lhs, Tristimulus rhs) Parameters Type Name Description Tristimulus lhs Tristimulus rhs Returns Type Description System.Boolean Inequality(Tristimulus, Tristimulus) Declaration public static bool operator !=(Tristimulus lhs, Tristimulus rhs) Parameters Type Name Description Tristimulus lhs Tristimulus rhs Returns Type Description System.Boolean Multiply(Color, Tristimulus) Declaration public static Tristimulus operator *(Color lhs, Tristimulus rhs) Parameters Type Name Description Color lhs Tristimulus rhs Returns Type Description Tristimulus Multiply(Single, Tristimulus) Declaration public static Tristimulus operator *(float lhs, Tristimulus rhs) Parameters Type Name Description System.Single lhs Tristimulus rhs Returns Type Description Tristimulus Multiply(Tristimulus, Color) Declaration public static Tristimulus operator *(Tristimulus lhs, Color rhs) Parameters Type Name Description Tristimulus lhs Color rhs Returns Type Description Tristimulus Multiply(Tristimulus, Single) Declaration public static Tristimulus operator *(Tristimulus lhs, float rhs) Parameters Type Name Description Tristimulus lhs System.Single rhs Returns Type Description Tristimulus Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.UCS.html": {
    "href": "api/Zigurous.ColorUtils.UCS.html",
    "title": "Struct UCS | Color Utils",
    "keywords": "Struct UCS The UCS components of a color - (u,v) chromaticity coordinates. Implements IEquatable < UCS > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct UCS : IEquatable<UCS> Constructors UCS(Color) Declaration public UCS(Color color) Parameters Type Name Description Color color UCS(Single, Single) Declaration public UCS(float u, float v) Parameters Type Name Description System.Single u System.Single v Fields u The u-axis chromaticity coordinate of the color in the range [0..1]. Declaration public float u v The v-axis chromaticity coordinate of the color in the range [0..1]. Declaration public float v Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(UCS) Declaration public bool Equals(UCS other) Parameters Type Name Description UCS other Returns Type Description System.Boolean Extract(Color, out Single, out Single) Extracts the UCS components from a color. Declaration public static void Extract(Color color, out float u, out float v) Parameters Type Name Description Color color System.Single u System.Single v GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single) Converts the components into a color using a given luminance value. Declaration public Color ToColor(float luminance) Parameters Type Name Description System.Single luminance Returns Type Description Color ToColor(Single, Single, Single) Converts UCS components into a color using a given luminance value. Declaration public static Color ToColor(float u, float v, float luminance) Parameters Type Name Description System.Single u System.Single v System.Single luminance Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(UCS, UCS) Declaration public static bool operator ==(UCS lhs, UCS rhs) Parameters Type Name Description UCS lhs UCS rhs Returns Type Description System.Boolean Explicit(Color to UCS) Declaration public static explicit operator UCS(Color color) Parameters Type Name Description Color color Returns Type Description UCS Explicit(UCS to Color) Declaration public static explicit operator Color(UCS components) Parameters Type Name Description UCS components Returns Type Description Color Inequality(UCS, UCS) Declaration public static bool operator !=(UCS lhs, UCS rhs) Parameters Type Name Description UCS lhs UCS rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.UVW.html": {
    "href": "api/Zigurous.ColorUtils.UVW.html",
    "title": "Struct UVW | Color Utils",
    "keywords": "Struct UVW The UVW components of a color - chromaticity (U,V) and lightness (W). Implements IEquatable < UVW > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct UVW : IEquatable<UVW> Constructors UVW(Color) Declaration public UVW(Color color) Parameters Type Name Description Color color UVW(Color, Illuminant, StandardObserver) Declaration public UVW(Color color, Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer UVW(Color, Tristimulus) Declaration public UVW(Color color, Tristimulus whitePoint) Parameters Type Name Description Color color Tristimulus whitePoint UVW(Single, Single, Single) Declaration public UVW(float U, float V, float W) Parameters Type Name Description System.Single U System.Single V System.Single W Fields U The U chromaticity component of the color typically in the range [-100..100]. Declaration public float U V The V chromaticity component of the color typically in the range [-100..100]. Declaration public float V W The lightness component of the color in the range [0..100]. Declaration public float W Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(UVW) Declaration public bool Equals(UVW other) Parameters Type Name Description UVW other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the UVW components from a color. Declaration public static void Extract(Color color, out float U, out float V, out float W) Parameters Type Name Description Color color System.Single U System.Single V System.Single W Extract(Color, Illuminant, StandardObserver, out Single, out Single, out Single) Extracts the UVW components from a color using the given illuminant and standard observer. Declaration public static void Extract(Color color, Illuminant illuminant, StandardObserver observer, out float U, out float V, out float W) Parameters Type Name Description Color color Illuminant illuminant StandardObserver observer System.Single U System.Single V System.Single W Extract(Color, Tristimulus, out Single, out Single, out Single) Extracts the UVW components from a color using the given white point. Declaration public static void Extract(Color color, Tristimulus whitePoint, out float U, out float V, out float W) Parameters Type Name Description Color color Tristimulus whitePoint System.Single U System.Single V System.Single W GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single, Tristimulus) Converts UVW components into a color using the given white point. Declaration public static Color ToColor(float U, float V, float W, Tristimulus whitePoint) Parameters Type Name Description System.Single U System.Single V System.Single W Tristimulus whitePoint Returns Type Description Color ToColor(Illuminant, StandardObserver) Converts the components into a color using the given illuminant and standard observer. Declaration public Color ToColor(Illuminant illuminant, StandardObserver observer) Parameters Type Name Description Illuminant illuminant StandardObserver observer Returns Type Description Color ToColor(Tristimulus) Converts the components into a color using the given white point. Declaration public Color ToColor(Tristimulus whitePoint) Parameters Type Name Description Tristimulus whitePoint Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(UVW, UVW) Declaration public static bool operator ==(UVW lhs, UVW rhs) Parameters Type Name Description UVW lhs UVW rhs Returns Type Description System.Boolean Explicit(Color to UVW) Declaration public static explicit operator UVW(Color color) Parameters Type Name Description Color color Returns Type Description UVW Explicit(UVW to Color) Declaration public static explicit operator Color(UVW components) Parameters Type Name Description UVW components Returns Type Description Color Inequality(UVW, UVW) Declaration public static bool operator !=(UVW lhs, UVW rhs) Parameters Type Name Description UVW lhs UVW rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.xyY.html": {
    "href": "api/Zigurous.ColorUtils.xyY.html",
    "title": "Struct xyY | Color Utils",
    "keywords": "Struct xyY The xyY components of a color - chromaticity (x,y) and luminance (Y). Implements IEquatable < xyY > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct xyY : IEquatable<xyY> Constructors xyY(Color) Declaration public xyY(Color color) Parameters Type Name Description Color color xyY(Single, Single, Single) Declaration public xyY(float x, float y, float Y) Parameters Type Name Description System.Single x System.Single y System.Single Y Fields x The x-axis chromaticity coordinate of the color in the range [0..1]. Declaration public float x y The y-axis chromaticity coordinate of the color in the range [0..1]. Declaration public float y Y The luminance component of the color in the range [0..100]. Declaration public float Y Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(xyY) Declaration public bool Equals(xyY other) Parameters Type Name Description xyY other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the xyY components from a color. Declaration public static void Extract(Color color, out float x, out float y, out float Y) Parameters Type Name Description Color color System.Single x System.Single y System.Single Y GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single) Converts xyY components into a color. Declaration public static Color ToColor(float x, float y, float Y) Parameters Type Name Description System.Single x System.Single y System.Single Y Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(xyY, xyY) Declaration public static bool operator ==(xyY lhs, xyY rhs) Parameters Type Name Description xyY lhs xyY rhs Returns Type Description System.Boolean Explicit(Color to xyY) Declaration public static explicit operator xyY(Color color) Parameters Type Name Description Color color Returns Type Description xyY Explicit(xyY to Color) Declaration public static explicit operator Color(xyY components) Parameters Type Name Description xyY components Returns Type Description Color Inequality(xyY, xyY) Declaration public static bool operator !=(xyY lhs, xyY rhs) Parameters Type Name Description xyY lhs xyY rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.XYZ.html": {
    "href": "api/Zigurous.ColorUtils.XYZ.html",
    "title": "Struct XYZ | Color Utils",
    "keywords": "Struct XYZ The XYZ components of a color - luminance (Y) and chromaticity (X,Z). Implements IEquatable < XYZ > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct XYZ : IEquatable<XYZ> Constructors XYZ(Color) Declaration public XYZ(Color color) Parameters Type Name Description Color color XYZ(Single, Single, Single) Declaration public XYZ(float X, float Y, float Z) Parameters Type Name Description System.Single X System.Single Y System.Single Z Fields X A mix of cone response curves chosen to be orthogonal to luminance and non-negative in the range [0..95.047]. Declaration public float X Y The luminance component of the colo in the range [0..100]. Declaration public float Y Z Somewhat equal to blue, or the \"S\" cone response in the range [0..108.883]. Declaration public float Z Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(XYZ) Declaration public bool Equals(XYZ other) Parameters Type Name Description XYZ other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the XYZ components from a color. Declaration public static void Extract(Color color, out float X, out float Y, out float Z) Parameters Type Name Description Color color System.Single X System.Single Y System.Single Z GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single) Converts XYZ components into a color. Declaration public static Color ToColor(float X, float Y, float Z) Parameters Type Name Description System.Single X System.Single Y System.Single Z Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(XYZ, XYZ) Declaration public static bool operator ==(XYZ lhs, XYZ rhs) Parameters Type Name Description XYZ lhs XYZ rhs Returns Type Description System.Boolean Explicit(Color to XYZ) Declaration public static explicit operator XYZ(Color color) Parameters Type Name Description Color color Returns Type Description XYZ Explicit(XYZ to Color) Declaration public static explicit operator Color(XYZ components) Parameters Type Name Description XYZ components Returns Type Description Color Inequality(XYZ, XYZ) Declaration public static bool operator !=(XYZ lhs, XYZ rhs) Parameters Type Name Description XYZ lhs XYZ rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.YCbCr.html": {
    "href": "api/Zigurous.ColorUtils.YCbCr.html",
    "title": "Struct YCbCr | Color Utils",
    "keywords": "Struct YCbCr The Yâ²CbCr components of a color - luma (Yâ²) and chroma (Cb,Cr). Implements IEquatable < YCbCr > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct YCbCr : IEquatable<YCbCr> Constructors YCbCr(Color) Declaration public YCbCr(Color color) Parameters Type Name Description Color color YCbCr(Color, SignalEncoding) Declaration public YCbCr(Color color, SignalEncoding encoding) Parameters Type Name Description Color color SignalEncoding encoding YCbCr(Single, Single, Single) Declaration public YCbCr(float Y, float Cb, float Cr) Parameters Type Name Description System.Single Y System.Single Cb System.Single Cr YCbCr(YPbPr) Declaration public YCbCr(YPbPr yPbPr) Parameters Type Name Description YPbPr yPbPr Fields Cb The blue-difference chroma component of the color in the full range [0..255]. Declaration public float Cb Cr The red-difference chroma component of the color in the full range [0..255]. Declaration public float Cr Y The luma component of the color in the full range [0..255]. Declaration public float Y Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(YCbCr) Declaration public bool Equals(YCbCr other) Parameters Type Name Description YCbCr other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the Yâ²CbCr components from a color. Declaration public static void Extract(Color color, out float Y, out float Cb, out float Cr) Parameters Type Name Description Color color System.Single Y System.Single Cb System.Single Cr Extract(Color, SignalEncoding, out Single, out Single, out Single) Extracts the Yâ²CbCr components from a color using the given signal encoding. Declaration public static void Extract(Color color, SignalEncoding encoding, out float Y, out float Cb, out float Cr) Parameters Type Name Description Color color SignalEncoding encoding System.Single Y System.Single Cb System.Single Cr GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single, SignalEncoding) Converts Yâ²CbCr components into a color using the given signal encoding. Declaration public static Color ToColor(float Y, float Cb, float Cr, SignalEncoding encoding) Parameters Type Name Description System.Single Y System.Single Cb System.Single Cr SignalEncoding encoding Returns Type Description Color ToColor(SignalEncoding) Converts the components into a color using the given signal encoding. Declaration public Color ToColor(SignalEncoding encoding) Parameters Type Name Description SignalEncoding encoding Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() ToYPbPr(ref Single, in Single, in Single, out Single, out Single) Converts Yâ²CbCr components to Yâ²PbPr components. Declaration public static void ToYPbPr(ref float Y, in float Cb, in float Cr, out float Pb, out float Pr) Parameters Type Name Description System.Single Y System.Single Cb System.Single Cr System.Single Pb System.Single Pr Operators Equality(YCbCr, YCbCr) Declaration public static bool operator ==(YCbCr lhs, YCbCr rhs) Parameters Type Name Description YCbCr lhs YCbCr rhs Returns Type Description System.Boolean Explicit(Color to YCbCr) Declaration public static explicit operator YCbCr(Color color) Parameters Type Name Description Color color Returns Type Description YCbCr Explicit(YCbCr to Color) Declaration public static explicit operator Color(YCbCr yCbCr) Parameters Type Name Description YCbCr yCbCr Returns Type Description Color Implicit(YPbPr to YCbCr) Declaration public static implicit operator YCbCr(YPbPr yPbPr) Parameters Type Name Description YPbPr yPbPr Returns Type Description YCbCr Inequality(YCbCr, YCbCr) Declaration public static bool operator !=(YCbCr lhs, YCbCr rhs) Parameters Type Name Description YCbCr lhs YCbCr rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.YIQ.html": {
    "href": "api/Zigurous.ColorUtils.YIQ.html",
    "title": "Struct YIQ | Color Utils",
    "keywords": "Struct YIQ The Yâ²IQ components of a color - luma (Yâ²) and chroma (I,Q). Implements IEquatable < YIQ > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct YIQ : IEquatable<YIQ> Constructors YIQ(Color) Declaration public YIQ(Color color) Parameters Type Name Description Color color YIQ(Color, SignalEncoding) Declaration public YIQ(Color color, SignalEncoding encoding) Parameters Type Name Description Color color SignalEncoding encoding YIQ(Single, Single, Single) Declaration public YIQ(float Y, float I, float Q) Parameters Type Name Description System.Single Y System.Single I System.Single Q Fields I The orange-blue chroma component of the color in the range [-0.596..0.596]. Declaration public float I Q The purple-green chroma component of the color in the range [-0.523..0.523]. Declaration public float Q Y The luma component of the color in the range [0..1]. Declaration public float Y Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(YIQ) Declaration public bool Equals(YIQ other) Parameters Type Name Description YIQ other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the Yâ²IQ components from a color. Declaration public static void Extract(Color color, out float Y, out float I, out float Q) Parameters Type Name Description Color color System.Single Y System.Single I System.Single Q Extract(Color, SignalEncoding, out Single, out Single, out Single) Extracts the Yâ²IQ components from a color using the given signal encoding. Declaration public static void Extract(Color color, SignalEncoding encoding, out float Y, out float I, out float Q) Parameters Type Name Description Color color SignalEncoding encoding System.Single Y System.Single I System.Single Q GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single, SignalEncoding) Converts Yâ²IQ components into a color using the given signal encoding. Declaration public static Color ToColor(float Y, float I, float Q, SignalEncoding encoding) Parameters Type Name Description System.Single Y System.Single I System.Single Q SignalEncoding encoding Returns Type Description Color ToColor(SignalEncoding) Converts the components into a color using a given signal encoding. Declaration public Color ToColor(SignalEncoding encoding) Parameters Type Name Description SignalEncoding encoding Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(YIQ, YIQ) Declaration public static bool operator ==(YIQ lhs, YIQ rhs) Parameters Type Name Description YIQ lhs YIQ rhs Returns Type Description System.Boolean Explicit(Color to YIQ) Declaration public static explicit operator YIQ(Color color) Parameters Type Name Description Color color Returns Type Description YIQ Explicit(YIQ to Color) Declaration public static explicit operator Color(YIQ yiq) Parameters Type Name Description YIQ yiq Returns Type Description Color Inequality(YIQ, YIQ) Declaration public static bool operator !=(YIQ lhs, YIQ rhs) Parameters Type Name Description YIQ lhs YIQ rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.YPbPr.html": {
    "href": "api/Zigurous.ColorUtils.YPbPr.html",
    "title": "Struct YPbPr | Color Utils",
    "keywords": "Struct YPbPr The Yâ²PbPr components of a color - luma (Yâ²) and chroma (Pb,Pr). Implements IEquatable < YPbPr > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct YPbPr : IEquatable<YPbPr> Constructors YPbPr(Color) Declaration public YPbPr(Color color) Parameters Type Name Description Color color YPbPr(Color, SignalEncoding) Declaration public YPbPr(Color color, SignalEncoding encoding) Parameters Type Name Description Color color SignalEncoding encoding YPbPr(Single, Single, Single) Declaration public YPbPr(float Y, float Pb, float Pr) Parameters Type Name Description System.Single Y System.Single Pb System.Single Pr YPbPr(YCbCr) Declaration public YPbPr(YCbCr yCbCr) Parameters Type Name Description YCbCr yCbCr Fields Pb The blue-difference chroma component of the color in the range [-0.5..0.5]. Declaration public float Pb Pr The red-difference chroma component of the color in the range [-0.5..0.5]. Declaration public float Pr Y The luma component of the color in the range [0..1]. Declaration public float Y Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(YPbPr) Declaration public bool Equals(YPbPr other) Parameters Type Name Description YPbPr other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the Yâ²PbPr components from a color. Declaration public static void Extract(Color color, out float Y, out float Pb, out float Pr) Parameters Type Name Description Color color System.Single Y System.Single Pb System.Single Pr Extract(Color, SignalEncoding, out Single, out Single, out Single) Extracts the Yâ²PbPr components from a color using the given signal encoding. Declaration public static void Extract(Color color, SignalEncoding encoding, out float Y, out float Pb, out float Pr) Parameters Type Name Description Color color SignalEncoding encoding System.Single Y System.Single Pb System.Single Pr GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single, SignalEncoding) Converts Yâ²PbPr components into a color using the given signal encoding. Declaration public static Color ToColor(float Y, float Pb, float Pr, SignalEncoding encoding) Parameters Type Name Description System.Single Y System.Single Pb System.Single Pr SignalEncoding encoding Returns Type Description Color ToColor(SignalEncoding) Converts the components into a color using the given signal encoding. Declaration public Color ToColor(SignalEncoding encoding) Parameters Type Name Description SignalEncoding encoding Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() ToYCbCr(ref Single, in Single, in Single, out Single, out Single) Converts Yâ²PbPr components to Yâ²CbCr components. Declaration public static void ToYCbCr(ref float Y, in float Pb, in float Pr, out float Cb, out float Cr) Parameters Type Name Description System.Single Y System.Single Pb System.Single Pr System.Single Cb System.Single Cr Operators Equality(YPbPr, YPbPr) Declaration public static bool operator ==(YPbPr lhs, YPbPr rhs) Parameters Type Name Description YPbPr lhs YPbPr rhs Returns Type Description System.Boolean Explicit(Color to YPbPr) Declaration public static explicit operator YPbPr(Color color) Parameters Type Name Description Color color Returns Type Description YPbPr Explicit(YPbPr to Color) Declaration public static explicit operator Color(YPbPr yPbPr) Parameters Type Name Description YPbPr yPbPr Returns Type Description Color Implicit(YCbCr to YPbPr) Declaration public static implicit operator YPbPr(YCbCr yCbCr) Parameters Type Name Description YCbCr yCbCr Returns Type Description YPbPr Inequality(YPbPr, YPbPr) Declaration public static bool operator !=(YPbPr lhs, YPbPr rhs) Parameters Type Name Description YPbPr lhs YPbPr rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Zigurous.ColorUtils.YUV.html": {
    "href": "api/Zigurous.ColorUtils.YUV.html",
    "title": "Struct YUV | Color Utils",
    "keywords": "Struct YUV The Yâ²UV components of a color - luma (Yâ²) and chroma (U,V). Implements IEquatable < YUV > Namespace : Zigurous.ColorUtils Syntax [Serializable] public struct YUV : IEquatable<YUV> Constructors YUV(Color) Declaration public YUV(Color color) Parameters Type Name Description Color color YUV(Color, SignalEncoding) Declaration public YUV(Color color, SignalEncoding encoding) Parameters Type Name Description Color color SignalEncoding encoding YUV(Single, Single, Single) Declaration public YUV(float Y, float U, float V) Parameters Type Name Description System.Single Y System.Single U System.Single V Fields U The blue-difference chroma component of the color in the range [-0.436..0.436]. Declaration public float U V The red-difference chroma component of the color in the range [-0.615..0.615]. Declaration public float V Y The luma component of the color in the range [0..1]. Declaration public float Y Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(YUV) Declaration public bool Equals(YUV other) Parameters Type Name Description YUV other Returns Type Description System.Boolean Extract(Color, out Single, out Single, out Single) Extracts the Yâ²UV components from a color. Declaration public static void Extract(Color color, out float Y, out float U, out float V) Parameters Type Name Description Color color System.Single Y System.Single U System.Single V Extract(Color, SignalEncoding, out Single, out Single, out Single) Extracts the Yâ²UV components from a color using the given signal encoding. Declaration public static void Extract(Color color, SignalEncoding encoding, out float Y, out float U, out float V) Parameters Type Name Description Color color SignalEncoding encoding System.Single Y System.Single U System.Single V GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToColor() Converts the components into a color. Declaration public Color ToColor() Returns Type Description Color ToColor(Single, Single, Single, SignalEncoding) Converts Yâ²UV components into a color using the given signal encoding. Declaration public static Color ToColor(float Y, float U, float V, SignalEncoding encoding) Parameters Type Name Description System.Single Y System.Single U System.Single V SignalEncoding encoding Returns Type Description Color ToColor(SignalEncoding) Converts the components into a color using the given signal encoding. Declaration public Color ToColor(SignalEncoding encoding) Parameters Type Name Description SignalEncoding encoding Returns Type Description Color ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(YUV, YUV) Declaration public static bool operator ==(YUV lhs, YUV rhs) Parameters Type Name Description YUV lhs YUV rhs Returns Type Description System.Boolean Explicit(Color to YUV) Declaration public static explicit operator YUV(Color color) Parameters Type Name Description Color color Returns Type Description YUV Explicit(YUV to Color) Declaration public static explicit operator Color(YUV yuv) Parameters Type Name Description YUV yuv Returns Type Description Color Inequality(YUV, YUV) Declaration public static bool operator !=(YUV lhs, YUV rhs) Parameters Type Name Description YUV lhs YUV rhs Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | Color Utils",
    "keywords": "Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning ."
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "License | Color Utils",
    "keywords": "License Copyright (c) 2021 Zigurous. All Rights Reserved."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Color Utils | Color Utils",
    "keywords": "Color Utils The Color Utils package is a robust utility library for working with colors in Unity projects. Included in the package are dozens of functions for color mixing, conversion, generating color palettes, and much more."
  },
  "manual/installation.html": {
    "href": "manual/installation.html",
    "title": "Installation | Color Utils",
    "keywords": "Installation Use the Unity Package Manager to install the Color Utils package. Open the Package Manager in Window > Package Manager Click the add ( + ) button in the status bar Select Add package from git URL from the add menu Enter the following Git URL in the text box and click Add: https://github.com/zigurous/unity-color-utils.git For more information on the Package Manager and installing packages, see the following pages: Unityâs Package Manager Installing from a Git URL Importing Import the package namespace in each script you want to use it. You may need to regenerate project files/assemblies first. using Zigurous.ColorUtils; Source Code The source code for the Color Utils package is in the following repository: https://github.com/zigurous/unity-color-utils"
  }
}