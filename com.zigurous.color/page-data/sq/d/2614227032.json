{"data":{"api":{"nodes":[{"items":[{"children":["Zigurous.ColorPro.Accessibility.Requirement.Enhanced","Zigurous.ColorPro.Accessibility.Requirement.EnhancedLargeText","Zigurous.ColorPro.Accessibility.Requirement.Minimum","Zigurous.ColorPro.Accessibility.Requirement.MinimumLargeText"],"id":"Accessibility.Requirement","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Accessibility.Requirement","nameWithType":"Accessibility.Requirement","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nA requirement defining how the visual presentation of text achieves\na minimum contrast ratio to pass the accessibility specification -\nhttps://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast\n","syntax":{"content":"public enum Requirement","parameters":null,"return":null,"typeParameters":null},"type":"Enum","uid":"Zigurous.ColorPro.Accessibility.Requirement"},{"children":null,"id":"Minimum","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Minimum","nameWithType":"Accessibility.Requirement.Minimum","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Accessibility.Requirement","remarks":null,"summary":"\nThe visual presentation of text has a contrast ratio of at least\n4.5:1 (Level AA) -\nhttps://www.w3.org/WAI/WCAG21/quickref/?versions=2.0#qr-visual-audio-contrast-contrast\n","syntax":{"content":"Minimum = 0","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Accessibility.Requirement"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Accessibility.Requirement.Minimum"},{"children":null,"id":"MinimumLargeText","implements":null,"inheritance":null,"inheritedMembers":null,"name":"MinimumLargeText","nameWithType":"Accessibility.Requirement.MinimumLargeText","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Accessibility.Requirement","remarks":null,"summary":"\nThe visual presentation of large text has a contrast ratio of at\nleast 3:1 (Level AA) -\nhttps://www.w3.org/WAI/WCAG21/quickref/?versions=2.0#qr-visual-audio-contrast-contrast\n","syntax":{"content":"MinimumLargeText = 1","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Accessibility.Requirement"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Accessibility.Requirement.MinimumLargeText"},{"children":null,"id":"Enhanced","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Enhanced","nameWithType":"Accessibility.Requirement.Enhanced","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Accessibility.Requirement","remarks":null,"summary":"\nThe visual presentation of text has a contrast ratio of at least\n7:1 (Level AAA) -\nhttps://www.w3.org/WAI/WCAG21/quickref/?versions=2.0#qr-visual-audio-contrast7\n","syntax":{"content":"Enhanced = 2","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Accessibility.Requirement"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Accessibility.Requirement.Enhanced"},{"children":null,"id":"EnhancedLargeText","implements":null,"inheritance":null,"inheritedMembers":null,"name":"EnhancedLargeText","nameWithType":"Accessibility.Requirement.EnhancedLargeText","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Accessibility.Requirement","remarks":null,"summary":"\nThe visual presentation of large text has a contrast ratio of at\nleast 4.5:1 (Level AAA) -\nhttps://www.w3.org/WAI/WCAG21/quickref/?versions=2.0#qr-visual-audio-contrast7\n","syntax":{"content":"EnhancedLargeText = 3","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Accessibility.Requirement"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Accessibility.Requirement.EnhancedLargeText"}]},{"items":[{"children":["Zigurous.ColorPro.Accessibility.IsCompliant(Color,Color,Zigurous.ColorPro.Accessibility.Requirement)","Zigurous.ColorPro.Accessibility.IsCompliant(Zigurous.ColorPro.Accessibility.Requirement,Color,Color)","Zigurous.ColorPro.Accessibility.MinimumContrastRatio(Zigurous.ColorPro.Accessibility.Requirement)"],"id":"Accessibility","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Accessibility","nameWithType":"Accessibility","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nFunctions for testing color accessibility requirements.\n","syntax":{"content":"public static class Accessibility","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.Accessibility"},{"children":null,"id":"MinimumContrastRatio(Zigurous.ColorPro.Accessibility.Requirement)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"MinimumContrastRatio(Accessibility.Requirement)","nameWithType":"Accessibility.MinimumContrastRatio(Accessibility.Requirement)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Accessibility","remarks":null,"summary":"\nReturns the minimum contrast ratio needed to pass compliance of a\ngiven accessibility requirement.\n","syntax":{"content":"public static float MinimumContrastRatio(this Accessibility.Requirement requirement)","parameters":[{"description":"The requirement to check.","id":"requirement","type":"Zigurous.ColorPro.Accessibility.Requirement"}],"return":{"description":"The minimum contrast ratio needed to pass the requirement.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Accessibility.MinimumContrastRatio(Zigurous.ColorPro.Accessibility.Requirement)"},{"children":null,"id":"IsCompliant(Zigurous.ColorPro.Accessibility.Requirement,Color,Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"IsCompliant(Accessibility.Requirement, Color, Color)","nameWithType":"Accessibility.IsCompliant(Accessibility.Requirement, Color, Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Accessibility","remarks":null,"summary":"\nDetermines if the contrast between a foreground color and a\nbackground color is compliant to the accessibility requirement.\n","syntax":{"content":"public static bool IsCompliant(this Accessibility.Requirement requirement, Color foreground, Color background)","parameters":[{"description":"The requirement to check.","id":"requirement","type":"Zigurous.ColorPro.Accessibility.Requirement"},{"description":"The foreground color.","id":"foreground","type":"Global.Color"},{"description":"The background color.","id":"background","type":"Global.Color"}],"return":{"description":"True if the contrast is compliant, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Accessibility.IsCompliant(Zigurous.ColorPro.Accessibility.Requirement,Color,Color)"},{"children":null,"id":"IsCompliant(Color,Color,Zigurous.ColorPro.Accessibility.Requirement)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"IsCompliant(Color, Color, Accessibility.Requirement)","nameWithType":"Accessibility.IsCompliant(Color, Color, Accessibility.Requirement)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Accessibility","remarks":null,"summary":"\nDetermines if the contrast between the foreground color and a\nbackground color is compliant to a given accessibility requirement.\n","syntax":{"content":"public static bool IsCompliant(this Color foreground, Color background, Accessibility.Requirement requirement)","parameters":[{"description":"The foreground color.","id":"foreground","type":"Global.Color"},{"description":"The background color.","id":"background","type":"Global.Color"},{"description":"The requirement to check.","id":"requirement","type":"Zigurous.ColorPro.Accessibility.Requirement"}],"return":{"description":"True if the contrast is compliant, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Accessibility.IsCompliant(Color,Color,Zigurous.ColorPro.Accessibility.Requirement)"}]},{"items":[{"children":["Zigurous.ColorPro.Adjustment.Complement(Color)","Zigurous.ColorPro.Adjustment.Darken(Color@,System.Single)","Zigurous.ColorPro.Adjustment.Darker(Color,System.Int32)","Zigurous.ColorPro.Adjustment.Darker(Color,System.Single)","Zigurous.ColorPro.Adjustment.DarkerNonAlloc(Color,Color[])","Zigurous.ColorPro.Adjustment.Desaturate(Color@,System.Single)","Zigurous.ColorPro.Adjustment.Desaturated(Color,System.Int32)","Zigurous.ColorPro.Adjustment.Desaturated(Color,System.Single)","Zigurous.ColorPro.Adjustment.DesaturatedNonAlloc(Color,Color[])","Zigurous.ColorPro.Adjustment.Grayscale(Color@)","Zigurous.ColorPro.Adjustment.Grayscaled(Color)","Zigurous.ColorPro.Adjustment.Hues(Color,System.Int32,System.Single)","Zigurous.ColorPro.Adjustment.Hues(Color,System.Single,System.Single)","Zigurous.ColorPro.Adjustment.HueShift(Color@,System.Single)","Zigurous.ColorPro.Adjustment.HueShifted(Color,System.Single)","Zigurous.ColorPro.Adjustment.HuesNonAlloc(Color,Color[],System.Single)","Zigurous.ColorPro.Adjustment.Invert(Color@)","Zigurous.ColorPro.Adjustment.Inverted(Color)","Zigurous.ColorPro.Adjustment.Lighten(Color@,System.Single)","Zigurous.ColorPro.Adjustment.Lighter(Color,System.Int32)","Zigurous.ColorPro.Adjustment.Lighter(Color,System.Single)","Zigurous.ColorPro.Adjustment.LighterNonAlloc(Color,Color[])","Zigurous.ColorPro.Adjustment.Saturate(Color@,System.Single)","Zigurous.ColorPro.Adjustment.Saturated(Color,System.Int32)","Zigurous.ColorPro.Adjustment.Saturated(Color,System.Single)","Zigurous.ColorPro.Adjustment.SaturatedNonAlloc(Color,Color[])","Zigurous.ColorPro.Adjustment.Websafe(Color)"],"id":"Adjustment","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Adjustment","nameWithType":"Adjustment","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nFunctions for adjusting color values, e.g., hue, saturation, lightness, etc.\n","syntax":{"content":"public static class Adjustment","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.Adjustment"},{"children":null,"id":"HueShift(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HueShift(ref Color, Single)","nameWithType":"Adjustment.HueShift(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nShifts the hue of the color by the given amount of degrees.\n","syntax":{"content":"public static void HueShift(this ref Color color, float degrees)","parameters":[{"description":"The color to adjust.","id":"color","type":"Global.Color"},{"description":"The amount of degrees to shift the hue.","id":"degrees","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.HueShift(Color@,System.Single)"},{"children":null,"id":"HueShifted(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HueShifted(Color, Single)","nameWithType":"Adjustment.HueShifted(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nReturns a new instance of the color by shifting its hue by a given\namount of degrees.\n","syntax":{"content":"public static Color HueShifted(this Color color, float degrees)","parameters":[{"description":"The color to adjust.","id":"color","type":"Global.Color"},{"description":"The amount of degrees to shift the hue.","id":"degrees","type":"System.Single"}],"return":{"description":"A new instance of the color with the hue shifted by the given amount of degrees.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.HueShifted(Color,System.Single)"},{"children":null,"id":"Hues(Color,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Hues(Color, Single, Single)","nameWithType":"Adjustment.Hues(Color, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nGenerates hues of the base color with a given increment of degrees.\nFor example, an increment of 30 will generate 12 different hues (360/30 = 12).\n","syntax":{"content":"public static Color[] Hues(this Color baseColor, float degrees = 30F, float offset = 0F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The hue increment in degrees (default=30).","id":"degrees","type":"System.Single"},{"description":"The optional hue offset in degrees.","id":"offset","type":"System.Single"}],"return":{"description":"The array of hue shifted colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Hues(Color,System.Single,System.Single)"},{"children":null,"id":"Hues(Color,System.Int32,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Hues(Color, Int32, Single)","nameWithType":"Adjustment.Hues(Color, Int32, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nGenerates a given amount of hues from the base color.\n","syntax":{"content":"public static Color[] Hues(this Color baseColor, int amount, float offset = 0F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The amount of hues to generate.","id":"amount","type":"System.Int32"},{"description":"The optional hue offset in degrees.","id":"offset","type":"System.Single"}],"return":{"description":"The array of hue shifted colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Hues(Color,System.Int32,System.Single)"},{"children":null,"id":"HuesNonAlloc(Color,Color[],System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HuesNonAlloc(Color, Color[], Single)","nameWithType":"Adjustment.HuesNonAlloc(Color, Color[], Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nFills an existing array with the hues of the base color to prevent\nheap allocations. The amount of hues generated is determined by the\nsize of the array.\n","syntax":{"content":"public static void HuesNonAlloc(this Color baseColor, Color[] output, float offset = 0F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The array to store the generated hues in.","id":"output","type":"Global.Color[]"},{"description":"The optional hue offset in degrees.","id":"offset","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.HuesNonAlloc(Color,Color[],System.Single)"},{"children":null,"id":"Saturate(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Saturate(ref Color, Single)","nameWithType":"Adjustment.Saturate(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nIncreases the saturation of the color by the given amount.\n","syntax":{"content":"public static void Saturate(this ref Color color, float increase = 0.1F)","parameters":[{"description":"The color to adjust.","id":"color","type":"Global.Color"},{"description":"The amount to increase the saturation.","id":"increase","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Saturate(Color@,System.Single)"},{"children":null,"id":"Saturated(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Saturated(Color, Single)","nameWithType":"Adjustment.Saturated(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nReturns a new instance of the color with increased saturation.\n","syntax":{"content":"public static Color Saturated(this Color color, float increase = 0.1F)","parameters":[{"description":"The color to adjust.","id":"color","type":"Global.Color"},{"description":"The amount to increase the saturation.","id":"increase","type":"System.Single"}],"return":{"description":"A new instance of the color with increased saturation.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Saturated(Color,System.Single)"},{"children":null,"id":"Saturated(Color,System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Saturated(Color, Int32)","nameWithType":"Adjustment.Saturated(Color, Int32)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nGenerates a given amount of saturated colors from the base color.\n","syntax":{"content":"public static Color[] Saturated(this Color baseColor, int amount)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The amount of saturated colors to generate.","id":"amount","type":"System.Int32"}],"return":{"description":"The array of saturated colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Saturated(Color,System.Int32)"},{"children":null,"id":"SaturatedNonAlloc(Color,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SaturatedNonAlloc(Color, Color[])","nameWithType":"Adjustment.SaturatedNonAlloc(Color, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nFills an existing array with saturated colors of the base color to\nprevent heap allocations. The amount of colors generated is\ndetermined by the size of the array.\n","syntax":{"content":"public static void SaturatedNonAlloc(this Color baseColor, Color[] output)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The array to store the generated colors in.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.SaturatedNonAlloc(Color,Color[])"},{"children":null,"id":"Desaturate(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Desaturate(ref Color, Single)","nameWithType":"Adjustment.Desaturate(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nDecreases the saturation of the color by the given amount.\n","syntax":{"content":"public static void Desaturate(this ref Color color, float decrease = 0.1F)","parameters":[{"description":"The color to adjust.","id":"color","type":"Global.Color"},{"description":"The amount to decrease the saturation.","id":"decrease","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Desaturate(Color@,System.Single)"},{"children":null,"id":"Desaturated(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Desaturated(Color, Single)","nameWithType":"Adjustment.Desaturated(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nReturns a new instance of the color with decreased saturation.\n","syntax":{"content":"public static Color Desaturated(this Color color, float decrease = 0.1F)","parameters":[{"description":"The color to adjust.","id":"color","type":"Global.Color"},{"description":"The amount to decrease the saturation.","id":"decrease","type":"System.Single"}],"return":{"description":"A new instance of the color with decreased saturation.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Desaturated(Color,System.Single)"},{"children":null,"id":"Desaturated(Color,System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Desaturated(Color, Int32)","nameWithType":"Adjustment.Desaturated(Color, Int32)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nGenerates a given amount of desaturated colors from the base color.\n","syntax":{"content":"public static Color[] Desaturated(this Color baseColor, int amount)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The amount of desaturated colors to generate.","id":"amount","type":"System.Int32"}],"return":{"description":"The array of desaturated colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Desaturated(Color,System.Int32)"},{"children":null,"id":"DesaturatedNonAlloc(Color,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"DesaturatedNonAlloc(Color, Color[])","nameWithType":"Adjustment.DesaturatedNonAlloc(Color, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nFills an existing array with desaturated colors of the base color to\nprevent heap allocations. The amount of colors generated is\ndetermined by the size of the array.\n","syntax":{"content":"public static void DesaturatedNonAlloc(this Color baseColor, Color[] output)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The array to store the generated colors in.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.DesaturatedNonAlloc(Color,Color[])"},{"children":null,"id":"Grayscale(Color@)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Grayscale(ref Color)","nameWithType":"Adjustment.Grayscale(ref Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nSets the saturation of the color to zero.\n","syntax":{"content":"public static void Grayscale(this ref Color color)","parameters":[{"description":"The color to adjust.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Grayscale(Color@)"},{"children":null,"id":"Grayscaled(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Grayscaled(Color)","nameWithType":"Adjustment.Grayscaled(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nReturns a new instance of the color with zero saturation.\n","syntax":{"content":"public static Color Grayscaled(this Color color)","parameters":[{"description":"The color to adjust.","id":"color","type":"Global.Color"}],"return":{"description":"A new instance of the color with zero saturation.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Grayscaled(Color)"},{"children":null,"id":"Lighten(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Lighten(ref Color, Single)","nameWithType":"Adjustment.Lighten(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nIncreases the lightness of the color by the given amount.\n","syntax":{"content":"public static void Lighten(this ref Color color, float increase = 0.1F)","parameters":[{"description":"The color to adjust.","id":"color","type":"Global.Color"},{"description":"The amount to increase the lightness.","id":"increase","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Lighten(Color@,System.Single)"},{"children":null,"id":"Lighter(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Lighter(Color, Single)","nameWithType":"Adjustment.Lighter(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nReturns a new instance of the color with increased lightness.\n","syntax":{"content":"public static Color Lighter(this Color color, float increase = 0.1F)","parameters":[{"description":"The color to adjust.","id":"color","type":"Global.Color"},{"description":"The amount to increase the lightness.","id":"increase","type":"System.Single"}],"return":{"description":"A new instance of the color with increased lightness.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Lighter(Color,System.Single)"},{"children":null,"id":"Lighter(Color,System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Lighter(Color, Int32)","nameWithType":"Adjustment.Lighter(Color, Int32)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nGenerates a given amount of lighter colors from the base color.\n","syntax":{"content":"public static Color[] Lighter(this Color baseColor, int amount)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The amount of lighter colors to generate.","id":"amount","type":"System.Int32"}],"return":{"description":"The array of lighter colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Lighter(Color,System.Int32)"},{"children":null,"id":"LighterNonAlloc(Color,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"LighterNonAlloc(Color, Color[])","nameWithType":"Adjustment.LighterNonAlloc(Color, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nFills an existing array with lighter colors of the base color to\nprevent heap allocations. The amount of colors generated is\ndetermined by the size of the array.\n","syntax":{"content":"public static void LighterNonAlloc(this Color baseColor, Color[] output)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The array to store the generated colors in.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.LighterNonAlloc(Color,Color[])"},{"children":null,"id":"Darken(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Darken(ref Color, Single)","nameWithType":"Adjustment.Darken(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nDecreases the lightness of the color by the given amount.\n","syntax":{"content":"public static void Darken(this ref Color color, float decrease = 0.1F)","parameters":[{"description":"The color to adjust.","id":"color","type":"Global.Color"},{"description":"The amount to decrease the lightness.","id":"decrease","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Darken(Color@,System.Single)"},{"children":null,"id":"Darker(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Darker(Color, Single)","nameWithType":"Adjustment.Darker(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nReturns a new instance of the color with decreased lightness.\n","syntax":{"content":"public static Color Darker(this Color color, float decrease = 0.1F)","parameters":[{"description":"The color to adjust.","id":"color","type":"Global.Color"},{"description":"The amount to decrease the lightness.","id":"decrease","type":"System.Single"}],"return":{"description":"A new instance of the color with decreased lightness.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Darker(Color,System.Single)"},{"children":null,"id":"Darker(Color,System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Darker(Color, Int32)","nameWithType":"Adjustment.Darker(Color, Int32)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nGenerates a given amount of darker colors from the base color.\n","syntax":{"content":"public static Color[] Darker(this Color baseColor, int amount)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The amount of darker colors to generate.","id":"amount","type":"System.Int32"}],"return":{"description":"The array of darker colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Darker(Color,System.Int32)"},{"children":null,"id":"DarkerNonAlloc(Color,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"DarkerNonAlloc(Color, Color[])","nameWithType":"Adjustment.DarkerNonAlloc(Color, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nFills an existing array with darker colors of the base color to\nprevent heap allocations. The amount of colors generated is\ndetermined by the size of the array.\n","syntax":{"content":"public static void DarkerNonAlloc(this Color baseColor, Color[] output)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The array to store the generated colors in.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.DarkerNonAlloc(Color,Color[])"},{"children":null,"id":"Invert(Color@)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Invert(ref Color)","nameWithType":"Adjustment.Invert(ref Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nInverts the color by subtracting the RGB components from 1.\n","syntax":{"content":"public static void Invert(this ref Color color)","parameters":[{"description":"The color to invert.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Invert(Color@)"},{"children":null,"id":"Inverted(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inverted(Color)","nameWithType":"Adjustment.Inverted(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nReturns the inverse of the color by subtracting the RGB components\nfrom 1.\n","syntax":{"content":"public static Color Inverted(this Color color)","parameters":[{"description":"The color to get the inverse of.","id":"color","type":"Global.Color"}],"return":{"description":"The inverse of the color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Inverted(Color)"},{"children":null,"id":"Complement(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Complement(Color)","nameWithType":"Adjustment.Complement(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nReturns the complement of the color by shifting the hue 180°.\n","syntax":{"content":"public static Color Complement(this Color color)","parameters":[{"description":"The color to get the complement of.","id":"color","type":"Global.Color"}],"return":{"description":"The complement of the color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Complement(Color)"},{"children":null,"id":"Websafe(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Websafe(Color)","nameWithType":"Adjustment.Websafe(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Adjustment","remarks":null,"summary":"\nReturns the nearest websafe color to the current color.\n","syntax":{"content":"public static Color Websafe(this Color color)","parameters":[{"description":"The color to get the closet websafe color of.","id":"color","type":"Global.Color"}],"return":{"description":"The closet websafe color to the current color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Adjustment.Websafe(Color)"}]},{"items":[{"children":["Zigurous.ColorPro.ARGB.#ctor(Color)","Zigurous.ColorPro.ARGB.#ctor(System.Single,System.Single,System.Single,System.Single)","Zigurous.ColorPro.ARGB.#ctor(Zigurous.ColorPro.ARGB)","Zigurous.ColorPro.ARGB.alpha","Zigurous.ColorPro.ARGB.blue","Zigurous.ColorPro.ARGB.Equals(System.Object)","Zigurous.ColorPro.ARGB.Equals(Zigurous.ColorPro.ARGB)","Zigurous.ColorPro.ARGB.GetHashCode","Zigurous.ColorPro.ARGB.green","Zigurous.ColorPro.ARGB.Item(System.Int32)","Zigurous.ColorPro.ARGB.op_Equality(Zigurous.ColorPro.ARGB,Zigurous.ColorPro.ARGB)","Zigurous.ColorPro.ARGB.op_Explicit(Color)~Zigurous.ColorPro.ARGB","Zigurous.ColorPro.ARGB.op_Explicit(Zigurous.ColorPro.ARGB)~Color","Zigurous.ColorPro.ARGB.op_Implicit(Zigurous.ColorPro.ARGB)~Zigurous.ColorPro.RGB","Zigurous.ColorPro.ARGB.op_Implicit(Zigurous.ColorPro.ARGB)~Zigurous.ColorPro.RGBA","Zigurous.ColorPro.ARGB.op_Inequality(Zigurous.ColorPro.ARGB,Zigurous.ColorPro.ARGB)","Zigurous.ColorPro.ARGB.red","Zigurous.ColorPro.ARGB.ToColor","Zigurous.ColorPro.ARGB.ToString"],"id":"ARGB","implements":["Global.IEquatable{Zigurous.ColorPro.ARGB}"],"inheritance":null,"inheritedMembers":null,"name":"ARGB","nameWithType":"ARGB","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe ARGB (alpha, red, green, blue) components of a color in the range [0..1].\n","syntax":{"content":"[Serializable]\npublic struct ARGB : IEquatable<ARGB>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.ARGB"},{"children":null,"id":"alpha","implements":null,"inheritance":null,"inheritedMembers":null,"name":"alpha","nameWithType":"ARGB.alpha","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":"\nThe alpha component of the color in the range [0..1].\n","syntax":{"content":"public float alpha","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ARGB.alpha"},{"children":null,"id":"red","implements":null,"inheritance":null,"inheritedMembers":null,"name":"red","nameWithType":"ARGB.red","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":"\nThe red component of the color in the range [0..1].\n","syntax":{"content":"public float red","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ARGB.red"},{"children":null,"id":"green","implements":null,"inheritance":null,"inheritedMembers":null,"name":"green","nameWithType":"ARGB.green","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":"\nThe green component of the color in the range [0..1].\n","syntax":{"content":"public float green","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ARGB.green"},{"children":null,"id":"blue","implements":null,"inheritance":null,"inheritedMembers":null,"name":"blue","nameWithType":"ARGB.blue","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":"\nThe blue component of the color in the range [0..1].\n","syntax":{"content":"public float blue","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ARGB.blue"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"ARGB.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.ARGB.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ARGB(Single, Single, Single, Single)","nameWithType":"ARGB.ARGB(Single, Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":"\nCreates new ARGB components from the given values.\n","syntax":{"content":"public ARGB(float alpha, float red, float green, float blue)","parameters":[{"description":"The alpha component of the color in the range [0..1].","id":"alpha","type":"System.Single"},{"description":"The red component of the color in the range [0..1].","id":"red","type":"System.Single"},{"description":"The green component of the color in the range [0..1].","id":"green","type":"System.Single"},{"description":"The blue component of the color in the range [0..1].","id":"blue","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.ARGB.#ctor(System.Single,System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.ARGB)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ARGB(ARGB)","nameWithType":"ARGB.ARGB(ARGB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public ARGB(ARGB other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.ARGB"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.ARGB.#ctor(Zigurous.ColorPro.ARGB)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ARGB(Color)","nameWithType":"ARGB.ARGB(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":"\nCreates new ARGB components from the given color.\n","syntax":{"content":"public ARGB(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.ARGB.#ctor(Color)"},{"children":null,"id":"Equals(Zigurous.ColorPro.ARGB)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(ARGB)","nameWithType":"ARGB.Equals(ARGB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(ARGB other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.ARGB"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ARGB.Equals(Zigurous.ColorPro.ARGB)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"ARGB.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ARGB.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"ARGB.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ARGB.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"ARGB.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ARGB.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"ARGB.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ARGB.ToColor"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.ARGB,Zigurous.ColorPro.ARGB)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(ARGB, ARGB)","nameWithType":"ARGB.Equality(ARGB, ARGB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(ARGB lhs, ARGB rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.ARGB"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.ARGB"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.ARGB.op_Equality(Zigurous.ColorPro.ARGB,Zigurous.ColorPro.ARGB)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.ARGB,Zigurous.ColorPro.ARGB)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(ARGB, ARGB)","nameWithType":"ARGB.Inequality(ARGB, ARGB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(ARGB lhs, ARGB rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.ARGB"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.ARGB"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.ARGB.op_Inequality(Zigurous.ColorPro.ARGB,Zigurous.ColorPro.ARGB)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.ARGB)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(ARGB to Color)","nameWithType":"ARGB.Explicit(ARGB to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(ARGB argb)","parameters":[{"description":null,"id":"argb","type":"Zigurous.ColorPro.ARGB"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.ARGB.op_Explicit(Zigurous.ColorPro.ARGB)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.ARGB","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to ARGB)","nameWithType":"ARGB.Explicit(Color to ARGB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator ARGB(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.ARGB"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.ARGB.op_Explicit(Color)~Zigurous.ColorPro.ARGB"},{"children":null,"id":"op_Implicit(Zigurous.ColorPro.ARGB)~Zigurous.ColorPro.RGBA","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Implicit(ARGB to RGBA)","nameWithType":"ARGB.Implicit(ARGB to RGBA)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":null,"syntax":{"content":"public static implicit operator RGBA(ARGB argb)","parameters":[{"description":null,"id":"argb","type":"Zigurous.ColorPro.ARGB"}],"return":{"description":null,"type":"Zigurous.ColorPro.RGBA"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.ARGB.op_Implicit(Zigurous.ColorPro.ARGB)~Zigurous.ColorPro.RGBA"},{"children":null,"id":"op_Implicit(Zigurous.ColorPro.ARGB)~Zigurous.ColorPro.RGB","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Implicit(ARGB to RGB)","nameWithType":"ARGB.Implicit(ARGB to RGB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB","remarks":null,"summary":null,"syntax":{"content":"public static implicit operator RGB(ARGB argb)","parameters":[{"description":null,"id":"argb","type":"Zigurous.ColorPro.ARGB"}],"return":{"description":null,"type":"Zigurous.ColorPro.RGB"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.ARGB.op_Implicit(Zigurous.ColorPro.ARGB)~Zigurous.ColorPro.RGB"}]},{"items":[{"children":["Zigurous.ColorPro.ARGB255.#ctor(Color)","Zigurous.ColorPro.ARGB255.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)","Zigurous.ColorPro.ARGB255.#ctor(Zigurous.ColorPro.ARGB255)","Zigurous.ColorPro.ARGB255.alpha","Zigurous.ColorPro.ARGB255.blue","Zigurous.ColorPro.ARGB255.Equals(System.Object)","Zigurous.ColorPro.ARGB255.Equals(Zigurous.ColorPro.ARGB255)","Zigurous.ColorPro.ARGB255.GetHashCode","Zigurous.ColorPro.ARGB255.green","Zigurous.ColorPro.ARGB255.Item(System.Int32)","Zigurous.ColorPro.ARGB255.op_Equality(Zigurous.ColorPro.ARGB255,Zigurous.ColorPro.ARGB255)","Zigurous.ColorPro.ARGB255.op_Explicit(Color)~Zigurous.ColorPro.ARGB255","Zigurous.ColorPro.ARGB255.op_Explicit(Zigurous.ColorPro.ARGB255)~Color","Zigurous.ColorPro.ARGB255.op_Implicit(Zigurous.ColorPro.ARGB255)~Zigurous.ColorPro.RGB255","Zigurous.ColorPro.ARGB255.op_Implicit(Zigurous.ColorPro.ARGB255)~Zigurous.ColorPro.RGBA255","Zigurous.ColorPro.ARGB255.op_Inequality(Zigurous.ColorPro.ARGB255,Zigurous.ColorPro.ARGB255)","Zigurous.ColorPro.ARGB255.red","Zigurous.ColorPro.ARGB255.ToColor","Zigurous.ColorPro.ARGB255.ToString"],"id":"ARGB255","implements":["Global.IEquatable{Zigurous.ColorPro.ARGB255}"],"inheritance":null,"inheritedMembers":null,"name":"ARGB255","nameWithType":"ARGB255","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe ARGB (alpha, red, green, blue) components of a color in the range [0..255].\n","syntax":{"content":"[Serializable]\npublic struct ARGB255 : IEquatable<ARGB255>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.ARGB255"},{"children":null,"id":"alpha","implements":null,"inheritance":null,"inheritedMembers":null,"name":"alpha","nameWithType":"ARGB255.alpha","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":"\nThe alpha component of the color in the range [0..255].\n","syntax":{"content":"public int alpha","parameters":null,"return":{"description":null,"type":"System.Int32"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ARGB255.alpha"},{"children":null,"id":"red","implements":null,"inheritance":null,"inheritedMembers":null,"name":"red","nameWithType":"ARGB255.red","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":"\nThe red component of the color in the range [0..255].\n","syntax":{"content":"public int red","parameters":null,"return":{"description":null,"type":"System.Int32"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ARGB255.red"},{"children":null,"id":"green","implements":null,"inheritance":null,"inheritedMembers":null,"name":"green","nameWithType":"ARGB255.green","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":"\nThe green component of the color in the range [0..255].\n","syntax":{"content":"public int green","parameters":null,"return":{"description":null,"type":"System.Int32"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ARGB255.green"},{"children":null,"id":"blue","implements":null,"inheritance":null,"inheritedMembers":null,"name":"blue","nameWithType":"ARGB255.blue","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":"\nThe blue component of the color in the range [0..255].\n","syntax":{"content":"public int blue","parameters":null,"return":{"description":null,"type":"System.Int32"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ARGB255.blue"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"ARGB255.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public int this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Int32"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.ARGB255.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Int32,System.Int32,System.Int32,System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ARGB255(Int32, Int32, Int32, Int32)","nameWithType":"ARGB255.ARGB255(Int32, Int32, Int32, Int32)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":"\nCreates new ARGB255 components from the given values.\n","syntax":{"content":"public ARGB255(int alpha, int red, int green, int blue)","parameters":[{"description":"The alpha component of the color in the range [0..255].","id":"alpha","type":"System.Int32"},{"description":"The red component of the color in the range [0..255].","id":"red","type":"System.Int32"},{"description":"The green component of the color in the range [0..255].","id":"green","type":"System.Int32"},{"description":"The blue component of the color in the range [0..255].","id":"blue","type":"System.Int32"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.ARGB255.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.ARGB255)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ARGB255(ARGB255)","nameWithType":"ARGB255.ARGB255(ARGB255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public ARGB255(ARGB255 other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.ARGB255"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.ARGB255.#ctor(Zigurous.ColorPro.ARGB255)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ARGB255(Color)","nameWithType":"ARGB255.ARGB255(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":"\nCreates new ARGB255 components from the given color.\n","syntax":{"content":"public ARGB255(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.ARGB255.#ctor(Color)"},{"children":null,"id":"Equals(Zigurous.ColorPro.ARGB255)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(ARGB255)","nameWithType":"ARGB255.Equals(ARGB255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(ARGB255 other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.ARGB255"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ARGB255.Equals(Zigurous.ColorPro.ARGB255)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"ARGB255.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ARGB255.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"ARGB255.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ARGB255.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"ARGB255.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ARGB255.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"ARGB255.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ARGB255.ToColor"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.ARGB255,Zigurous.ColorPro.ARGB255)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(ARGB255, ARGB255)","nameWithType":"ARGB255.Equality(ARGB255, ARGB255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(ARGB255 lhs, ARGB255 rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.ARGB255"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.ARGB255"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.ARGB255.op_Equality(Zigurous.ColorPro.ARGB255,Zigurous.ColorPro.ARGB255)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.ARGB255,Zigurous.ColorPro.ARGB255)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(ARGB255, ARGB255)","nameWithType":"ARGB255.Inequality(ARGB255, ARGB255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(ARGB255 lhs, ARGB255 rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.ARGB255"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.ARGB255"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.ARGB255.op_Inequality(Zigurous.ColorPro.ARGB255,Zigurous.ColorPro.ARGB255)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.ARGB255)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(ARGB255 to Color)","nameWithType":"ARGB255.Explicit(ARGB255 to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(ARGB255 argb)","parameters":[{"description":null,"id":"argb","type":"Zigurous.ColorPro.ARGB255"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.ARGB255.op_Explicit(Zigurous.ColorPro.ARGB255)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.ARGB255","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to ARGB255)","nameWithType":"ARGB255.Explicit(Color to ARGB255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator ARGB255(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.ARGB255"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.ARGB255.op_Explicit(Color)~Zigurous.ColorPro.ARGB255"},{"children":null,"id":"op_Implicit(Zigurous.ColorPro.ARGB255)~Zigurous.ColorPro.RGBA255","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Implicit(ARGB255 to RGBA255)","nameWithType":"ARGB255.Implicit(ARGB255 to RGBA255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":null,"syntax":{"content":"public static implicit operator RGBA255(ARGB255 argb)","parameters":[{"description":null,"id":"argb","type":"Zigurous.ColorPro.ARGB255"}],"return":{"description":null,"type":"Zigurous.ColorPro.RGBA255"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.ARGB255.op_Implicit(Zigurous.ColorPro.ARGB255)~Zigurous.ColorPro.RGBA255"},{"children":null,"id":"op_Implicit(Zigurous.ColorPro.ARGB255)~Zigurous.ColorPro.RGB255","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Implicit(ARGB255 to RGB255)","nameWithType":"ARGB255.Implicit(ARGB255 to RGB255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ARGB255","remarks":null,"summary":null,"syntax":{"content":"public static implicit operator RGB255(ARGB255 argb)","parameters":[{"description":null,"id":"argb","type":"Zigurous.ColorPro.ARGB255"}],"return":{"description":null,"type":"Zigurous.ColorPro.RGB255"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.ARGB255.op_Implicit(Zigurous.ColorPro.ARGB255)~Zigurous.ColorPro.RGB255"}]},{"items":[{"children":["Zigurous.ColorPro.Arithmetic.Add(Color@,Color,System.Boolean)","Zigurous.ColorPro.Arithmetic.Adding(Color,Color,System.Boolean)","Zigurous.ColorPro.Arithmetic.Divide(Color@,Color,System.Boolean)","Zigurous.ColorPro.Arithmetic.Divide(Color@,System.Single,System.Boolean)","Zigurous.ColorPro.Arithmetic.DividedBy(Color,Color,System.Boolean)","Zigurous.ColorPro.Arithmetic.DividedBy(Color,System.Single,System.Boolean)","Zigurous.ColorPro.Arithmetic.MultipliedBy(Color,Color,System.Boolean)","Zigurous.ColorPro.Arithmetic.MultipliedBy(Color,System.Single,System.Boolean)","Zigurous.ColorPro.Arithmetic.Multiply(Color@,Color,System.Boolean)","Zigurous.ColorPro.Arithmetic.Multiply(Color@,System.Single,System.Boolean)","Zigurous.ColorPro.Arithmetic.Subtract(Color@,Color,System.Boolean)","Zigurous.ColorPro.Arithmetic.Subtracting(Color,Color,System.Boolean)"],"id":"Arithmetic","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Arithmetic","nameWithType":"Arithmetic","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nFunctions for adding, subtracting, multiplying, and dividing colors.\n","syntax":{"content":"public static class Arithmetic","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.Arithmetic"},{"children":null,"id":"Add(Color@,Color,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Add(ref Color, Color, Boolean)","nameWithType":"Arithmetic.Add(ref Color, Color, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Arithmetic","remarks":null,"summary":"\nAdds the components of another color to the current color. Clamps\nthe values in the range [0..1].\n","syntax":{"content":"public static void Add(this ref Color color, Color other, bool addAlpha = true)","parameters":[{"description":"The color being added to.","id":"color","type":"Global.Color"},{"description":"The color to add.","id":"other","type":"Global.Color"},{"description":"True to add the alpha components, otherwise it is left unmodified.","id":"addAlpha","type":"System.Boolean"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Arithmetic.Add(Color@,Color,System.Boolean)"},{"children":null,"id":"Adding(Color,Color,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Adding(Color, Color, Boolean)","nameWithType":"Arithmetic.Adding(Color, Color, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Arithmetic","remarks":null,"summary":"\nReturns the result of adding the components of another color to the\ncurrent color. Clamps the values in the range [0..1].\n","syntax":{"content":"public static Color Adding(this Color color, Color other, bool addAlpha = true)","parameters":[{"description":"The color being added to.","id":"color","type":"Global.Color"},{"description":"The color to add.","id":"other","type":"Global.Color"},{"description":"True to add the alpha components, otherwise it is left unmodified.","id":"addAlpha","type":"System.Boolean"}],"return":{"description":"The new color with the added components.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Arithmetic.Adding(Color,Color,System.Boolean)"},{"children":null,"id":"Subtract(Color@,Color,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Subtract(ref Color, Color, Boolean)","nameWithType":"Arithmetic.Subtract(ref Color, Color, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Arithmetic","remarks":null,"summary":"\nSubtracts the components of another color from the current color.\nClamps the values in the range [0..1].\n","syntax":{"content":"public static void Subtract(this ref Color color, Color other, bool subtractAlpha = true)","parameters":[{"description":"The color being subtracted from.","id":"color","type":"Global.Color"},{"description":"The color to subtract.","id":"other","type":"Global.Color"},{"description":"True to subtract the alpha components, otherwise it is left unmodified.","id":"subtractAlpha","type":"System.Boolean"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Arithmetic.Subtract(Color@,Color,System.Boolean)"},{"children":null,"id":"Subtracting(Color,Color,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Subtracting(Color, Color, Boolean)","nameWithType":"Arithmetic.Subtracting(Color, Color, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Arithmetic","remarks":null,"summary":"\nReturns the result of subtracting the components of another color\nfrom the current color. Clamps the values in the range [0..1].\n","syntax":{"content":"public static Color Subtracting(this Color color, Color other, bool subtractAlpha = true)","parameters":[{"description":"The color being subtracted from.","id":"color","type":"Global.Color"},{"description":"The color to subtract.","id":"other","type":"Global.Color"},{"description":"True to subtract the alpha components, otherwise it is left unmodified.","id":"subtractAlpha","type":"System.Boolean"}],"return":{"description":"The new color with the subtracted components.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Arithmetic.Subtracting(Color,Color,System.Boolean)"},{"children":null,"id":"Multiply(Color@,Color,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Multiply(ref Color, Color, Boolean)","nameWithType":"Arithmetic.Multiply(ref Color, Color, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Arithmetic","remarks":null,"summary":"\nMultiplies the components of the color with another color. Clamps\nthe values in the range [0..1].\n","syntax":{"content":"public static void Multiply(this ref Color color, Color other, bool multiplyAlpha = true)","parameters":[{"description":"The color being multiplied.","id":"color","type":"Global.Color"},{"description":"The color to multiply by.","id":"other","type":"Global.Color"},{"description":"True to multiply the alpha components, otherwise it is left unmodified.","id":"multiplyAlpha","type":"System.Boolean"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Arithmetic.Multiply(Color@,Color,System.Boolean)"},{"children":null,"id":"MultipliedBy(Color,Color,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"MultipliedBy(Color, Color, Boolean)","nameWithType":"Arithmetic.MultipliedBy(Color, Color, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Arithmetic","remarks":null,"summary":"\nReturns the result of multiplying the components of the color with\nanother color. Clamps the values in the range [0..1].\n","syntax":{"content":"public static Color MultipliedBy(this Color color, Color other, bool multiplyAlpha = true)","parameters":[{"description":"The color being multiplied.","id":"color","type":"Global.Color"},{"description":"The color to multiply by.","id":"other","type":"Global.Color"},{"description":"True to multiply the alpha components, otherwise it is left unmodified.","id":"multiplyAlpha","type":"System.Boolean"}],"return":{"description":"The new color with the multiplied components.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Arithmetic.MultipliedBy(Color,Color,System.Boolean)"},{"children":null,"id":"Multiply(Color@,System.Single,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Multiply(ref Color, Single, Boolean)","nameWithType":"Arithmetic.Multiply(ref Color, Single, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Arithmetic","remarks":null,"summary":"\nMultiplies the components of the color by a multiplier. Clamps the\nvalues in the range [0..1].\n","syntax":{"content":"public static void Multiply(this ref Color color, float multiplier, bool multiplyAlpha = true)","parameters":[{"description":"The color being multiplied.","id":"color","type":"Global.Color"},{"description":"The amount to multiply the color by.","id":"multiplier","type":"System.Single"},{"description":"True to multiply the alpha component, otherwise it is left unmodified.","id":"multiplyAlpha","type":"System.Boolean"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Arithmetic.Multiply(Color@,System.Single,System.Boolean)"},{"children":null,"id":"MultipliedBy(Color,System.Single,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"MultipliedBy(Color, Single, Boolean)","nameWithType":"Arithmetic.MultipliedBy(Color, Single, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Arithmetic","remarks":null,"summary":"\nReturns the result of multiplying the components of the color by a\nmultiplier. Clamps the values in the range [0..1].\n","syntax":{"content":"public static Color MultipliedBy(this Color color, float multiplier, bool multiplyAlpha = true)","parameters":[{"description":"The color being multiplied.","id":"color","type":"Global.Color"},{"description":"The amount to multiply the color by.","id":"multiplier","type":"System.Single"},{"description":"True to multiply the alpha component, otherwise it is left unmodified.","id":"multiplyAlpha","type":"System.Boolean"}],"return":{"description":"The new color with the multiplied components.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Arithmetic.MultipliedBy(Color,System.Single,System.Boolean)"},{"children":null,"id":"Divide(Color@,Color,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Divide(ref Color, Color, Boolean)","nameWithType":"Arithmetic.Divide(ref Color, Color, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Arithmetic","remarks":null,"summary":"\nDivides the components of the color with another color. Clamps the\nvalues in the range [0..1].\n","syntax":{"content":"public static void Divide(this ref Color color, Color other, bool divideAlpha = true)","parameters":[{"description":"The color being divided.","id":"color","type":"Global.Color"},{"description":"The color to divide by.","id":"other","type":"Global.Color"},{"description":"True to divide the alpha components, otherwise it is left unmodified.","id":"divideAlpha","type":"System.Boolean"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Arithmetic.Divide(Color@,Color,System.Boolean)"},{"children":null,"id":"DividedBy(Color,Color,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"DividedBy(Color, Color, Boolean)","nameWithType":"Arithmetic.DividedBy(Color, Color, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Arithmetic","remarks":null,"summary":"\nReturns the result of dividing the components of the color with\nanother color. Clamps the values in the range [0..1].\n","syntax":{"content":"public static Color DividedBy(this Color color, Color other, bool divideAlpha = true)","parameters":[{"description":"The color being divided.","id":"color","type":"Global.Color"},{"description":"The color to divide by.","id":"other","type":"Global.Color"},{"description":"True to divide the alpha components, otherwise it is left unmodified.","id":"divideAlpha","type":"System.Boolean"}],"return":{"description":"The new color with the divided components.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Arithmetic.DividedBy(Color,Color,System.Boolean)"},{"children":null,"id":"Divide(Color@,System.Single,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Divide(ref Color, Single, Boolean)","nameWithType":"Arithmetic.Divide(ref Color, Single, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Arithmetic","remarks":null,"summary":"\nDivides the components of the color by a divisor. Clamps the values\nin the range [0..1].\n","syntax":{"content":"public static void Divide(this ref Color color, float divisor, bool divideAlpha = true)","parameters":[{"description":"The color being divided.","id":"color","type":"Global.Color"},{"description":"The amount to divide the color by.","id":"divisor","type":"System.Single"},{"description":"True to divide the alpha component, otherwise it is left unmodified.","id":"divideAlpha","type":"System.Boolean"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Arithmetic.Divide(Color@,System.Single,System.Boolean)"},{"children":null,"id":"DividedBy(Color,System.Single,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"DividedBy(Color, Single, Boolean)","nameWithType":"Arithmetic.DividedBy(Color, Single, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Arithmetic","remarks":null,"summary":"\nReturns the result of dividing the components of the color by a\ndivisor. Clamps the values in the range [0..1].\n","syntax":{"content":"public static Color DividedBy(this Color color, float divisor, bool divideAlpha = true)","parameters":[{"description":"The color being divided.","id":"color","type":"Global.Color"},{"description":"The amount to divide the color by.","id":"divisor","type":"System.Single"},{"description":"True to divide the alpha component, otherwise it is left unmodified.","id":"divideAlpha","type":"System.Boolean"}],"return":{"description":"The new color with the divided components.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Arithmetic.DividedBy(Color,System.Single,System.Boolean)"}]},{"items":[{"children":["Zigurous.ColorPro.Averaging.Average(Color,Color)","Zigurous.ColorPro.Averaging.Average(Color[])","Zigurous.ColorPro.Averaging.AverageColor(Texture2D)"],"id":"Averaging","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Averaging","nameWithType":"Averaging","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nFunctions for averaging colors together.\n","syntax":{"content":"public static class Averaging","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.Averaging"},{"children":null,"id":"Average(Color,Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Average(Color, Color)","nameWithType":"Averaging.Average(Color, Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Averaging","remarks":null,"summary":"\nReturns the result of averaging the RGBA component values of the\ncolor with another color.\n","syntax":{"content":"public static Color Average(this Color color, Color other)","parameters":[{"description":"The color to average.","id":"color","type":"Global.Color"},{"description":"The color to average with.","id":"other","type":"Global.Color"}],"return":{"description":"The average color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Averaging.Average(Color,Color)"},{"children":null,"id":"Average(Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Average(Color[])","nameWithType":"Averaging.Average(Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Averaging","remarks":null,"summary":"\nReturns the result of averaging the RGBA component values of the colors.\n","syntax":{"content":"public static Color Average(this Color[] colors)","parameters":[{"description":"The colors to average.","id":"colors","type":"Global.Color[]"}],"return":{"description":"The average color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Averaging.Average(Color[])"},{"children":null,"id":"AverageColor(Texture2D)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"AverageColor(Texture2D)","nameWithType":"Averaging.AverageColor(Texture2D)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Averaging","remarks":null,"summary":"\nReturns the result of averaging the RGBA component values of every\npixel in the texture.\n","syntax":{"content":"public static Color AverageColor(this Texture2D texture)","parameters":[{"description":"The texture to get the average color of.","id":"texture","type":"Global.Texture2D"}],"return":{"description":"The average color of the texture.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Averaging.AverageColor(Texture2D)"}]},{"items":[{"children":["Zigurous.ColorPro.ChannelMixer.achromatomalyMatrix","Zigurous.ColorPro.ChannelMixer.achromatopsiaMatrix","Zigurous.ColorPro.ChannelMixer.ChannelMix(Color,System.Single[])","Zigurous.ColorPro.ChannelMixer.ChannelMix(Color,Zigurous.ColorPro.ColorVision)","Zigurous.ColorPro.ChannelMixer.ChannelMix(Color[],System.Single[])","Zigurous.ColorPro.ChannelMixer.ChannelMix(Color[],Zigurous.ColorPro.ColorVision)","Zigurous.ColorPro.ChannelMixer.deuteranomalyMatrix","Zigurous.ColorPro.ChannelMixer.deuteranopiaMatrix","Zigurous.ColorPro.ChannelMixer.identityMatrix","Zigurous.ColorPro.ChannelMixer.protanomalyMatrix","Zigurous.ColorPro.ChannelMixer.protanopiaMatrix","Zigurous.ColorPro.ChannelMixer.tritanomalyMatrix","Zigurous.ColorPro.ChannelMixer.tritanopiaMatrix"],"id":"ChannelMixer","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"ChannelMixer","nameWithType":"ChannelMixer","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nMultiplies the RGB channels of a color by a matrix.\n","syntax":{"content":"public static class ChannelMixer","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.ChannelMixer"},{"children":null,"id":"identityMatrix","implements":null,"inheritance":null,"inheritedMembers":null,"name":"identityMatrix","nameWithType":"ChannelMixer.identityMatrix","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ChannelMixer","remarks":null,"summary":"\nThe 3x3 identity matrix.\n","syntax":{"content":"public static float[] identityMatrix { get; }","parameters":[],"return":{"description":null,"type":"System.Single[]"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.ChannelMixer.identityMatrix"},{"children":null,"id":"protanopiaMatrix","implements":null,"inheritance":null,"inheritedMembers":null,"name":"protanopiaMatrix","nameWithType":"ChannelMixer.protanopiaMatrix","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ChannelMixer","remarks":null,"summary":"\nThe channel matrix to simulate protanopia color blindness.\n","syntax":{"content":"public static float[] protanopiaMatrix { get; }","parameters":[],"return":{"description":null,"type":"System.Single[]"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.ChannelMixer.protanopiaMatrix"},{"children":null,"id":"protanomalyMatrix","implements":null,"inheritance":null,"inheritedMembers":null,"name":"protanomalyMatrix","nameWithType":"ChannelMixer.protanomalyMatrix","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ChannelMixer","remarks":null,"summary":"\nThe channel matrix to simulate protanomaly color blindness.\n","syntax":{"content":"public static float[] protanomalyMatrix { get; }","parameters":[],"return":{"description":null,"type":"System.Single[]"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.ChannelMixer.protanomalyMatrix"},{"children":null,"id":"deuteranopiaMatrix","implements":null,"inheritance":null,"inheritedMembers":null,"name":"deuteranopiaMatrix","nameWithType":"ChannelMixer.deuteranopiaMatrix","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ChannelMixer","remarks":null,"summary":"\nThe channel matrix to simulate deuteranopia color blindness.\n","syntax":{"content":"public static float[] deuteranopiaMatrix { get; }","parameters":[],"return":{"description":null,"type":"System.Single[]"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.ChannelMixer.deuteranopiaMatrix"},{"children":null,"id":"deuteranomalyMatrix","implements":null,"inheritance":null,"inheritedMembers":null,"name":"deuteranomalyMatrix","nameWithType":"ChannelMixer.deuteranomalyMatrix","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ChannelMixer","remarks":null,"summary":"\nThe channel matrix to simulate deuteranomaly color blindness.\n","syntax":{"content":"public static float[] deuteranomalyMatrix { get; }","parameters":[],"return":{"description":null,"type":"System.Single[]"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.ChannelMixer.deuteranomalyMatrix"},{"children":null,"id":"tritanopiaMatrix","implements":null,"inheritance":null,"inheritedMembers":null,"name":"tritanopiaMatrix","nameWithType":"ChannelMixer.tritanopiaMatrix","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ChannelMixer","remarks":null,"summary":"\nThe channel matrix to simulate tritanopia color blindness.\n","syntax":{"content":"public static float[] tritanopiaMatrix { get; }","parameters":[],"return":{"description":null,"type":"System.Single[]"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.ChannelMixer.tritanopiaMatrix"},{"children":null,"id":"tritanomalyMatrix","implements":null,"inheritance":null,"inheritedMembers":null,"name":"tritanomalyMatrix","nameWithType":"ChannelMixer.tritanomalyMatrix","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ChannelMixer","remarks":null,"summary":"\nThe channel matrix to simulate tritanomaly color blindness.\n","syntax":{"content":"public static float[] tritanomalyMatrix { get; }","parameters":[],"return":{"description":null,"type":"System.Single[]"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.ChannelMixer.tritanomalyMatrix"},{"children":null,"id":"achromatopsiaMatrix","implements":null,"inheritance":null,"inheritedMembers":null,"name":"achromatopsiaMatrix","nameWithType":"ChannelMixer.achromatopsiaMatrix","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ChannelMixer","remarks":null,"summary":"\nThe channel matrix to simulate achromatopsia color blindness.\n","syntax":{"content":"public static float[] achromatopsiaMatrix { get; }","parameters":[],"return":{"description":null,"type":"System.Single[]"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.ChannelMixer.achromatopsiaMatrix"},{"children":null,"id":"achromatomalyMatrix","implements":null,"inheritance":null,"inheritedMembers":null,"name":"achromatomalyMatrix","nameWithType":"ChannelMixer.achromatomalyMatrix","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ChannelMixer","remarks":null,"summary":"\nThe channel matrix to simulate achromatomaly color blindness.\n","syntax":{"content":"public static float[] achromatomalyMatrix { get; }","parameters":[],"return":{"description":null,"type":"System.Single[]"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.ChannelMixer.achromatomalyMatrix"},{"children":null,"id":"ChannelMix(Color,System.Single[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ChannelMix(Color, Single[])","nameWithType":"ChannelMixer.ChannelMix(Color, Single[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ChannelMixer","remarks":null,"summary":"\nApplies a 3x3 matrix to the RGB channels of the color.\nValues are clamped to the range [0..1].\n","syntax":{"content":"public static Color ChannelMix(this Color color, float[] m)","parameters":[{"description":"The color to apply the matrix to.","id":"color","type":"Global.Color"},{"description":"The 3x3 matrix to apply to the color.","id":"m","type":"System.Single[]"}],"return":{"description":"The color with the matrix applied.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ChannelMixer.ChannelMix(Color,System.Single[])"},{"children":null,"id":"ChannelMix(Color[],System.Single[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ChannelMix(Color[], Single[])","nameWithType":"ChannelMixer.ChannelMix(Color[], Single[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ChannelMixer","remarks":null,"summary":"\nApplies a 3x3 matrix to the RGB channels of the provided colors.\nValues are clamped to the range [0..1].\n","syntax":{"content":"public static Color[] ChannelMix(this Color[] colors, float[] m)","parameters":[{"description":"The colors to apply the matrix to.","id":"colors","type":"Global.Color[]"},{"description":"The 3x3 matrix to apply to the colors.","id":"m","type":"System.Single[]"}],"return":{"description":"The colors with the matrix applied.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ChannelMixer.ChannelMix(Color[],System.Single[])"},{"children":null,"id":"ChannelMix(Color,Zigurous.ColorPro.ColorVision)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ChannelMix(Color, ColorVision)","nameWithType":"ChannelMixer.ChannelMix(Color, ColorVision)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ChannelMixer","remarks":null,"summary":"\nApplies the channel mixer of a given color vision to the\nRGB channels of the color. Values are clamped to the range [0..1].\n","syntax":{"content":"public static Color ChannelMix(this Color color, ColorVision colorVision)","parameters":[{"description":"The color to apply the color vision matrix to.","id":"color","type":"Global.Color"},{"description":"The type of color vision to simulate.","id":"colorVision","type":"Zigurous.ColorPro.ColorVision"}],"return":{"description":"The color with the color vision applied.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ChannelMixer.ChannelMix(Color,Zigurous.ColorPro.ColorVision)"},{"children":null,"id":"ChannelMix(Color[],Zigurous.ColorPro.ColorVision)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ChannelMix(Color[], ColorVision)","nameWithType":"ChannelMixer.ChannelMix(Color[], ColorVision)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ChannelMixer","remarks":null,"summary":"\nApplies the channel mixer of a given color vision to the\nRGB channels of the provided colors. Values are clamped to the range [0..1].\n","syntax":{"content":"public static Color[] ChannelMix(this Color[] colors, ColorVision colorVision)","parameters":[{"description":"The colors to apply the color vision matrix to.","id":"colors","type":"Global.Color[]"},{"description":"The type of color vision to simulate.","id":"colorVision","type":"Zigurous.ColorPro.ColorVision"}],"return":{"description":"The colors with the color vision applied.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ChannelMixer.ChannelMix(Color[],Zigurous.ColorPro.ColorVision)"}]},{"items":[{"children":["Zigurous.ColorPro.CIELAB.#ctor(Color)","Zigurous.ColorPro.CIELAB.#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIELAB.#ctor(Color,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIELAB.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.CIELAB.#ctor(Zigurous.ColorPro.CIELAB)","Zigurous.ColorPro.CIELAB.a","Zigurous.ColorPro.CIELAB.b","Zigurous.ColorPro.CIELAB.Equals(System.Object)","Zigurous.ColorPro.CIELAB.Equals(Zigurous.ColorPro.CIELAB)","Zigurous.ColorPro.CIELAB.GetHashCode","Zigurous.ColorPro.CIELAB.Item(System.Int32)","Zigurous.ColorPro.CIELAB.L","Zigurous.ColorPro.CIELAB.op_Equality(Zigurous.ColorPro.CIELAB,Zigurous.ColorPro.CIELAB)","Zigurous.ColorPro.CIELAB.op_Explicit(Color)~Zigurous.ColorPro.CIELAB","Zigurous.ColorPro.CIELAB.op_Explicit(Zigurous.ColorPro.CIELAB)~Color","Zigurous.ColorPro.CIELAB.op_Explicit(Zigurous.ColorPro.CIELAB)~Zigurous.ColorPro.CIELCh_ab","Zigurous.ColorPro.CIELAB.op_Explicit(Zigurous.ColorPro.CIELAB)~Zigurous.ColorPro.CIEXYZ","Zigurous.ColorPro.CIELAB.op_Inequality(Zigurous.ColorPro.CIELAB,Zigurous.ColorPro.CIELAB)","Zigurous.ColorPro.CIELAB.ToColor","Zigurous.ColorPro.CIELAB.ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIELAB.ToColor(Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIELAB.ToLCh","Zigurous.ColorPro.CIELAB.ToString","Zigurous.ColorPro.CIELAB.ToXYZ","Zigurous.ColorPro.CIELAB.ToXYZ(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIELAB.ToXYZ(Zigurous.ColorPro.Tristimulus)"],"id":"CIELAB","implements":["Global.IEquatable{Zigurous.ColorPro.CIELAB}"],"inheritance":null,"inheritedMembers":null,"name":"CIELAB","nameWithType":"CIELAB","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe CIE LAB components of a color - lightness (L) and chromaticity (a,b).\n","syntax":{"content":"[Serializable]\npublic struct CIELAB : IEquatable<CIELAB>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.CIELAB"},{"children":null,"id":"L","implements":null,"inheritance":null,"inheritedMembers":null,"name":"L","nameWithType":"CIELAB.L","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nThe lightness component of the color in the range [0..100].\n","syntax":{"content":"public float L","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIELAB.L"},{"children":null,"id":"a","implements":null,"inheritance":null,"inheritedMembers":null,"name":"a","nameWithType":"CIELAB.a","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nThe green-red chromaticity component of the color in the range [-128..128].\n","syntax":{"content":"public float a","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIELAB.a"},{"children":null,"id":"b","implements":null,"inheritance":null,"inheritedMembers":null,"name":"b","nameWithType":"CIELAB.b","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nThe blue-yellow chromaticity component of the color in the range [-128..128].\n","syntax":{"content":"public float b","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIELAB.b"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"CIELAB.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.CIELAB.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELAB(Single, Single, Single)","nameWithType":"CIELAB.CIELAB(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nCreates new CIE LAB components from the given values.\n","syntax":{"content":"public CIELAB(float L, float a, float b)","parameters":[{"description":"The lightness component of the color in the range [0..100].","id":"L","type":"System.Single"},{"description":"The green-red chromaticity component of the color in the range [-128..128].","id":"a","type":"System.Single"},{"description":"The blue-yellow chromaticity component of the color in the range [-128..128].","id":"b","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELAB.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.CIELAB)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELAB(CIELAB)","nameWithType":"CIELAB.CIELAB(CIELAB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public CIELAB(CIELAB other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.CIELAB"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELAB.#ctor(Zigurous.ColorPro.CIELAB)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELAB(Color)","nameWithType":"CIELAB.CIELAB(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nCreates new CIE LAB components from the given color.\n","syntax":{"content":"public CIELAB(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELAB.#ctor(Color)"},{"children":null,"id":"#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELAB(Color, Illuminant, StandardObserver)","nameWithType":"CIELAB.CIELAB(Color, Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nCreates new CIE LAB components from the given color, illuminant, and\nstandard observer.\n","syntax":{"content":"public CIELAB(Color color, Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"},{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELAB.#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"#ctor(Color,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELAB(Color, Tristimulus)","nameWithType":"CIELAB.CIELAB(Color, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nCreates new CIE LAB components from the given color and white point.\n","syntax":{"content":"public CIELAB(Color color, Tristimulus whitePoint)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"},{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELAB.#ctor(Color,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"Equals(Zigurous.ColorPro.CIELAB)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(CIELAB)","nameWithType":"CIELAB.Equals(CIELAB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(CIELAB other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.CIELAB"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELAB.Equals(Zigurous.ColorPro.CIELAB)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"CIELAB.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELAB.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"CIELAB.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELAB.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"CIELAB.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELAB.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"CIELAB.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELAB.ToColor"},{"children":null,"id":"ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(Illuminant, StandardObserver)","nameWithType":"CIELAB.ToColor(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nConverts the components to a color using the given illuminant and\nstandard observer.\n","syntax":{"content":"public Color ToColor(Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELAB.ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToColor(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(Tristimulus)","nameWithType":"CIELAB.ToColor(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nConverts the components to a color using the given white point.\n","syntax":{"content":"public Color ToColor(Tristimulus whitePoint)","parameters":[{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELAB.ToColor(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToXYZ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToXYZ()","nameWithType":"CIELAB.ToXYZ()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nConverts the components to CIE XYZ components.\n","syntax":{"content":"public CIEXYZ ToXYZ()","parameters":null,"return":{"description":"The CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELAB.ToXYZ"},{"children":null,"id":"ToXYZ(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToXYZ(Illuminant, StandardObserver)","nameWithType":"CIELAB.ToXYZ(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nConverts the components to CIE XYZ components.\n","syntax":{"content":"public CIEXYZ ToXYZ(Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELAB.ToXYZ(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToXYZ(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToXYZ(Tristimulus)","nameWithType":"CIELAB.ToXYZ(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nConverts the components to CIE XYZ components.\n","syntax":{"content":"public CIEXYZ ToXYZ(Tristimulus whitePoint)","parameters":[{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELAB.ToXYZ(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToLCh","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLCh()","nameWithType":"CIELAB.ToLCh()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":"\nConverts the components to CIE LCh(ab) components.\n","syntax":{"content":"public CIELCh_ab ToLCh()","parameters":null,"return":{"description":"The CIE LCh(ab) components.","type":"Zigurous.ColorPro.CIELCh_ab"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELAB.ToLCh"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.CIELAB,Zigurous.ColorPro.CIELAB)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(CIELAB, CIELAB)","nameWithType":"CIELAB.Equality(CIELAB, CIELAB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(CIELAB lhs, CIELAB rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CIELAB"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CIELAB"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELAB.op_Equality(Zigurous.ColorPro.CIELAB,Zigurous.ColorPro.CIELAB)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.CIELAB,Zigurous.ColorPro.CIELAB)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(CIELAB, CIELAB)","nameWithType":"CIELAB.Inequality(CIELAB, CIELAB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(CIELAB lhs, CIELAB rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CIELAB"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CIELAB"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELAB.op_Inequality(Zigurous.ColorPro.CIELAB,Zigurous.ColorPro.CIELAB)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIELAB)~Zigurous.ColorPro.CIELCh_ab","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIELAB to CIELCh_ab)","nameWithType":"CIELAB.Explicit(CIELAB to CIELCh_ab)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIELCh_ab(CIELAB components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIELAB"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIELCh_ab"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELAB.op_Explicit(Zigurous.ColorPro.CIELAB)~Zigurous.ColorPro.CIELCh_ab"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIELAB)~Zigurous.ColorPro.CIEXYZ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIELAB to CIEXYZ)","nameWithType":"CIELAB.Explicit(CIELAB to CIEXYZ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIEXYZ(CIELAB components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIELAB"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELAB.op_Explicit(Zigurous.ColorPro.CIELAB)~Zigurous.ColorPro.CIEXYZ"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIELAB)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIELAB to Color)","nameWithType":"CIELAB.Explicit(CIELAB to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(CIELAB components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIELAB"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELAB.op_Explicit(Zigurous.ColorPro.CIELAB)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.CIELAB","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to CIELAB)","nameWithType":"CIELAB.Explicit(Color to CIELAB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELAB","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIELAB(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIELAB"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELAB.op_Explicit(Color)~Zigurous.ColorPro.CIELAB"}]},{"items":[{"children":["Zigurous.ColorPro.CIELCh_ab.#ctor(Color)","Zigurous.ColorPro.CIELCh_ab.#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIELCh_ab.#ctor(Color,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIELCh_ab.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.CIELCh_ab.#ctor(Zigurous.ColorPro.CIELCh_ab)","Zigurous.ColorPro.CIELCh_ab.C","Zigurous.ColorPro.CIELCh_ab.Equals(System.Object)","Zigurous.ColorPro.CIELCh_ab.Equals(Zigurous.ColorPro.CIELCh_ab)","Zigurous.ColorPro.CIELCh_ab.GetHashCode","Zigurous.ColorPro.CIELCh_ab.h","Zigurous.ColorPro.CIELCh_ab.Item(System.Int32)","Zigurous.ColorPro.CIELCh_ab.L","Zigurous.ColorPro.CIELCh_ab.op_Equality(Zigurous.ColorPro.CIELCh_ab,Zigurous.ColorPro.CIELCh_ab)","Zigurous.ColorPro.CIELCh_ab.op_Explicit(Color)~Zigurous.ColorPro.CIELCh_ab","Zigurous.ColorPro.CIELCh_ab.op_Explicit(Zigurous.ColorPro.CIELCh_ab)~Color","Zigurous.ColorPro.CIELCh_ab.op_Explicit(Zigurous.ColorPro.CIELCh_ab)~Zigurous.ColorPro.CIELAB","Zigurous.ColorPro.CIELCh_ab.op_Inequality(Zigurous.ColorPro.CIELCh_ab,Zigurous.ColorPro.CIELCh_ab)","Zigurous.ColorPro.CIELCh_ab.ToColor","Zigurous.ColorPro.CIELCh_ab.ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIELCh_ab.ToColor(Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIELCh_ab.ToLab","Zigurous.ColorPro.CIELCh_ab.ToString"],"id":"CIELCh_ab","implements":["Global.IEquatable{Zigurous.ColorPro.CIELCh_ab}"],"inheritance":null,"inheritedMembers":null,"name":"CIELCh_ab","nameWithType":"CIELCh_ab","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe CIE LCh(ab) components of a color - lightness (L), chroma (C), and hue (h).\n","syntax":{"content":"[Serializable]\npublic struct CIELCh_ab : IEquatable<CIELCh_ab>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.CIELCh_ab"},{"children":null,"id":"L","implements":null,"inheritance":null,"inheritedMembers":null,"name":"L","nameWithType":"CIELCh_ab.L","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nThe lightness component of the color in the range [0..100].\n","syntax":{"content":"public float L","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIELCh_ab.L"},{"children":null,"id":"C","implements":null,"inheritance":null,"inheritedMembers":null,"name":"C","nameWithType":"CIELCh_ab.C","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nThe chroma component of the color.\n","syntax":{"content":"public float C","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIELCh_ab.C"},{"children":null,"id":"h","implements":null,"inheritance":null,"inheritedMembers":null,"name":"h","nameWithType":"CIELCh_ab.h","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nThe hue component of the color in the range [0..360°].\n","syntax":{"content":"public float h","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIELCh_ab.h"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"CIELCh_ab.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.CIELCh_ab.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELCh_ab(Single, Single, Single)","nameWithType":"CIELCh_ab.CIELCh_ab(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nCreates new CIE LCh(ab) components from the given values.\n","syntax":{"content":"public CIELCh_ab(float L, float C, float h)","parameters":[{"description":"The lightness component of the color in the range [0..100].","id":"L","type":"System.Single"},{"description":"The chroma component of the color.","id":"C","type":"System.Single"},{"description":"The hue component of the color in the range [0..360°].","id":"h","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELCh_ab.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.CIELCh_ab)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELCh_ab(CIELCh_ab)","nameWithType":"CIELCh_ab.CIELCh_ab(CIELCh_ab)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public CIELCh_ab(CIELCh_ab other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.CIELCh_ab"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELCh_ab.#ctor(Zigurous.ColorPro.CIELCh_ab)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELCh_ab(Color)","nameWithType":"CIELCh_ab.CIELCh_ab(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nCreates new CIE LCh(ab) components from the given color.\n","syntax":{"content":"public CIELCh_ab(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELCh_ab.#ctor(Color)"},{"children":null,"id":"#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELCh_ab(Color, Illuminant, StandardObserver)","nameWithType":"CIELCh_ab.CIELCh_ab(Color, Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nCreates new CIE LCh(ab) components from the given color, illuminant,\nand standard observer.\n","syntax":{"content":"public CIELCh_ab(Color color, Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"},{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELCh_ab.#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"#ctor(Color,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELCh_ab(Color, Tristimulus)","nameWithType":"CIELCh_ab.CIELCh_ab(Color, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nCreates new CIE LCh(ab) components from the given color and white point.\n","syntax":{"content":"public CIELCh_ab(Color color, Tristimulus whitePoint)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"},{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELCh_ab.#ctor(Color,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"Equals(Zigurous.ColorPro.CIELCh_ab)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(CIELCh_ab)","nameWithType":"CIELCh_ab.Equals(CIELCh_ab)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(CIELCh_ab other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.CIELCh_ab"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELCh_ab.Equals(Zigurous.ColorPro.CIELCh_ab)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"CIELCh_ab.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELCh_ab.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"CIELCh_ab.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELCh_ab.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"CIELCh_ab.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELCh_ab.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"CIELCh_ab.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELCh_ab.ToColor"},{"children":null,"id":"ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(Illuminant, StandardObserver)","nameWithType":"CIELCh_ab.ToColor(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nConverts the components to a color using the given illuminant and\nstandard observer.\n","syntax":{"content":"public Color ToColor(Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELCh_ab.ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToColor(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(Tristimulus)","nameWithType":"CIELCh_ab.ToColor(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nConverts the components to a color using the given white point.\n","syntax":{"content":"public Color ToColor(Tristimulus whitePoint)","parameters":[{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELCh_ab.ToColor(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToLab","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLab()","nameWithType":"CIELCh_ab.ToLab()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":"\nConverts the components to CIE LAB components.\n","syntax":{"content":"public CIELAB ToLab()","parameters":null,"return":{"description":"The CIE LAB components.","type":"Zigurous.ColorPro.CIELAB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELCh_ab.ToLab"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.CIELCh_ab,Zigurous.ColorPro.CIELCh_ab)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(CIELCh_ab, CIELCh_ab)","nameWithType":"CIELCh_ab.Equality(CIELCh_ab, CIELCh_ab)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(CIELCh_ab lhs, CIELCh_ab rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CIELCh_ab"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CIELCh_ab"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELCh_ab.op_Equality(Zigurous.ColorPro.CIELCh_ab,Zigurous.ColorPro.CIELCh_ab)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.CIELCh_ab,Zigurous.ColorPro.CIELCh_ab)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(CIELCh_ab, CIELCh_ab)","nameWithType":"CIELCh_ab.Inequality(CIELCh_ab, CIELCh_ab)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(CIELCh_ab lhs, CIELCh_ab rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CIELCh_ab"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CIELCh_ab"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELCh_ab.op_Inequality(Zigurous.ColorPro.CIELCh_ab,Zigurous.ColorPro.CIELCh_ab)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIELCh_ab)~Zigurous.ColorPro.CIELAB","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIELCh_ab to CIELAB)","nameWithType":"CIELCh_ab.Explicit(CIELCh_ab to CIELAB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIELAB(CIELCh_ab components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIELCh_ab"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIELAB"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELCh_ab.op_Explicit(Zigurous.ColorPro.CIELCh_ab)~Zigurous.ColorPro.CIELAB"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIELCh_ab)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIELCh_ab to Color)","nameWithType":"CIELCh_ab.Explicit(CIELCh_ab to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(CIELCh_ab components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIELCh_ab"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELCh_ab.op_Explicit(Zigurous.ColorPro.CIELCh_ab)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.CIELCh_ab","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to CIELCh_ab)","nameWithType":"CIELCh_ab.Explicit(Color to CIELCh_ab)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_ab","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIELCh_ab(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIELCh_ab"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELCh_ab.op_Explicit(Color)~Zigurous.ColorPro.CIELCh_ab"}]},{"items":[{"children":["Zigurous.ColorPro.CIELCh_uv.#ctor(Color)","Zigurous.ColorPro.CIELCh_uv.#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIELCh_uv.#ctor(Color,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIELCh_uv.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.CIELCh_uv.#ctor(Zigurous.ColorPro.CIELCh_uv)","Zigurous.ColorPro.CIELCh_uv.C","Zigurous.ColorPro.CIELCh_uv.Equals(System.Object)","Zigurous.ColorPro.CIELCh_uv.Equals(Zigurous.ColorPro.CIELCh_uv)","Zigurous.ColorPro.CIELCh_uv.GetHashCode","Zigurous.ColorPro.CIELCh_uv.h","Zigurous.ColorPro.CIELCh_uv.Item(System.Int32)","Zigurous.ColorPro.CIELCh_uv.L","Zigurous.ColorPro.CIELCh_uv.op_Equality(Zigurous.ColorPro.CIELCh_uv,Zigurous.ColorPro.CIELCh_uv)","Zigurous.ColorPro.CIELCh_uv.op_Explicit(Color)~Zigurous.ColorPro.CIELCh_uv","Zigurous.ColorPro.CIELCh_uv.op_Explicit(Zigurous.ColorPro.CIELCh_uv)~Color","Zigurous.ColorPro.CIELCh_uv.op_Explicit(Zigurous.ColorPro.CIELCh_uv)~Zigurous.ColorPro.CIELUV","Zigurous.ColorPro.CIELCh_uv.op_Inequality(Zigurous.ColorPro.CIELCh_uv,Zigurous.ColorPro.CIELCh_uv)","Zigurous.ColorPro.CIELCh_uv.ToColor","Zigurous.ColorPro.CIELCh_uv.ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIELCh_uv.ToColor(Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIELCh_uv.ToLuv","Zigurous.ColorPro.CIELCh_uv.ToString"],"id":"CIELCh_uv","implements":["Global.IEquatable{Zigurous.ColorPro.CIELCh_uv}"],"inheritance":null,"inheritedMembers":null,"name":"CIELCh_uv","nameWithType":"CIELCh_uv","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe CIE LCh(uv) components of a color - lightness (L), chroma (C), and hue (h).\n","syntax":{"content":"[Serializable]\npublic struct CIELCh_uv : IEquatable<CIELCh_uv>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.CIELCh_uv"},{"children":null,"id":"L","implements":null,"inheritance":null,"inheritedMembers":null,"name":"L","nameWithType":"CIELCh_uv.L","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nThe lightness component of the color in the range [0..100].\n","syntax":{"content":"public float L","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIELCh_uv.L"},{"children":null,"id":"C","implements":null,"inheritance":null,"inheritedMembers":null,"name":"C","nameWithType":"CIELCh_uv.C","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nThe chroma component of the color.\n","syntax":{"content":"public float C","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIELCh_uv.C"},{"children":null,"id":"h","implements":null,"inheritance":null,"inheritedMembers":null,"name":"h","nameWithType":"CIELCh_uv.h","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nThe hue component of the color in the range [0..360°].\n","syntax":{"content":"public float h","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIELCh_uv.h"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"CIELCh_uv.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.CIELCh_uv.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELCh_uv(Single, Single, Single)","nameWithType":"CIELCh_uv.CIELCh_uv(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nCreates new CIE LCh(uv) components from the given values.\n","syntax":{"content":"public CIELCh_uv(float L, float C, float h)","parameters":[{"description":"The lightness component of the color in the range [0..100].","id":"L","type":"System.Single"},{"description":"The chroma component of the color.","id":"C","type":"System.Single"},{"description":"The hue component of the color in the range [0..360°].","id":"h","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELCh_uv.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.CIELCh_uv)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELCh_uv(CIELCh_uv)","nameWithType":"CIELCh_uv.CIELCh_uv(CIELCh_uv)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public CIELCh_uv(CIELCh_uv other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.CIELCh_uv"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELCh_uv.#ctor(Zigurous.ColorPro.CIELCh_uv)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELCh_uv(Color)","nameWithType":"CIELCh_uv.CIELCh_uv(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nCreates new CIE LCh(uv) components from the given color.\n","syntax":{"content":"public CIELCh_uv(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELCh_uv.#ctor(Color)"},{"children":null,"id":"#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELCh_uv(Color, Illuminant, StandardObserver)","nameWithType":"CIELCh_uv.CIELCh_uv(Color, Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nCreates new CIE LCh(uv) components from the given color, illuminant,\nand standard observer.\n","syntax":{"content":"public CIELCh_uv(Color color, Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"},{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELCh_uv.#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"#ctor(Color,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELCh_uv(Color, Tristimulus)","nameWithType":"CIELCh_uv.CIELCh_uv(Color, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nCreates new CIE LCh(uv) components from the given color and white point.\n","syntax":{"content":"public CIELCh_uv(Color color, Tristimulus whitePoint)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"},{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELCh_uv.#ctor(Color,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"Equals(Zigurous.ColorPro.CIELCh_uv)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(CIELCh_uv)","nameWithType":"CIELCh_uv.Equals(CIELCh_uv)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(CIELCh_uv other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.CIELCh_uv"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELCh_uv.Equals(Zigurous.ColorPro.CIELCh_uv)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"CIELCh_uv.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELCh_uv.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"CIELCh_uv.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELCh_uv.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"CIELCh_uv.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELCh_uv.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"CIELCh_uv.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELCh_uv.ToColor"},{"children":null,"id":"ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(Illuminant, StandardObserver)","nameWithType":"CIELCh_uv.ToColor(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nConverts the components to a color using the given illuminant and\nstandard observer.\n","syntax":{"content":"public Color ToColor(Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELCh_uv.ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToColor(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(Tristimulus)","nameWithType":"CIELCh_uv.ToColor(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nConverts the components to a color using the given white point.\n","syntax":{"content":"public Color ToColor(Tristimulus whitePoint)","parameters":[{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELCh_uv.ToColor(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToLuv","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLuv()","nameWithType":"CIELCh_uv.ToLuv()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":"\nConverts the components to CIE LUV components.\n","syntax":{"content":"public CIELUV ToLuv()","parameters":null,"return":{"description":"The CIE LUV components.","type":"Zigurous.ColorPro.CIELUV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELCh_uv.ToLuv"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.CIELCh_uv,Zigurous.ColorPro.CIELCh_uv)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(CIELCh_uv, CIELCh_uv)","nameWithType":"CIELCh_uv.Equality(CIELCh_uv, CIELCh_uv)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(CIELCh_uv lhs, CIELCh_uv rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CIELCh_uv"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CIELCh_uv"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELCh_uv.op_Equality(Zigurous.ColorPro.CIELCh_uv,Zigurous.ColorPro.CIELCh_uv)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.CIELCh_uv,Zigurous.ColorPro.CIELCh_uv)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(CIELCh_uv, CIELCh_uv)","nameWithType":"CIELCh_uv.Inequality(CIELCh_uv, CIELCh_uv)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(CIELCh_uv lhs, CIELCh_uv rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CIELCh_uv"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CIELCh_uv"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELCh_uv.op_Inequality(Zigurous.ColorPro.CIELCh_uv,Zigurous.ColorPro.CIELCh_uv)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIELCh_uv)~Zigurous.ColorPro.CIELUV","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIELCh_uv to CIELUV)","nameWithType":"CIELCh_uv.Explicit(CIELCh_uv to CIELUV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIELUV(CIELCh_uv components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIELCh_uv"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIELUV"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELCh_uv.op_Explicit(Zigurous.ColorPro.CIELCh_uv)~Zigurous.ColorPro.CIELUV"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIELCh_uv)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIELCh_uv to Color)","nameWithType":"CIELCh_uv.Explicit(CIELCh_uv to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(CIELCh_uv components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIELCh_uv"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELCh_uv.op_Explicit(Zigurous.ColorPro.CIELCh_uv)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.CIELCh_uv","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to CIELCh_uv)","nameWithType":"CIELCh_uv.Explicit(Color to CIELCh_uv)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELCh_uv","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIELCh_uv(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIELCh_uv"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELCh_uv.op_Explicit(Color)~Zigurous.ColorPro.CIELCh_uv"}]},{"items":[{"children":["Zigurous.ColorPro.CIELUV.#ctor(Color)","Zigurous.ColorPro.CIELUV.#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIELUV.#ctor(Color,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIELUV.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.CIELUV.#ctor(Zigurous.ColorPro.CIELUV)","Zigurous.ColorPro.CIELUV.Equals(System.Object)","Zigurous.ColorPro.CIELUV.Equals(Zigurous.ColorPro.CIELUV)","Zigurous.ColorPro.CIELUV.GetHashCode","Zigurous.ColorPro.CIELUV.Item(System.Int32)","Zigurous.ColorPro.CIELUV.L","Zigurous.ColorPro.CIELUV.op_Equality(Zigurous.ColorPro.CIELUV,Zigurous.ColorPro.CIELUV)","Zigurous.ColorPro.CIELUV.op_Explicit(Color)~Zigurous.ColorPro.CIELUV","Zigurous.ColorPro.CIELUV.op_Explicit(Zigurous.ColorPro.CIELUV)~Color","Zigurous.ColorPro.CIELUV.op_Explicit(Zigurous.ColorPro.CIELUV)~Zigurous.ColorPro.CIELCh_uv","Zigurous.ColorPro.CIELUV.op_Explicit(Zigurous.ColorPro.CIELUV)~Zigurous.ColorPro.CIEXYZ","Zigurous.ColorPro.CIELUV.op_Inequality(Zigurous.ColorPro.CIELUV,Zigurous.ColorPro.CIELUV)","Zigurous.ColorPro.CIELUV.ToColor","Zigurous.ColorPro.CIELUV.ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIELUV.ToColor(Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIELUV.ToLCh","Zigurous.ColorPro.CIELUV.ToString","Zigurous.ColorPro.CIELUV.ToXYZ","Zigurous.ColorPro.CIELUV.ToXYZ(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIELUV.ToXYZ(Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIELUV.u","Zigurous.ColorPro.CIELUV.v"],"id":"CIELUV","implements":["Global.IEquatable{Zigurous.ColorPro.CIELUV}"],"inheritance":null,"inheritedMembers":null,"name":"CIELUV","nameWithType":"CIELUV","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe CIE LUV components of a color - lightness (L) and chromaticity (u,v).\n","syntax":{"content":"[Serializable]\npublic struct CIELUV : IEquatable<CIELUV>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.CIELUV"},{"children":null,"id":"L","implements":null,"inheritance":null,"inheritedMembers":null,"name":"L","nameWithType":"CIELUV.L","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nThe lightness component of the color in the range [0..100].\n","syntax":{"content":"public float L","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIELUV.L"},{"children":null,"id":"u","implements":null,"inheritance":null,"inheritedMembers":null,"name":"u","nameWithType":"CIELUV.u","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nThe green-red chromaticity component of the color in the range [-100..100].\n","syntax":{"content":"public float u","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIELUV.u"},{"children":null,"id":"v","implements":null,"inheritance":null,"inheritedMembers":null,"name":"v","nameWithType":"CIELUV.v","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nThe blue-yellow chromaticity component of the color in the range [-100..100].\n","syntax":{"content":"public float v","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIELUV.v"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"CIELUV.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.CIELUV.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELUV(Single, Single, Single)","nameWithType":"CIELUV.CIELUV(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nCreates new CIE LUV components from the given values.\n","syntax":{"content":"public CIELUV(float L, float u, float v)","parameters":[{"description":"The lightness component of the color in the range [0..100].","id":"L","type":"System.Single"},{"description":"The green-red chromaticity component of the color in the range [-100..100].","id":"u","type":"System.Single"},{"description":"The blue-yellow chromaticity component of the color in the range [-100..100].","id":"v","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELUV.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.CIELUV)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELUV(CIELUV)","nameWithType":"CIELUV.CIELUV(CIELUV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public CIELUV(CIELUV other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.CIELUV"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELUV.#ctor(Zigurous.ColorPro.CIELUV)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELUV(Color)","nameWithType":"CIELUV.CIELUV(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nCreates new CIE LUV components from the given color.\n","syntax":{"content":"public CIELUV(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELUV.#ctor(Color)"},{"children":null,"id":"#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELUV(Color, Illuminant, StandardObserver)","nameWithType":"CIELUV.CIELUV(Color, Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nCreates new CIE LUV components from the given color, illuminant, and\nstandard observer.\n","syntax":{"content":"public CIELUV(Color color, Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"},{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELUV.#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"#ctor(Color,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIELUV(Color, Tristimulus)","nameWithType":"CIELUV.CIELUV(Color, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nCreates new CIE LUV components from the given color and white point.\n","syntax":{"content":"public CIELUV(Color color, Tristimulus whitePoint)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"},{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIELUV.#ctor(Color,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"Equals(Zigurous.ColorPro.CIELUV)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(CIELUV)","nameWithType":"CIELUV.Equals(CIELUV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(CIELUV other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.CIELUV"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELUV.Equals(Zigurous.ColorPro.CIELUV)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"CIELUV.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELUV.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"CIELUV.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELUV.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"CIELUV.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELUV.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"CIELUV.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELUV.ToColor"},{"children":null,"id":"ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(Illuminant, StandardObserver)","nameWithType":"CIELUV.ToColor(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nConverts the components to a color using the given illuminant and\nstandard observer.\n","syntax":{"content":"public Color ToColor(Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELUV.ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToColor(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(Tristimulus)","nameWithType":"CIELUV.ToColor(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nConverts the components to a color using the given white point.\n","syntax":{"content":"public Color ToColor(Tristimulus whitePoint)","parameters":[{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELUV.ToColor(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToXYZ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToXYZ()","nameWithType":"CIELUV.ToXYZ()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nConverts the components to CIE XYZ components.\n","syntax":{"content":"public CIEXYZ ToXYZ()","parameters":null,"return":{"description":"The CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELUV.ToXYZ"},{"children":null,"id":"ToXYZ(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToXYZ(Illuminant, StandardObserver)","nameWithType":"CIELUV.ToXYZ(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nConverts the components to CIE XYZ components.\n","syntax":{"content":"public CIEXYZ ToXYZ(Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELUV.ToXYZ(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToXYZ(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToXYZ(Tristimulus)","nameWithType":"CIELUV.ToXYZ(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nConverts the components to CIE XYZ components.\n","syntax":{"content":"public CIEXYZ ToXYZ(Tristimulus whitePoint)","parameters":[{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELUV.ToXYZ(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToLCh","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLCh()","nameWithType":"CIELUV.ToLCh()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":"\nConverts the components to CIE LCh(uv) components.\n","syntax":{"content":"public CIELCh_uv ToLCh()","parameters":null,"return":{"description":"The CIE LCh(uv) components.","type":"Zigurous.ColorPro.CIELCh_uv"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIELUV.ToLCh"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.CIELUV,Zigurous.ColorPro.CIELUV)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(CIELUV, CIELUV)","nameWithType":"CIELUV.Equality(CIELUV, CIELUV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(CIELUV lhs, CIELUV rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CIELUV"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CIELUV"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELUV.op_Equality(Zigurous.ColorPro.CIELUV,Zigurous.ColorPro.CIELUV)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.CIELUV,Zigurous.ColorPro.CIELUV)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(CIELUV, CIELUV)","nameWithType":"CIELUV.Inequality(CIELUV, CIELUV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(CIELUV lhs, CIELUV rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CIELUV"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CIELUV"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELUV.op_Inequality(Zigurous.ColorPro.CIELUV,Zigurous.ColorPro.CIELUV)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIELUV)~Zigurous.ColorPro.CIELCh_uv","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIELUV to CIELCh_uv)","nameWithType":"CIELUV.Explicit(CIELUV to CIELCh_uv)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIELCh_uv(CIELUV components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIELUV"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIELCh_uv"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELUV.op_Explicit(Zigurous.ColorPro.CIELUV)~Zigurous.ColorPro.CIELCh_uv"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIELUV)~Zigurous.ColorPro.CIEXYZ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIELUV to CIEXYZ)","nameWithType":"CIELUV.Explicit(CIELUV to CIEXYZ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIEXYZ(CIELUV components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIELUV"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELUV.op_Explicit(Zigurous.ColorPro.CIELUV)~Zigurous.ColorPro.CIEXYZ"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIELUV)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIELUV to Color)","nameWithType":"CIELUV.Explicit(CIELUV to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(CIELUV components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIELUV"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELUV.op_Explicit(Zigurous.ColorPro.CIELUV)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.CIELUV","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to CIELUV)","nameWithType":"CIELUV.Explicit(Color to CIELUV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIELUV","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIELUV(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIELUV"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIELUV.op_Explicit(Color)~Zigurous.ColorPro.CIELUV"}]},{"items":[{"children":["Zigurous.ColorPro.CIEUCS.#ctor(Color)","Zigurous.ColorPro.CIEUCS.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.CIEUCS.#ctor(Zigurous.ColorPro.CIEUCS)","Zigurous.ColorPro.CIEUCS.Equals(System.Object)","Zigurous.ColorPro.CIEUCS.Equals(Zigurous.ColorPro.CIEUCS)","Zigurous.ColorPro.CIEUCS.GetHashCode","Zigurous.ColorPro.CIEUCS.Item(System.Int32)","Zigurous.ColorPro.CIEUCS.op_Equality(Zigurous.ColorPro.CIEUCS,Zigurous.ColorPro.CIEUCS)","Zigurous.ColorPro.CIEUCS.op_Explicit(Color)~Zigurous.ColorPro.CIEUCS","Zigurous.ColorPro.CIEUCS.op_Explicit(Zigurous.ColorPro.CIEUCS)~Color","Zigurous.ColorPro.CIEUCS.op_Explicit(Zigurous.ColorPro.CIEUCS)~Zigurous.ColorPro.CIExyY","Zigurous.ColorPro.CIEUCS.op_Explicit(Zigurous.ColorPro.CIEUCS)~Zigurous.ColorPro.CIEXYZ","Zigurous.ColorPro.CIEUCS.op_Inequality(Zigurous.ColorPro.CIEUCS,Zigurous.ColorPro.CIEUCS)","Zigurous.ColorPro.CIEUCS.ToCCT","Zigurous.ColorPro.CIEUCS.ToColor","Zigurous.ColorPro.CIEUCS.ToString","Zigurous.ColorPro.CIEUCS.ToxyY","Zigurous.ColorPro.CIEUCS.ToXYZ","Zigurous.ColorPro.CIEUCS.u","Zigurous.ColorPro.CIEUCS.v","Zigurous.ColorPro.CIEUCS.Y"],"id":"CIEUCS","implements":["Global.IEquatable{Zigurous.ColorPro.CIEUCS}"],"inheritance":null,"inheritedMembers":null,"name":"CIEUCS","nameWithType":"CIEUCS","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe CIE UCS components of a color - (u,v) chromaticity coordinates.\n","syntax":{"content":"[Serializable]\npublic struct CIEUCS : IEquatable<CIEUCS>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.CIEUCS"},{"children":null,"id":"u","implements":null,"inheritance":null,"inheritedMembers":null,"name":"u","nameWithType":"CIEUCS.u","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":"\nThe u-axis chromaticity coordinate of the color in the range [0..1].\n","syntax":{"content":"public float u","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIEUCS.u"},{"children":null,"id":"v","implements":null,"inheritance":null,"inheritedMembers":null,"name":"v","nameWithType":"CIEUCS.v","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":"\nThe v-axis chromaticity coordinate of the color in the range [0..1].\n","syntax":{"content":"public float v","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIEUCS.v"},{"children":null,"id":"Y","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Y","nameWithType":"CIEUCS.Y","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":"\nThe luminance component of the color in the range [0..100].\n","syntax":{"content":"public float Y","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIEUCS.Y"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"CIEUCS.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.CIEUCS.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIEUCS(Single, Single, Single)","nameWithType":"CIEUCS.CIEUCS(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":"\nCreates new CIE UCS components from the given values.\n","syntax":{"content":"public CIEUCS(float u, float v, float Y = 1F)","parameters":[{"description":"The u-axis chromaticity coordinate of the color in the range [0..1].","id":"u","type":"System.Single"},{"description":"The v-axis chromaticity coordinate of the color in the range [0..1].","id":"v","type":"System.Single"},{"description":"The luminance component of the color in the range [0..100].","id":"Y","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIEUCS.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.CIEUCS)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIEUCS(CIEUCS)","nameWithType":"CIEUCS.CIEUCS(CIEUCS)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public CIEUCS(CIEUCS other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.CIEUCS"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIEUCS.#ctor(Zigurous.ColorPro.CIEUCS)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIEUCS(Color)","nameWithType":"CIEUCS.CIEUCS(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":"\nCreates new CIE UCS components from the given color.\n","syntax":{"content":"public CIEUCS(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIEUCS.#ctor(Color)"},{"children":null,"id":"Equals(Zigurous.ColorPro.CIEUCS)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(CIEUCS)","nameWithType":"CIEUCS.Equals(CIEUCS)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(CIEUCS other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.CIEUCS"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUCS.Equals(Zigurous.ColorPro.CIEUCS)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"CIEUCS.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUCS.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"CIEUCS.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUCS.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"CIEUCS.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUCS.ToString"},{"children":null,"id":"ToCCT","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToCCT()","nameWithType":"CIEUCS.ToCCT()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":"\nConverts the components to a CCT temperature in Kelvin.\n","syntax":{"content":"public float ToCCT()","parameters":null,"return":{"description":"The CCT temperature in Kelvin.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUCS.ToCCT"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"CIEUCS.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":"\nConverts the components to a color using the given luminance value.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUCS.ToColor"},{"children":null,"id":"ToXYZ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToXYZ()","nameWithType":"CIEUCS.ToXYZ()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":"\nConverts the components to CIE XYZ components.\n","syntax":{"content":"public CIEXYZ ToXYZ()","parameters":null,"return":{"description":"The CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUCS.ToXYZ"},{"children":null,"id":"ToxyY","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToxyY()","nameWithType":"CIEUCS.ToxyY()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":"\nConverts the components to CIE xyY components.\n","syntax":{"content":"public CIExyY ToxyY()","parameters":null,"return":{"description":"The CIE xyY components.","type":"Zigurous.ColorPro.CIExyY"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUCS.ToxyY"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.CIEUCS,Zigurous.ColorPro.CIEUCS)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(CIEUCS, CIEUCS)","nameWithType":"CIEUCS.Equality(CIEUCS, CIEUCS)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(CIEUCS lhs, CIEUCS rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CIEUCS"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CIEUCS"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEUCS.op_Equality(Zigurous.ColorPro.CIEUCS,Zigurous.ColorPro.CIEUCS)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.CIEUCS,Zigurous.ColorPro.CIEUCS)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(CIEUCS, CIEUCS)","nameWithType":"CIEUCS.Inequality(CIEUCS, CIEUCS)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(CIEUCS lhs, CIEUCS rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CIEUCS"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CIEUCS"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEUCS.op_Inequality(Zigurous.ColorPro.CIEUCS,Zigurous.ColorPro.CIEUCS)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIEUCS)~Zigurous.ColorPro.CIExyY","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIEUCS to CIExyY)","nameWithType":"CIEUCS.Explicit(CIEUCS to CIExyY)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIExyY(CIEUCS components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIEUCS"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIExyY"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEUCS.op_Explicit(Zigurous.ColorPro.CIEUCS)~Zigurous.ColorPro.CIExyY"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIEUCS)~Zigurous.ColorPro.CIEXYZ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIEUCS to CIEXYZ)","nameWithType":"CIEUCS.Explicit(CIEUCS to CIEXYZ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIEXYZ(CIEUCS components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIEUCS"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEUCS.op_Explicit(Zigurous.ColorPro.CIEUCS)~Zigurous.ColorPro.CIEXYZ"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIEUCS)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIEUCS to Color)","nameWithType":"CIEUCS.Explicit(CIEUCS to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(CIEUCS components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIEUCS"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEUCS.op_Explicit(Zigurous.ColorPro.CIEUCS)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.CIEUCS","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to CIEUCS)","nameWithType":"CIEUCS.Explicit(Color to CIEUCS)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUCS","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIEUCS(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIEUCS"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEUCS.op_Explicit(Color)~Zigurous.ColorPro.CIEUCS"}]},{"items":[{"children":["Zigurous.ColorPro.CIEUVW.#ctor(Color)","Zigurous.ColorPro.CIEUVW.#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIEUVW.#ctor(Color,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIEUVW.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.CIEUVW.#ctor(Zigurous.ColorPro.CIEUVW)","Zigurous.ColorPro.CIEUVW.Equals(System.Object)","Zigurous.ColorPro.CIEUVW.Equals(Zigurous.ColorPro.CIEUVW)","Zigurous.ColorPro.CIEUVW.GetHashCode","Zigurous.ColorPro.CIEUVW.Item(System.Int32)","Zigurous.ColorPro.CIEUVW.op_Equality(Zigurous.ColorPro.CIEUVW,Zigurous.ColorPro.CIEUVW)","Zigurous.ColorPro.CIEUVW.op_Explicit(Color)~Zigurous.ColorPro.CIEUVW","Zigurous.ColorPro.CIEUVW.op_Explicit(Zigurous.ColorPro.CIEUVW)~Color","Zigurous.ColorPro.CIEUVW.op_Explicit(Zigurous.ColorPro.CIEUVW)~Zigurous.ColorPro.CIEUCS","Zigurous.ColorPro.CIEUVW.op_Explicit(Zigurous.ColorPro.CIEUVW)~Zigurous.ColorPro.CIEXYZ","Zigurous.ColorPro.CIEUVW.op_Inequality(Zigurous.ColorPro.CIEUVW,Zigurous.ColorPro.CIEUVW)","Zigurous.ColorPro.CIEUVW.ToColor","Zigurous.ColorPro.CIEUVW.ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIEUVW.ToColor(Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIEUVW.ToString","Zigurous.ColorPro.CIEUVW.ToUCS","Zigurous.ColorPro.CIEUVW.ToUCS(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIEUVW.ToUCS(Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIEUVW.ToXYZ","Zigurous.ColorPro.CIEUVW.ToXYZ(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIEUVW.ToXYZ(Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIEUVW.U","Zigurous.ColorPro.CIEUVW.V","Zigurous.ColorPro.CIEUVW.W"],"id":"CIEUVW","implements":["Global.IEquatable{Zigurous.ColorPro.CIEUVW}"],"inheritance":null,"inheritedMembers":null,"name":"CIEUVW","nameWithType":"CIEUVW","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe CIE UVW components of a color - chromaticity (U,V) and lightness (W).\n","syntax":{"content":"[Serializable]\npublic struct CIEUVW : IEquatable<CIEUVW>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.CIEUVW"},{"children":null,"id":"U","implements":null,"inheritance":null,"inheritedMembers":null,"name":"U","nameWithType":"CIEUVW.U","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nThe U chromaticity component of the color in the range [-100..100].\n","syntax":{"content":"public float U","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIEUVW.U"},{"children":null,"id":"V","implements":null,"inheritance":null,"inheritedMembers":null,"name":"V","nameWithType":"CIEUVW.V","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nThe V chromaticity component of the color in the range [-100..100].\n","syntax":{"content":"public float V","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIEUVW.V"},{"children":null,"id":"W","implements":null,"inheritance":null,"inheritedMembers":null,"name":"W","nameWithType":"CIEUVW.W","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nThe lightness component of the color in the range [0..100].\n","syntax":{"content":"public float W","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIEUVW.W"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"CIEUVW.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.CIEUVW.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIEUVW(Single, Single, Single)","nameWithType":"CIEUVW.CIEUVW(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nCreates new CIE UVW components from the given values.\n","syntax":{"content":"public CIEUVW(float U, float V, float W)","parameters":[{"description":"The U chromaticity component of the color in the range [-100..100].","id":"U","type":"System.Single"},{"description":"The V chromaticity component of the color in the range [-100..100].","id":"V","type":"System.Single"},{"description":"The lightness component of the color in the range [0..100].","id":"W","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIEUVW.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.CIEUVW)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIEUVW(CIEUVW)","nameWithType":"CIEUVW.CIEUVW(CIEUVW)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public CIEUVW(CIEUVW other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.CIEUVW"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIEUVW.#ctor(Zigurous.ColorPro.CIEUVW)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIEUVW(Color)","nameWithType":"CIEUVW.CIEUVW(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nCreates new CIE UVW components from the given color.\n","syntax":{"content":"public CIEUVW(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIEUVW.#ctor(Color)"},{"children":null,"id":"#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIEUVW(Color, Illuminant, StandardObserver)","nameWithType":"CIEUVW.CIEUVW(Color, Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nCreates new CIE UVW components from the given color, illuminant and\nstandard observer.\n","syntax":{"content":"public CIEUVW(Color color, Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"},{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIEUVW.#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"#ctor(Color,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIEUVW(Color, Tristimulus)","nameWithType":"CIEUVW.CIEUVW(Color, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nCreates new CIE UVW components from the given color and white point.\n","syntax":{"content":"public CIEUVW(Color color, Tristimulus whitePoint)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"},{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIEUVW.#ctor(Color,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"Equals(Zigurous.ColorPro.CIEUVW)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(CIEUVW)","nameWithType":"CIEUVW.Equals(CIEUVW)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(CIEUVW other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.CIEUVW"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUVW.Equals(Zigurous.ColorPro.CIEUVW)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"CIEUVW.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUVW.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"CIEUVW.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUVW.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"CIEUVW.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUVW.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"CIEUVW.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUVW.ToColor"},{"children":null,"id":"ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(Illuminant, StandardObserver)","nameWithType":"CIEUVW.ToColor(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nConverts the components to a color using the given illuminant and\nstandard observer.\n","syntax":{"content":"public Color ToColor(Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUVW.ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToColor(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(Tristimulus)","nameWithType":"CIEUVW.ToColor(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nConverts the components to a color using the given white point.\n","syntax":{"content":"public Color ToColor(Tristimulus whitePoint)","parameters":[{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUVW.ToColor(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToXYZ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToXYZ()","nameWithType":"CIEUVW.ToXYZ()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nConverts the components to CIE XYZ components.\n","syntax":{"content":"public CIEXYZ ToXYZ()","parameters":null,"return":{"description":"The CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUVW.ToXYZ"},{"children":null,"id":"ToXYZ(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToXYZ(Illuminant, StandardObserver)","nameWithType":"CIEUVW.ToXYZ(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nConverts the components to CIE XYZ components.\n","syntax":{"content":"public CIEXYZ ToXYZ(Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUVW.ToXYZ(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToXYZ(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToXYZ(Tristimulus)","nameWithType":"CIEUVW.ToXYZ(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nConverts the components to CIE XYZ components.\n","syntax":{"content":"public CIEXYZ ToXYZ(Tristimulus whitePoint)","parameters":[{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUVW.ToXYZ(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToUCS","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToUCS()","nameWithType":"CIEUVW.ToUCS()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nConverts the components to CIE UCS components.\n","syntax":{"content":"public CIEUCS ToUCS()","parameters":null,"return":{"description":"The CIE UCS components.","type":"Zigurous.ColorPro.CIEUCS"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUVW.ToUCS"},{"children":null,"id":"ToUCS(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToUCS(Illuminant, StandardObserver)","nameWithType":"CIEUVW.ToUCS(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nConverts the components to CIE UCS components.\n","syntax":{"content":"public CIEUCS ToUCS(Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The CIE UCS components.","type":"Zigurous.ColorPro.CIEUCS"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUVW.ToUCS(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToUCS(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToUCS(Tristimulus)","nameWithType":"CIEUVW.ToUCS(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":"\nConverts the components to CIE UCS components.\n","syntax":{"content":"public CIEUCS ToUCS(Tristimulus whitePoint)","parameters":[{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The CIE UCS components.","type":"Zigurous.ColorPro.CIEUCS"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEUVW.ToUCS(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.CIEUVW,Zigurous.ColorPro.CIEUVW)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(CIEUVW, CIEUVW)","nameWithType":"CIEUVW.Equality(CIEUVW, CIEUVW)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(CIEUVW lhs, CIEUVW rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CIEUVW"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CIEUVW"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEUVW.op_Equality(Zigurous.ColorPro.CIEUVW,Zigurous.ColorPro.CIEUVW)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.CIEUVW,Zigurous.ColorPro.CIEUVW)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(CIEUVW, CIEUVW)","nameWithType":"CIEUVW.Inequality(CIEUVW, CIEUVW)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(CIEUVW lhs, CIEUVW rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CIEUVW"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CIEUVW"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEUVW.op_Inequality(Zigurous.ColorPro.CIEUVW,Zigurous.ColorPro.CIEUVW)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIEUVW)~Zigurous.ColorPro.CIEUCS","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIEUVW to CIEUCS)","nameWithType":"CIEUVW.Explicit(CIEUVW to CIEUCS)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIEUCS(CIEUVW components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIEUVW"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIEUCS"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEUVW.op_Explicit(Zigurous.ColorPro.CIEUVW)~Zigurous.ColorPro.CIEUCS"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIEUVW)~Zigurous.ColorPro.CIEXYZ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIEUVW to CIEXYZ)","nameWithType":"CIEUVW.Explicit(CIEUVW to CIEXYZ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIEXYZ(CIEUVW components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIEUVW"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEUVW.op_Explicit(Zigurous.ColorPro.CIEUVW)~Zigurous.ColorPro.CIEXYZ"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIEUVW)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIEUVW to Color)","nameWithType":"CIEUVW.Explicit(CIEUVW to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(CIEUVW components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIEUVW"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEUVW.op_Explicit(Zigurous.ColorPro.CIEUVW)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.CIEUVW","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to CIEUVW)","nameWithType":"CIEUVW.Explicit(Color to CIEUVW)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEUVW","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIEUVW(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIEUVW"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEUVW.op_Explicit(Color)~Zigurous.ColorPro.CIEUVW"}]},{"items":[{"children":["Zigurous.ColorPro.CIExyY.#ctor(Color)","Zigurous.ColorPro.CIExyY.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.CIExyY.#ctor(Zigurous.ColorPro.CIExyY)","Zigurous.ColorPro.CIExyY.Equals(System.Object)","Zigurous.ColorPro.CIExyY.Equals(Zigurous.ColorPro.CIExyY)","Zigurous.ColorPro.CIExyY.GetHashCode","Zigurous.ColorPro.CIExyY.Item(System.Int32)","Zigurous.ColorPro.CIExyY.op_Equality(Zigurous.ColorPro.CIExyY,Zigurous.ColorPro.CIExyY)","Zigurous.ColorPro.CIExyY.op_Explicit(Color)~Zigurous.ColorPro.CIExyY","Zigurous.ColorPro.CIExyY.op_Explicit(Zigurous.ColorPro.CIExyY)~Color","Zigurous.ColorPro.CIExyY.op_Explicit(Zigurous.ColorPro.CIExyY)~Zigurous.ColorPro.CIEXYZ","Zigurous.ColorPro.CIExyY.op_Inequality(Zigurous.ColorPro.CIExyY,Zigurous.ColorPro.CIExyY)","Zigurous.ColorPro.CIExyY.ToCCT","Zigurous.ColorPro.CIExyY.ToColor","Zigurous.ColorPro.CIExyY.ToString","Zigurous.ColorPro.CIExyY.ToXYZ","Zigurous.ColorPro.CIExyY.x","Zigurous.ColorPro.CIExyY.y","Zigurous.ColorPro.CIExyY.Y"],"id":"CIExyY","implements":["Global.IEquatable{Zigurous.ColorPro.CIExyY}"],"inheritance":null,"inheritedMembers":null,"name":"CIExyY","nameWithType":"CIExyY","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe CIE xyY components of a color - chromaticity (x,y) and luminance (Y).\n","syntax":{"content":"[Serializable]\npublic struct CIExyY : IEquatable<CIExyY>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.CIExyY"},{"children":null,"id":"x","implements":null,"inheritance":null,"inheritedMembers":null,"name":"x","nameWithType":"CIExyY.x","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":"\nThe x-axis chromaticity coordinate of the color in the range [0..1].\n","syntax":{"content":"public float x","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIExyY.x"},{"children":null,"id":"y","implements":null,"inheritance":null,"inheritedMembers":null,"name":"y","nameWithType":"CIExyY.y","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":"\nThe y-axis chromaticity coordinate of the color in the range [0..1].\n","syntax":{"content":"public float y","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIExyY.y"},{"children":null,"id":"Y","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Y","nameWithType":"CIExyY.Y","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":"\nThe luminance component of the color in the range [0..100].\n","syntax":{"content":"public float Y","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIExyY.Y"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"CIExyY.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.CIExyY.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIExyY(Single, Single, Single)","nameWithType":"CIExyY.CIExyY(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":"\nCreates new CIE xyY components from the given values.\n","syntax":{"content":"public CIExyY(float x, float y, float Y = 1F)","parameters":[{"description":"The x-axis chromaticity coordinate of the color in the range [0..1].","id":"x","type":"System.Single"},{"description":"The y-axis chromaticity coordinate of the color in the range [0..1].","id":"y","type":"System.Single"},{"description":"The luminance component of the color in the range [0..100].","id":"Y","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIExyY.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.CIExyY)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIExyY(CIExyY)","nameWithType":"CIExyY.CIExyY(CIExyY)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public CIExyY(CIExyY other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.CIExyY"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIExyY.#ctor(Zigurous.ColorPro.CIExyY)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIExyY(Color)","nameWithType":"CIExyY.CIExyY(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":"\nCreates new CIE xyY components from the given color.\n","syntax":{"content":"public CIExyY(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIExyY.#ctor(Color)"},{"children":null,"id":"Equals(Zigurous.ColorPro.CIExyY)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(CIExyY)","nameWithType":"CIExyY.Equals(CIExyY)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(CIExyY other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.CIExyY"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIExyY.Equals(Zigurous.ColorPro.CIExyY)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"CIExyY.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIExyY.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"CIExyY.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIExyY.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"CIExyY.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIExyY.ToString"},{"children":null,"id":"ToCCT","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToCCT()","nameWithType":"CIExyY.ToCCT()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":"\nConverts the components to a CCT temperature in Kelvin.\n","syntax":{"content":"public float ToCCT()","parameters":null,"return":{"description":"The CCT temperature in Kelvin.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIExyY.ToCCT"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"CIExyY.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIExyY.ToColor"},{"children":null,"id":"ToXYZ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToXYZ()","nameWithType":"CIExyY.ToXYZ()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":"\nConverts the components to CIE XYZ components.\n","syntax":{"content":"public CIEXYZ ToXYZ()","parameters":null,"return":{"description":"The CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIExyY.ToXYZ"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.CIExyY,Zigurous.ColorPro.CIExyY)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(CIExyY, CIExyY)","nameWithType":"CIExyY.Equality(CIExyY, CIExyY)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(CIExyY lhs, CIExyY rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CIExyY"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CIExyY"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIExyY.op_Equality(Zigurous.ColorPro.CIExyY,Zigurous.ColorPro.CIExyY)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.CIExyY,Zigurous.ColorPro.CIExyY)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(CIExyY, CIExyY)","nameWithType":"CIExyY.Inequality(CIExyY, CIExyY)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(CIExyY lhs, CIExyY rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CIExyY"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CIExyY"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIExyY.op_Inequality(Zigurous.ColorPro.CIExyY,Zigurous.ColorPro.CIExyY)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIExyY)~Zigurous.ColorPro.CIEXYZ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIExyY to CIEXYZ)","nameWithType":"CIExyY.Explicit(CIExyY to CIEXYZ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIEXYZ(CIExyY components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIExyY"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIExyY.op_Explicit(Zigurous.ColorPro.CIExyY)~Zigurous.ColorPro.CIEXYZ"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIExyY)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIExyY to Color)","nameWithType":"CIExyY.Explicit(CIExyY to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(CIExyY components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIExyY"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIExyY.op_Explicit(Zigurous.ColorPro.CIExyY)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.CIExyY","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to CIExyY)","nameWithType":"CIExyY.Explicit(Color to CIExyY)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIExyY","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIExyY(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIExyY"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIExyY.op_Explicit(Color)~Zigurous.ColorPro.CIExyY"}]},{"items":[{"children":["Zigurous.ColorPro.CIEXYZ.#ctor(Color)","Zigurous.ColorPro.CIEXYZ.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.CIEXYZ.#ctor(Zigurous.ColorPro.CIEXYZ)","Zigurous.ColorPro.CIEXYZ.#ctor(Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIEXYZ.Equals(System.Object)","Zigurous.ColorPro.CIEXYZ.Equals(Zigurous.ColorPro.CIEXYZ)","Zigurous.ColorPro.CIEXYZ.GetHashCode","Zigurous.ColorPro.CIEXYZ.Item(System.Int32)","Zigurous.ColorPro.CIEXYZ.op_Equality(Zigurous.ColorPro.CIEXYZ,Zigurous.ColorPro.CIEXYZ)","Zigurous.ColorPro.CIEXYZ.op_Explicit(Color)~Zigurous.ColorPro.CIEXYZ","Zigurous.ColorPro.CIEXYZ.op_Explicit(Zigurous.ColorPro.CIEXYZ)~Color","Zigurous.ColorPro.CIEXYZ.op_Explicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.CIELAB","Zigurous.ColorPro.CIEXYZ.op_Explicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.CIELUV","Zigurous.ColorPro.CIEXYZ.op_Explicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.CIEUCS","Zigurous.ColorPro.CIEXYZ.op_Explicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.CIExyY","Zigurous.ColorPro.CIEXYZ.op_Explicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.HunterLab","Zigurous.ColorPro.CIEXYZ.op_Implicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.Tristimulus","Zigurous.ColorPro.CIEXYZ.op_Implicit(Zigurous.ColorPro.Tristimulus)~Zigurous.ColorPro.CIEXYZ","Zigurous.ColorPro.CIEXYZ.op_Inequality(Zigurous.ColorPro.CIEXYZ,Zigurous.ColorPro.CIEXYZ)","Zigurous.ColorPro.CIEXYZ.ToColor","Zigurous.ColorPro.CIEXYZ.ToHunterLab","Zigurous.ColorPro.CIEXYZ.ToHunterLab(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIEXYZ.ToHunterLab(Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIEXYZ.ToLab","Zigurous.ColorPro.CIEXYZ.ToLab(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIEXYZ.ToLab(Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIEXYZ.ToLuv","Zigurous.ColorPro.CIEXYZ.ToLuv(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIEXYZ.ToLuv(Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIEXYZ.ToString","Zigurous.ColorPro.CIEXYZ.ToUCS","Zigurous.ColorPro.CIEXYZ.ToUVW","Zigurous.ColorPro.CIEXYZ.ToUVW(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.CIEXYZ.ToUVW(Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.CIEXYZ.ToxyY","Zigurous.ColorPro.CIEXYZ.X","Zigurous.ColorPro.CIEXYZ.Y","Zigurous.ColorPro.CIEXYZ.Z"],"id":"CIEXYZ","implements":["Global.IEquatable{Zigurous.ColorPro.CIEXYZ}"],"inheritance":null,"inheritedMembers":null,"name":"CIEXYZ","nameWithType":"CIEXYZ","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe CIE XYZ components of a color - chromaticity (X,Z) and luminance (Y).\n","syntax":{"content":"[Serializable]\npublic struct CIEXYZ : IEquatable<CIEXYZ>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.CIEXYZ"},{"children":null,"id":"X","implements":null,"inheritance":null,"inheritedMembers":null,"name":"X","nameWithType":"CIEXYZ.X","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nA mix of cone response curves chosen to be orthogonal to luminance\nand non-negative in the range [0..95.047].\n","syntax":{"content":"public float X","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIEXYZ.X"},{"children":null,"id":"Y","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Y","nameWithType":"CIEXYZ.Y","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nThe luminance component of the color in the range [0..100].\n","syntax":{"content":"public float Y","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIEXYZ.Y"},{"children":null,"id":"Z","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Z","nameWithType":"CIEXYZ.Z","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nSomewhat equal to blue, or the &quot;S&quot; cone response in the range [0..108.883].\n","syntax":{"content":"public float Z","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CIEXYZ.Z"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"CIEXYZ.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.CIEXYZ.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIEXYZ(Single, Single, Single)","nameWithType":"CIEXYZ.CIEXYZ(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nCreates new CIE XYZ components from the given values.\n","syntax":{"content":"public CIEXYZ(float X, float Y, float Z)","parameters":[{"description":"A mix of cone response curves chosen to be orthogonal to luminance and non-negative in the range [0..95.047].","id":"X","type":"System.Single"},{"description":"The luminance component of the color in the range [0..100].","id":"Y","type":"System.Single"},{"description":"Somewhat equal to blue, or the &quot;S&quot; cone response in the range [0..108.883].","id":"Z","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIEXYZ.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.CIEXYZ)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIEXYZ(CIEXYZ)","nameWithType":"CIEXYZ.CIEXYZ(CIEXYZ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public CIEXYZ(CIEXYZ other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.CIEXYZ"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIEXYZ.#ctor(Zigurous.ColorPro.CIEXYZ)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIEXYZ(Tristimulus)","nameWithType":"CIEXYZ.CIEXYZ(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nCreates new CIE XYZ components from the given tristimulus values.\n","syntax":{"content":"public CIEXYZ(Tristimulus tristimulus)","parameters":[{"description":"The XYZ tristimulus values.","id":"tristimulus","type":"Zigurous.ColorPro.Tristimulus"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIEXYZ.#ctor(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CIEXYZ(Color)","nameWithType":"CIEXYZ.CIEXYZ(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nCreates new CIE XYZ components from the given color.\n","syntax":{"content":"public CIEXYZ(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CIEXYZ.#ctor(Color)"},{"children":null,"id":"Equals(Zigurous.ColorPro.CIEXYZ)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(CIEXYZ)","nameWithType":"CIEXYZ.Equals(CIEXYZ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(CIEXYZ other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.CIEXYZ"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.Equals(Zigurous.ColorPro.CIEXYZ)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"CIEXYZ.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"CIEXYZ.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"CIEXYZ.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.ToString"},{"children":null,"id":"ToxyY","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToxyY()","nameWithType":"CIEXYZ.ToxyY()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nConverts the components to CIE xyY components.\n","syntax":{"content":"public CIExyY ToxyY()","parameters":null,"return":{"description":"The CIE xyY components.","type":"Zigurous.ColorPro.CIExyY"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.ToxyY"},{"children":null,"id":"ToUCS","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToUCS()","nameWithType":"CIEXYZ.ToUCS()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nConverts the components to CIE UCS components.\n","syntax":{"content":"public CIEUCS ToUCS()","parameters":null,"return":{"description":"The CIE UCS components.","type":"Zigurous.ColorPro.CIEUCS"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.ToUCS"},{"children":null,"id":"ToUVW","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToUVW()","nameWithType":"CIEXYZ.ToUVW()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nConverts the components to CIE UVW components.\n","syntax":{"content":"public CIEUVW ToUVW()","parameters":null,"return":{"description":"The CIE UVW components.","type":"Zigurous.ColorPro.CIEUVW"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.ToUVW"},{"children":null,"id":"ToUVW(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToUVW(Illuminant, StandardObserver)","nameWithType":"CIEXYZ.ToUVW(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nConverts the components to CIE UVW components.\n","syntax":{"content":"public CIEUVW ToUVW(Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":null,"id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":null,"id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The CIE UVW components.","type":"Zigurous.ColorPro.CIEUVW"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.ToUVW(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToUVW(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToUVW(Tristimulus)","nameWithType":"CIEXYZ.ToUVW(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nConverts the components to CIE UVW components.\n","syntax":{"content":"public CIEUVW ToUVW(Tristimulus whitePoint)","parameters":[{"description":null,"id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The CIE UVW components.","type":"Zigurous.ColorPro.CIEUVW"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.ToUVW(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToLab","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLab()","nameWithType":"CIEXYZ.ToLab()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nConverts the components to CIE LAB components.\n","syntax":{"content":"public CIELAB ToLab()","parameters":null,"return":{"description":"The CIE LAB components.","type":"Zigurous.ColorPro.CIELAB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.ToLab"},{"children":null,"id":"ToLab(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLab(Illuminant, StandardObserver)","nameWithType":"CIEXYZ.ToLab(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nConverts the components to CIE LAB components.\n","syntax":{"content":"public CIELAB ToLab(Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":null,"id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":null,"id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The CIE LAB components.","type":"Zigurous.ColorPro.CIELAB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.ToLab(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToLab(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLab(Tristimulus)","nameWithType":"CIEXYZ.ToLab(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nConverts the components to CIE LAB components.\n","syntax":{"content":"public CIELAB ToLab(Tristimulus whitePoint)","parameters":[{"description":null,"id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The CIE LAB components.","type":"Zigurous.ColorPro.CIELAB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.ToLab(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToLuv","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLuv()","nameWithType":"CIEXYZ.ToLuv()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nConverts the components to CIE LUV components.\n","syntax":{"content":"public CIELUV ToLuv()","parameters":null,"return":{"description":"The CIE LUV components.","type":"Zigurous.ColorPro.CIELUV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.ToLuv"},{"children":null,"id":"ToLuv(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLuv(Illuminant, StandardObserver)","nameWithType":"CIEXYZ.ToLuv(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nConverts the components to CIE LUV components.\n","syntax":{"content":"public CIELUV ToLuv(Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":null,"id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":null,"id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The CIE LUV components.","type":"Zigurous.ColorPro.CIELUV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.ToLuv(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToLuv(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLuv(Tristimulus)","nameWithType":"CIEXYZ.ToLuv(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nConverts the components to CIE LUV components.\n","syntax":{"content":"public CIELUV ToLuv(Tristimulus whitePoint)","parameters":[{"description":null,"id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The CIE LUV components.","type":"Zigurous.ColorPro.CIELUV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.ToLuv(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToHunterLab","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHunterLab()","nameWithType":"CIEXYZ.ToHunterLab()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nConverts the components to Hunter Lab components.\n","syntax":{"content":"public HunterLab ToHunterLab()","parameters":null,"return":{"description":"The Hunter Lab components.","type":"Zigurous.ColorPro.HunterLab"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.ToHunterLab"},{"children":null,"id":"ToHunterLab(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHunterLab(Illuminant, StandardObserver)","nameWithType":"CIEXYZ.ToHunterLab(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nConverts the components to Hunter Lab components.\n","syntax":{"content":"public HunterLab ToHunterLab(Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":null,"id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":null,"id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The Hunter Lab components.","type":"Zigurous.ColorPro.HunterLab"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.ToHunterLab(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToHunterLab(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHunterLab(Tristimulus)","nameWithType":"CIEXYZ.ToHunterLab(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nConverts the components to Hunter Lab components.\n","syntax":{"content":"public HunterLab ToHunterLab(Tristimulus whitePoint)","parameters":[{"description":null,"id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The Hunter Lab components.","type":"Zigurous.ColorPro.HunterLab"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.ToHunterLab(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"CIEXYZ.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CIEXYZ.ToColor"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.CIEXYZ,Zigurous.ColorPro.CIEXYZ)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(CIEXYZ, CIEXYZ)","nameWithType":"CIEXYZ.Equality(CIEXYZ, CIEXYZ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(CIEXYZ lhs, CIEXYZ rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CIEXYZ"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CIEXYZ"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEXYZ.op_Equality(Zigurous.ColorPro.CIEXYZ,Zigurous.ColorPro.CIEXYZ)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.CIEXYZ,Zigurous.ColorPro.CIEXYZ)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(CIEXYZ, CIEXYZ)","nameWithType":"CIEXYZ.Inequality(CIEXYZ, CIEXYZ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(CIEXYZ lhs, CIEXYZ rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CIEXYZ"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CIEXYZ"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEXYZ.op_Inequality(Zigurous.ColorPro.CIEXYZ,Zigurous.ColorPro.CIEXYZ)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.CIExyY","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIEXYZ to CIExyY)","nameWithType":"CIEXYZ.Explicit(CIEXYZ to CIExyY)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIExyY(CIEXYZ components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIEXYZ"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIExyY"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEXYZ.op_Explicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.CIExyY"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.CIEUCS","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIEXYZ to CIEUCS)","nameWithType":"CIEXYZ.Explicit(CIEXYZ to CIEUCS)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIEUCS(CIEXYZ components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIEXYZ"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIEUCS"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEXYZ.op_Explicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.CIEUCS"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.CIELAB","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIEXYZ to CIELAB)","nameWithType":"CIEXYZ.Explicit(CIEXYZ to CIELAB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIELAB(CIEXYZ components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIEXYZ"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIELAB"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEXYZ.op_Explicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.CIELAB"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.CIELUV","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIEXYZ to CIELUV)","nameWithType":"CIEXYZ.Explicit(CIEXYZ to CIELUV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIELUV(CIEXYZ components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIEXYZ"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIELUV"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEXYZ.op_Explicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.CIELUV"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.HunterLab","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIEXYZ to HunterLab)","nameWithType":"CIEXYZ.Explicit(CIEXYZ to HunterLab)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator HunterLab(CIEXYZ components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIEXYZ"}],"return":{"description":null,"type":"Zigurous.ColorPro.HunterLab"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEXYZ.op_Explicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.HunterLab"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CIEXYZ)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CIEXYZ to Color)","nameWithType":"CIEXYZ.Explicit(CIEXYZ to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(CIEXYZ components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIEXYZ"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEXYZ.op_Explicit(Zigurous.ColorPro.CIEXYZ)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.CIEXYZ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to CIEXYZ)","nameWithType":"CIEXYZ.Explicit(Color to CIEXYZ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIEXYZ(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEXYZ.op_Explicit(Color)~Zigurous.ColorPro.CIEXYZ"},{"children":null,"id":"op_Implicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.Tristimulus","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Implicit(CIEXYZ to Tristimulus)","nameWithType":"CIEXYZ.Implicit(CIEXYZ to Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":null,"syntax":{"content":"public static implicit operator Tristimulus(CIEXYZ components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.CIEXYZ"}],"return":{"description":null,"type":"Zigurous.ColorPro.Tristimulus"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEXYZ.op_Implicit(Zigurous.ColorPro.CIEXYZ)~Zigurous.ColorPro.Tristimulus"},{"children":null,"id":"op_Implicit(Zigurous.ColorPro.Tristimulus)~Zigurous.ColorPro.CIEXYZ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Implicit(Tristimulus to CIEXYZ)","nameWithType":"CIEXYZ.Implicit(Tristimulus to CIEXYZ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CIEXYZ","remarks":null,"summary":null,"syntax":{"content":"public static implicit operator CIEXYZ(Tristimulus tristimulus)","parameters":[{"description":null,"id":"tristimulus","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CIEXYZ.op_Implicit(Zigurous.ColorPro.Tristimulus)~Zigurous.ColorPro.CIEXYZ"}]},{"items":[{"children":["Zigurous.ColorPro.CMYK.#ctor(Color)","Zigurous.ColorPro.CMYK.#ctor(System.Single,System.Single,System.Single,System.Single)","Zigurous.ColorPro.CMYK.#ctor(Zigurous.ColorPro.CMYK)","Zigurous.ColorPro.CMYK.black","Zigurous.ColorPro.CMYK.cyan","Zigurous.ColorPro.CMYK.Equals(System.Object)","Zigurous.ColorPro.CMYK.Equals(Zigurous.ColorPro.CMYK)","Zigurous.ColorPro.CMYK.GetHashCode","Zigurous.ColorPro.CMYK.Item(System.Int32)","Zigurous.ColorPro.CMYK.magenta","Zigurous.ColorPro.CMYK.op_Equality(Zigurous.ColorPro.CMYK,Zigurous.ColorPro.CMYK)","Zigurous.ColorPro.CMYK.op_Explicit(Color)~Zigurous.ColorPro.CMYK","Zigurous.ColorPro.CMYK.op_Explicit(Zigurous.ColorPro.CMYK)~Color","Zigurous.ColorPro.CMYK.op_Inequality(Zigurous.ColorPro.CMYK,Zigurous.ColorPro.CMYK)","Zigurous.ColorPro.CMYK.ToColor","Zigurous.ColorPro.CMYK.ToString","Zigurous.ColorPro.CMYK.yellow"],"id":"CMYK","implements":["Global.IEquatable{Zigurous.ColorPro.CMYK}"],"inheritance":null,"inheritedMembers":null,"name":"CMYK","nameWithType":"CMYK","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe CMYK (cyan, magenta, yellow, black) components of a color in the\nrange [0..1].\n","syntax":{"content":"[Serializable]\npublic struct CMYK : IEquatable<CMYK>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.CMYK"},{"children":null,"id":"cyan","implements":null,"inheritance":null,"inheritedMembers":null,"name":"cyan","nameWithType":"CMYK.cyan","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":"\nThe cyan component of the color in the range [0..1].\n","syntax":{"content":"public float cyan","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CMYK.cyan"},{"children":null,"id":"magenta","implements":null,"inheritance":null,"inheritedMembers":null,"name":"magenta","nameWithType":"CMYK.magenta","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":"\nThe magenta component of the color in the range [0..1].\n","syntax":{"content":"public float magenta","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CMYK.magenta"},{"children":null,"id":"yellow","implements":null,"inheritance":null,"inheritedMembers":null,"name":"yellow","nameWithType":"CMYK.yellow","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":"\nThe yellow component of the color in the range [0..1].\n","syntax":{"content":"public float yellow","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CMYK.yellow"},{"children":null,"id":"black","implements":null,"inheritance":null,"inheritedMembers":null,"name":"black","nameWithType":"CMYK.black","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":"\nThe black component of the color in the range [0..1].\n","syntax":{"content":"public float black","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.CMYK.black"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"CMYK.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.CMYK.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CMYK(Single, Single, Single, Single)","nameWithType":"CMYK.CMYK(Single, Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":"\nCreates new CMYK components from the given values.\n","syntax":{"content":"public CMYK(float cyan, float magenta, float yellow, float black)","parameters":[{"description":"The cyan component of the color in the range [0..1].","id":"cyan","type":"System.Single"},{"description":"The magenta component of the color in the range [0..1].","id":"magenta","type":"System.Single"},{"description":"The yellow component of the color in the range [0..1].","id":"yellow","type":"System.Single"},{"description":"The black component of the color in the range [0..1].","id":"black","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CMYK.#ctor(System.Single,System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.CMYK)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CMYK(CMYK)","nameWithType":"CMYK.CMYK(CMYK)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public CMYK(CMYK other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.CMYK"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CMYK.#ctor(Zigurous.ColorPro.CMYK)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CMYK(Color)","nameWithType":"CMYK.CMYK(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":"\nCreates new CMYK components from the given color.\n","syntax":{"content":"public CMYK(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.CMYK.#ctor(Color)"},{"children":null,"id":"Equals(Zigurous.ColorPro.CMYK)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(CMYK)","nameWithType":"CMYK.Equals(CMYK)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(CMYK other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.CMYK"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CMYK.Equals(Zigurous.ColorPro.CMYK)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"CMYK.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CMYK.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"CMYK.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CMYK.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"CMYK.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CMYK.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"CMYK.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.CMYK.ToColor"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.CMYK,Zigurous.ColorPro.CMYK)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(CMYK, CMYK)","nameWithType":"CMYK.Equality(CMYK, CMYK)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(CMYK lhs, CMYK rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CMYK"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CMYK"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CMYK.op_Equality(Zigurous.ColorPro.CMYK,Zigurous.ColorPro.CMYK)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.CMYK,Zigurous.ColorPro.CMYK)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(CMYK, CMYK)","nameWithType":"CMYK.Inequality(CMYK, CMYK)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(CMYK lhs, CMYK rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.CMYK"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.CMYK"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CMYK.op_Inequality(Zigurous.ColorPro.CMYK,Zigurous.ColorPro.CMYK)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.CMYK)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(CMYK to Color)","nameWithType":"CMYK.Explicit(CMYK to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(CMYK cmyk)","parameters":[{"description":null,"id":"cmyk","type":"Zigurous.ColorPro.CMYK"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CMYK.op_Explicit(Zigurous.ColorPro.CMYK)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.CMYK","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to CMYK)","nameWithType":"CMYK.Explicit(Color to CMYK)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.CMYK","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CMYK(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.CMYK"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.CMYK.op_Explicit(Color)~Zigurous.ColorPro.CMYK"}]},{"items":[{"children":["Zigurous.ColorPro.ColorBlindness.Achromatomaly(Color)","Zigurous.ColorPro.ColorBlindness.Achromatomaly(Color[])","Zigurous.ColorPro.ColorBlindness.Achromatopsia(Color)","Zigurous.ColorPro.ColorBlindness.Achromatopsia(Color[])","Zigurous.ColorPro.ColorBlindness.achromatopsiaVector","Zigurous.ColorPro.ColorBlindness.Anomalized(Color,Color)","Zigurous.ColorPro.ColorBlindness.Deuteranomaly(Color)","Zigurous.ColorPro.ColorBlindness.Deuteranomaly(Color[])","Zigurous.ColorPro.ColorBlindness.Deuteranopia(Color)","Zigurous.ColorPro.ColorBlindness.Deuteranopia(Color[])","Zigurous.ColorPro.ColorBlindness.deuteranopiaMatrix","Zigurous.ColorPro.ColorBlindness.Protanomaly(Color)","Zigurous.ColorPro.ColorBlindness.Protanomaly(Color[])","Zigurous.ColorPro.ColorBlindness.Protanopia(Color)","Zigurous.ColorPro.ColorBlindness.Protanopia(Color[])","Zigurous.ColorPro.ColorBlindness.protanopiaMatrix","Zigurous.ColorPro.ColorBlindness.Simulate(Color,System.Single[],System.Boolean)","Zigurous.ColorPro.ColorBlindness.Simulate(Color,Vector3,System.Boolean)","Zigurous.ColorPro.ColorBlindness.Simulate(Color,Zigurous.ColorPro.ColorVision)","Zigurous.ColorPro.ColorBlindness.Simulate(Color[],System.Single[],System.Boolean)","Zigurous.ColorPro.ColorBlindness.Simulate(Color[],Vector3,System.Boolean)","Zigurous.ColorPro.ColorBlindness.Simulate(Color[],Zigurous.ColorPro.ColorVision)","Zigurous.ColorPro.ColorBlindness.Tritanomaly(Color)","Zigurous.ColorPro.ColorBlindness.Tritanomaly(Color[])","Zigurous.ColorPro.ColorBlindness.Tritanopia(Color)","Zigurous.ColorPro.ColorBlindness.Tritanopia(Color[])","Zigurous.ColorPro.ColorBlindness.tritanopiaMatrix"],"id":"ColorBlindness","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"ColorBlindness","nameWithType":"ColorBlindness","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nFunctions for simulating types of color blindness.\n","syntax":{"content":"public static class ColorBlindness","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.ColorBlindness"},{"children":null,"id":"protanopiaMatrix","implements":null,"inheritance":null,"inheritedMembers":null,"name":"protanopiaMatrix","nameWithType":"ColorBlindness.protanopiaMatrix","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nThe matrix to simulate protanopia color blindness.\n","syntax":{"content":"public static float[] protanopiaMatrix { get; }","parameters":[],"return":{"description":null,"type":"System.Single[]"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.ColorBlindness.protanopiaMatrix"},{"children":null,"id":"deuteranopiaMatrix","implements":null,"inheritance":null,"inheritedMembers":null,"name":"deuteranopiaMatrix","nameWithType":"ColorBlindness.deuteranopiaMatrix","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nThe matrix to simulate deuteranopia color blindness.\n","syntax":{"content":"public static float[] deuteranopiaMatrix { get; }","parameters":[],"return":{"description":null,"type":"System.Single[]"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.ColorBlindness.deuteranopiaMatrix"},{"children":null,"id":"tritanopiaMatrix","implements":null,"inheritance":null,"inheritedMembers":null,"name":"tritanopiaMatrix","nameWithType":"ColorBlindness.tritanopiaMatrix","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nThe matrix to simulate tritanopia color blindness.\n","syntax":{"content":"public static float[] tritanopiaMatrix { get; }","parameters":[],"return":{"description":null,"type":"System.Single[]"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.ColorBlindness.tritanopiaMatrix"},{"children":null,"id":"achromatopsiaVector","implements":null,"inheritance":null,"inheritedMembers":null,"name":"achromatopsiaVector","nameWithType":"ColorBlindness.achromatopsiaVector","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nThe dot vector to simulate achromatopsia color blindness.\n","syntax":{"content":"public static Vector3 achromatopsiaVector { get; }","parameters":[],"return":{"description":null,"type":"Global.Vector3"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.ColorBlindness.achromatopsiaVector"},{"children":null,"id":"Simulate(Color,Zigurous.ColorPro.ColorVision)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Simulate(Color, ColorVision)","nameWithType":"ColorBlindness.Simulate(Color, ColorVision)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates color blindness on the given color using the provided\ncolor vision type.\n","syntax":{"content":"public static Color Simulate(this Color color, ColorVision colorVision)","parameters":[{"description":"The color to simulate.","id":"color","type":"Global.Color"},{"description":"The type of color vision to simulate.","id":"colorVision","type":"Zigurous.ColorPro.ColorVision"}],"return":{"description":"The simulated color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Simulate(Color,Zigurous.ColorPro.ColorVision)"},{"children":null,"id":"Simulate(Color[],Zigurous.ColorPro.ColorVision)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Simulate(Color[], ColorVision)","nameWithType":"ColorBlindness.Simulate(Color[], ColorVision)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates color blindness on the given colors using the provided\ncolor vision type.\n","syntax":{"content":"public static Color[] Simulate(this Color[] colors, ColorVision colorVision)","parameters":[{"description":"The colors to simulate.","id":"colors","type":"Global.Color[]"},{"description":"The type of color vision to simulate.","id":"colorVision","type":"Zigurous.ColorPro.ColorVision"}],"return":{"description":"The simulated colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Simulate(Color[],Zigurous.ColorPro.ColorVision)"},{"children":null,"id":"Simulate(Color,System.Single[],System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Simulate(Color, Single[], Boolean)","nameWithType":"ColorBlindness.Simulate(Color, Single[], Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates color blindness on the given color using the provided matrix.\n","syntax":{"content":"public static Color Simulate(this Color color, float[] matrix, bool anomaly = false)","parameters":[{"description":"The color to simulate.","id":"color","type":"Global.Color"},{"description":"The color matrix to apply.","id":"matrix","type":"System.Single[]"},{"description":"Applies partial color blindness.","id":"anomaly","type":"System.Boolean"}],"return":{"description":"The simulated color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Simulate(Color,System.Single[],System.Boolean)"},{"children":null,"id":"Simulate(Color[],System.Single[],System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Simulate(Color[], Single[], Boolean)","nameWithType":"ColorBlindness.Simulate(Color[], Single[], Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates color blindness on the given colors using the provided matrix.\n","syntax":{"content":"public static Color[] Simulate(this Color[] colors, float[] matrix, bool anomaly = false)","parameters":[{"description":"The colors to simulate.","id":"colors","type":"Global.Color[]"},{"description":"The color matrix to apply.","id":"matrix","type":"System.Single[]"},{"description":"Applies partial color blindness.","id":"anomaly","type":"System.Boolean"}],"return":{"description":"The simulated colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Simulate(Color[],System.Single[],System.Boolean)"},{"children":null,"id":"Simulate(Color,Vector3,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Simulate(Color, Vector3, Boolean)","nameWithType":"ColorBlindness.Simulate(Color, Vector3, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates color blindness on the given color using the provided\ndot vector.\n","syntax":{"content":"public static Color Simulate(this Color color, Vector3 vector, bool anomaly = false)","parameters":[{"description":"The color to simulate.","id":"color","type":"Global.Color"},{"description":"The color dot vector to apply.","id":"vector","type":"Global.Vector3"},{"description":"Applies partial color blindness.","id":"anomaly","type":"System.Boolean"}],"return":{"description":"The simulated color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Simulate(Color,Vector3,System.Boolean)"},{"children":null,"id":"Simulate(Color[],Vector3,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Simulate(Color[], Vector3, Boolean)","nameWithType":"ColorBlindness.Simulate(Color[], Vector3, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates color blindness on the given colors using the provided\ndot vector.\n","syntax":{"content":"public static Color[] Simulate(this Color[] colors, Vector3 vector, bool anomaly = false)","parameters":[{"description":"The colors to simulate.","id":"colors","type":"Global.Color[]"},{"description":"The color dot vector to apply.","id":"vector","type":"Global.Vector3"},{"description":"Applies partial color blindness.","id":"anomaly","type":"System.Boolean"}],"return":{"description":"The simulated colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Simulate(Color[],Vector3,System.Boolean)"},{"children":null,"id":"Anomalized(Color,Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Anomalized(Color, Color)","nameWithType":"ColorBlindness.Anomalized(Color, Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nApplies color anomaly (partial blindness) to the simulated color.\n","syntax":{"content":"public static Color Anomalized(this Color color, Color simulated)","parameters":[{"description":"The original color.","id":"color","type":"Global.Color"},{"description":"The simulated color.","id":"simulated","type":"Global.Color"}],"return":{"description":"The anomaly color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Anomalized(Color,Color)"},{"children":null,"id":"Protanopia(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Protanopia(Color)","nameWithType":"ColorBlindness.Protanopia(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates protanopia color blindness.\n","syntax":{"content":"public static Color Protanopia(this Color color)","parameters":[{"description":"The color to simulate.","id":"color","type":"Global.Color"}],"return":{"description":"The simulated color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Protanopia(Color)"},{"children":null,"id":"Protanopia(Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Protanopia(Color[])","nameWithType":"ColorBlindness.Protanopia(Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates protanopia color blindness.\n","syntax":{"content":"public static Color[] Protanopia(this Color[] colors)","parameters":[{"description":"The colors to simulate.","id":"colors","type":"Global.Color[]"}],"return":{"description":"The simulated colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Protanopia(Color[])"},{"children":null,"id":"Protanomaly(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Protanomaly(Color)","nameWithType":"ColorBlindness.Protanomaly(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates protanomaly color blindness.\n","syntax":{"content":"public static Color Protanomaly(this Color color)","parameters":[{"description":"The color to simulate.","id":"color","type":"Global.Color"}],"return":{"description":"The simulated color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Protanomaly(Color)"},{"children":null,"id":"Protanomaly(Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Protanomaly(Color[])","nameWithType":"ColorBlindness.Protanomaly(Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates protanomaly color blindness.\n","syntax":{"content":"public static Color[] Protanomaly(this Color[] colors)","parameters":[{"description":"The colors to simulate.","id":"colors","type":"Global.Color[]"}],"return":{"description":"The simulated colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Protanomaly(Color[])"},{"children":null,"id":"Deuteranopia(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Deuteranopia(Color)","nameWithType":"ColorBlindness.Deuteranopia(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates deuteranopia color blindness.\n","syntax":{"content":"public static Color Deuteranopia(this Color color)","parameters":[{"description":"The color to simulate.","id":"color","type":"Global.Color"}],"return":{"description":"The simulated color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Deuteranopia(Color)"},{"children":null,"id":"Deuteranopia(Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Deuteranopia(Color[])","nameWithType":"ColorBlindness.Deuteranopia(Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates deuteranopia color blindness.\n","syntax":{"content":"public static Color[] Deuteranopia(this Color[] colors)","parameters":[{"description":"The colors to simulate.","id":"colors","type":"Global.Color[]"}],"return":{"description":"The simulated colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Deuteranopia(Color[])"},{"children":null,"id":"Deuteranomaly(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Deuteranomaly(Color)","nameWithType":"ColorBlindness.Deuteranomaly(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates deuteranomaly color blindness.\n","syntax":{"content":"public static Color Deuteranomaly(this Color color)","parameters":[{"description":"The color to simulate.","id":"color","type":"Global.Color"}],"return":{"description":"The simulated color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Deuteranomaly(Color)"},{"children":null,"id":"Deuteranomaly(Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Deuteranomaly(Color[])","nameWithType":"ColorBlindness.Deuteranomaly(Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates deuteranomaly color blindness.\n","syntax":{"content":"public static Color[] Deuteranomaly(this Color[] colors)","parameters":[{"description":"The colors to simulate.","id":"colors","type":"Global.Color[]"}],"return":{"description":"The simulated colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Deuteranomaly(Color[])"},{"children":null,"id":"Tritanopia(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Tritanopia(Color)","nameWithType":"ColorBlindness.Tritanopia(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates tritanopia color blindness.\n","syntax":{"content":"public static Color Tritanopia(this Color color)","parameters":[{"description":"The color to simulate.","id":"color","type":"Global.Color"}],"return":{"description":"The simulated color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Tritanopia(Color)"},{"children":null,"id":"Tritanopia(Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Tritanopia(Color[])","nameWithType":"ColorBlindness.Tritanopia(Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates tritanopia color blindness.\n","syntax":{"content":"public static Color[] Tritanopia(this Color[] colors)","parameters":[{"description":"The colors to simulate.","id":"colors","type":"Global.Color[]"}],"return":{"description":"The simulated colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Tritanopia(Color[])"},{"children":null,"id":"Tritanomaly(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Tritanomaly(Color)","nameWithType":"ColorBlindness.Tritanomaly(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates tritanomaly color blindness.\n","syntax":{"content":"public static Color Tritanomaly(this Color color)","parameters":[{"description":"The color to simulate.","id":"color","type":"Global.Color"}],"return":{"description":"The simulated color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Tritanomaly(Color)"},{"children":null,"id":"Tritanomaly(Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Tritanomaly(Color[])","nameWithType":"ColorBlindness.Tritanomaly(Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates tritanomaly color blindness.\n","syntax":{"content":"public static Color[] Tritanomaly(this Color[] colors)","parameters":[{"description":"The colors to simulate.","id":"colors","type":"Global.Color[]"}],"return":{"description":"The simulated colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Tritanomaly(Color[])"},{"children":null,"id":"Achromatopsia(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Achromatopsia(Color)","nameWithType":"ColorBlindness.Achromatopsia(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates achromatopsia color blindness.\n","syntax":{"content":"public static Color Achromatopsia(this Color color)","parameters":[{"description":"The color to simulate.","id":"color","type":"Global.Color"}],"return":{"description":"The simulated color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Achromatopsia(Color)"},{"children":null,"id":"Achromatopsia(Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Achromatopsia(Color[])","nameWithType":"ColorBlindness.Achromatopsia(Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates achromatopsia color blindness.\n","syntax":{"content":"public static Color[] Achromatopsia(this Color[] colors)","parameters":[{"description":"The colors to simulate.","id":"colors","type":"Global.Color[]"}],"return":{"description":"The simulated colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Achromatopsia(Color[])"},{"children":null,"id":"Achromatomaly(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Achromatomaly(Color)","nameWithType":"ColorBlindness.Achromatomaly(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates achromatomaly color blindness.\n","syntax":{"content":"public static Color Achromatomaly(this Color color)","parameters":[{"description":"The color to simulate.","id":"color","type":"Global.Color"}],"return":{"description":"The simulated color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Achromatomaly(Color)"},{"children":null,"id":"Achromatomaly(Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Achromatomaly(Color[])","nameWithType":"ColorBlindness.Achromatomaly(Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorBlindness","remarks":null,"summary":"\nSimulates achromatomaly color blindness.\n","syntax":{"content":"public static Color[] Achromatomaly(this Color[] colors)","parameters":[{"description":"The colors to simulate.","id":"colors","type":"Global.Color[]"}],"return":{"description":"The simulated colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorBlindness.Achromatomaly(Color[])"}]},{"items":[{"children":["Zigurous.ColorPro.ColorPalette.Add(Color)","Zigurous.ColorPro.ColorPalette.colors","Zigurous.ColorPro.ColorPalette.Convert(Material)","Zigurous.ColorPro.ColorPalette.Item(System.Int32)","Zigurous.ColorPro.ColorPalette.Random"],"id":"ColorPalette","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"ColorPalette","nameWithType":"ColorPalette","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nRepresents a palette of colors that can be saved as a Unity asset.\n","syntax":{"content":"public sealed class ColorPalette : ScriptableObject","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.ColorPalette"},{"children":null,"id":"colors","implements":null,"inheritance":null,"inheritedMembers":null,"name":"colors","nameWithType":"ColorPalette.colors","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorPalette","remarks":null,"summary":"\nThe colors that define the palette.\n","syntax":{"content":"public Color[] colors","parameters":null,"return":{"description":null,"type":"Global.Color[]"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ColorPalette.colors"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"ColorPalette.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorPalette","remarks":null,"summary":"\nGets or sets the color at the specified index.\n","syntax":{"content":"public Color this[int index] { get; set; }","parameters":[{"description":"The index of the color to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.ColorPalette.Item(System.Int32)"},{"children":null,"id":"Add(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Add(Color)","nameWithType":"ColorPalette.Add(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorPalette","remarks":null,"summary":"\nAdds a new color to the palette.\n","syntax":{"content":"public void Add(Color color)","parameters":[{"description":"The color to add.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorPalette.Add(Color)"},{"children":null,"id":"Random","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Random()","nameWithType":"ColorPalette.Random()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorPalette","remarks":null,"summary":"\nReturns a random color from the palette.\n","syntax":{"content":"public Color Random()","parameters":null,"return":{"description":"A random color from the palette.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorPalette.Random"},{"children":null,"id":"Convert(Material)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Convert(Material)","nameWithType":"ColorPalette.Convert(Material)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorPalette","remarks":null,"summary":"\nConverts the color palette to a material palette by instantiating\na new material for each color.\n","syntax":{"content":"public MaterialPalette Convert(Material baseMaterial)","parameters":[{"description":"The material to clone when creating new materials.","id":"baseMaterial","type":"Global.Material"}],"return":{"description":"A new material palette.","type":"Zigurous.ColorPro.MaterialPalette"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.ColorPalette.Convert(Material)"}]},{"items":[{"children":["Zigurous.ColorPro.ColorVision.Achromatomaly","Zigurous.ColorPro.ColorVision.Achromatopsia","Zigurous.ColorPro.ColorVision.Deuteranomaly","Zigurous.ColorPro.ColorVision.Deuteranopia","Zigurous.ColorPro.ColorVision.Normal","Zigurous.ColorPro.ColorVision.Protanomaly","Zigurous.ColorPro.ColorVision.Protanopia","Zigurous.ColorPro.ColorVision.Tritanomaly","Zigurous.ColorPro.ColorVision.Tritanopia"],"id":"ColorVision","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ColorVision","nameWithType":"ColorVision","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nA type of color vision.\n","syntax":{"content":"public enum ColorVision","parameters":null,"return":null,"typeParameters":null},"type":"Enum","uid":"Zigurous.ColorPro.ColorVision"},{"children":null,"id":"Normal","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Normal","nameWithType":"ColorVision.Normal","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorVision","remarks":null,"summary":"\nNormal color vision.\n","syntax":{"content":"Normal = 0","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.ColorVision"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ColorVision.Normal"},{"children":null,"id":"Protanopia","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Protanopia","nameWithType":"ColorVision.Protanopia","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorVision","remarks":null,"summary":"\nProtanopia is a blindness to red, a state in which the red cones are\nabsent.\n","syntax":{"content":"Protanopia = 1","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.ColorVision"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ColorVision.Protanopia"},{"children":null,"id":"Protanomaly","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Protanomaly","nameWithType":"ColorVision.Protanomaly","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorVision","remarks":null,"summary":"\nProtanomaly is a reduced sensitivity to red, a result of\nfunctionally limited red cones.\n","syntax":{"content":"Protanomaly = 2","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.ColorVision"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ColorVision.Protanomaly"},{"children":null,"id":"Deuteranopia","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Deuteranopia","nameWithType":"ColorVision.Deuteranopia","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorVision","remarks":null,"summary":"\nDeuteranopia is a blindness to green, a state in which the green\ncones are absent.\n","syntax":{"content":"Deuteranopia = 3","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.ColorVision"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ColorVision.Deuteranopia"},{"children":null,"id":"Deuteranomaly","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Deuteranomaly","nameWithType":"ColorVision.Deuteranomaly","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorVision","remarks":null,"summary":"\nDeuteranomaly is a reduced sensitivity to green, a result of\nfunctionally limited green cones.\n","syntax":{"content":"Deuteranomaly = 4","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.ColorVision"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ColorVision.Deuteranomaly"},{"children":null,"id":"Tritanopia","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Tritanopia","nameWithType":"ColorVision.Tritanopia","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorVision","remarks":null,"summary":"\nTritanopia is a blindness to blue, a state in which the blue cones\nare absent.\n","syntax":{"content":"Tritanopia = 5","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.ColorVision"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ColorVision.Tritanopia"},{"children":null,"id":"Tritanomaly","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Tritanomaly","nameWithType":"ColorVision.Tritanomaly","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorVision","remarks":null,"summary":"\nTritanomaly is a reduced sensitivity to blue, a result of\nfunctionally limited blue cones.\n","syntax":{"content":"Tritanomaly = 6","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.ColorVision"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ColorVision.Tritanomaly"},{"children":null,"id":"Achromatopsia","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Achromatopsia","nameWithType":"ColorVision.Achromatopsia","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorVision","remarks":null,"summary":"\nAchromatopsia is a condition characterized by a total absense of\ncolor vision.\n","syntax":{"content":"Achromatopsia = 7","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.ColorVision"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ColorVision.Achromatopsia"},{"children":null,"id":"Achromatomaly","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Achromatomaly","nameWithType":"ColorVision.Achromatomaly","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorVision","remarks":null,"summary":"\nAchromatomaly is a condition characterized by a partial absense of\ncolor vision.\n","syntax":{"content":"Achromatomaly = 8","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.ColorVision"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ColorVision.Achromatomaly"}]},{"items":[{"children":["Zigurous.ColorPro.ColorWheelDivision.Full","Zigurous.ColorPro.ColorWheelDivision.Primary","Zigurous.ColorPro.ColorWheelDivision.Secondary","Zigurous.ColorPro.ColorWheelDivision.Tertiary"],"id":"ColorWheelDivision","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ColorWheelDivision","nameWithType":"ColorWheelDivision","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nA representation of the division of colors on the color wheel.\n","syntax":{"content":"public enum ColorWheelDivision","parameters":null,"return":null,"typeParameters":null},"type":"Enum","uid":"Zigurous.ColorPro.ColorWheelDivision"},{"children":null,"id":"Primary","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Primary","nameWithType":"ColorWheelDivision.Primary","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorWheelDivision","remarks":null,"summary":"\nThe primary colors of the color wheel.\n","syntax":{"content":"Primary = 0","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.ColorWheelDivision"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ColorWheelDivision.Primary"},{"children":null,"id":"Secondary","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Secondary","nameWithType":"ColorWheelDivision.Secondary","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorWheelDivision","remarks":null,"summary":"\nThe secondary colors of the color wheel.\n","syntax":{"content":"Secondary = 1","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.ColorWheelDivision"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ColorWheelDivision.Secondary"},{"children":null,"id":"Tertiary","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Tertiary","nameWithType":"ColorWheelDivision.Tertiary","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorWheelDivision","remarks":null,"summary":"\nThe tertiary colors of the color wheel.\n","syntax":{"content":"Tertiary = 2","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.ColorWheelDivision"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ColorWheelDivision.Tertiary"},{"children":null,"id":"Full","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Full","nameWithType":"ColorWheelDivision.Full","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.ColorWheelDivision","remarks":null,"summary":"\nAll colors of the color wheel.\n","syntax":{"content":"Full = 3","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.ColorWheelDivision"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.ColorWheelDivision.Full"}]},{"items":[{"children":["Zigurous.ColorPro.Equality.Equals(Color,Color,System.Single,System.Boolean)","Zigurous.ColorPro.Equality.EqualsHex(Color,Color)"],"id":"Equality","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Equality","nameWithType":"Equality","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nFunctions for testing the equality of colors.\n","syntax":{"content":"public static class Equality","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.Equality"},{"children":null,"id":"Equals(Color,Color,System.Single,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Color, Color, Single, Boolean)","nameWithType":"Equality.Equals(Color, Color, Single, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Equality","remarks":null,"summary":"\nDetermines if two colors are equal by comparing their component\nvalues after being rounded by a given amount.\n","syntax":{"content":"public static bool Equals(this Color lhs, Color rhs, float rounding, bool compareAlpha = true)","parameters":[{"description":"The first color to compare.","id":"lhs","type":"Global.Color"},{"description":"The second color to compare.","id":"rhs","type":"Global.Color"},{"description":"The amount to round the component values by.","id":"rounding","type":"System.Single"},{"description":"Whether to compare the alpha values as well.","id":"compareAlpha","type":"System.Boolean"}],"return":{"description":"True if the colors are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Equality.Equals(Color,Color,System.Single,System.Boolean)"},{"children":null,"id":"EqualsHex(Color,Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"EqualsHex(Color, Color)","nameWithType":"Equality.EqualsHex(Color, Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Equality","remarks":null,"summary":"\nDetermines if two colors are equal by comparing their hexadecimal\nrepresentations.\n","syntax":{"content":"public static bool EqualsHex(this Color lhs, Color rhs)","parameters":[{"description":"The first color to compare.","id":"lhs","type":"Global.Color"},{"description":"The second color to compare.","id":"rhs","type":"Global.Color"}],"return":{"description":"True if the colors are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Equality.EqualsHex(Color,Color)"}]},{"items":[{"children":["Zigurous.ColorPro.Gradients.ToColors(Gradient,System.Boolean)","Zigurous.ColorPro.Gradients.ToColors(Gradient,System.Int32,System.Boolean)","Zigurous.ColorPro.Gradients.ToColors(Gradient,System.Single[],System.Boolean)","Zigurous.ColorPro.Gradients.ToGradient(Color,Color)","Zigurous.ColorPro.Gradients.ToGradient(Color,Color,System.Int32)","Zigurous.ColorPro.Gradients.ToGradient(Color,Color,System.Single[])","Zigurous.ColorPro.Gradients.ToGradient(Color,Color[])","Zigurous.ColorPro.Gradients.ToGradient(Color[])","Zigurous.ColorPro.Gradients.ToGradient(Color[],System.Single[])","Zigurous.ColorPro.Gradients.ToGradient(GradientColorKey[],GradientAlphaKey[])","Zigurous.ColorPro.Gradients.ToGradient(GradientColorKey[],System.Single)","Zigurous.ColorPro.Gradients.ToGradientPalette(Color,Color,System.Int32)","Zigurous.ColorPro.Gradients.ToGradientPalette(Color,Color,System.Single[])","Zigurous.ColorPro.Gradients.ToGradientPaletteNonAlloc(Color,Color,Color[])","Zigurous.ColorPro.Gradients.ToGradientPaletteNonAlloc(Color,Color,System.Single[],Color[])"],"id":"Gradients","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Gradients","nameWithType":"Gradients","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nFunctions for creating and working with color gradients.\n","syntax":{"content":"public static class Gradients","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.Gradients"},{"children":null,"id":"ToGradient(GradientColorKey[],GradientAlphaKey[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToGradient(GradientColorKey[], GradientAlphaKey[])","nameWithType":"Gradients.ToGradient(GradientColorKey[], GradientAlphaKey[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Gradients","remarks":null,"summary":"\nCreates a new gradient and sets the given color keys and alpha keys.\n","syntax":{"content":"public static Gradient ToGradient(this GradientColorKey[] colors, GradientAlphaKey[] alpha)","parameters":[{"description":"The color keys to set on the gradient.","id":"colors","type":"Global.GradientColorKey[]"},{"description":"The alpha keys to set on the gradient.","id":"alpha","type":"Global.GradientAlphaKey[]"}],"return":{"description":"The new gradient.","type":"Global.Gradient"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Gradients.ToGradient(GradientColorKey[],GradientAlphaKey[])"},{"children":null,"id":"ToGradient(GradientColorKey[],System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToGradient(GradientColorKey[], Single)","nameWithType":"Gradients.ToGradient(GradientColorKey[], Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Gradients","remarks":null,"summary":"\nCreates a new gradient and sets the given color keys with a constant\nalpha value for the entire gradient.\n","syntax":{"content":"public static Gradient ToGradient(this GradientColorKey[] colors, float alpha = 1F)","parameters":[{"description":"The color keys to set on the gradient.","id":"colors","type":"Global.GradientColorKey[]"},{"description":"The alpha value to set for the entire gradient.","id":"alpha","type":"System.Single"}],"return":{"description":"The new gradient.","type":"Global.Gradient"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Gradients.ToGradient(GradientColorKey[],System.Single)"},{"children":null,"id":"ToGradient(Color,Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToGradient(Color, Color)","nameWithType":"Gradients.ToGradient(Color, Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Gradients","remarks":null,"summary":"\nCreates a new gradient with a given start color and end color.\n","syntax":{"content":"public static Gradient ToGradient(this Color start, Color end)","parameters":[{"description":"The start color of the gradient.","id":"start","type":"Global.Color"},{"description":"The end color of the gradient.","id":"end","type":"Global.Color"}],"return":{"description":"The new gradient.","type":"Global.Gradient"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Gradients.ToGradient(Color,Color)"},{"children":null,"id":"ToGradient(Color,Color,System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToGradient(Color, Color, Int32)","nameWithType":"Gradients.ToGradient(Color, Color, Int32)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Gradients","remarks":null,"summary":"\nCreates a new gradient that interpolates a linear amount of stops\nbetween a start color and end color.\n","syntax":{"content":"public static Gradient ToGradient(this Color start, Color end, int stops)","parameters":[{"description":"The start color of the gradient.","id":"start","type":"Global.Color"},{"description":"The end color of the gradient.","id":"end","type":"Global.Color"},{"description":"The amount of stops to interpolate between the start and end color.","id":"stops","type":"System.Int32"}],"return":{"description":"The new gradient.","type":"Global.Gradient"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Gradients.ToGradient(Color,Color,System.Int32)"},{"children":null,"id":"ToGradient(Color,Color,System.Single[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToGradient(Color, Color, Single[])","nameWithType":"Gradients.ToGradient(Color, Color, Single[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Gradients","remarks":null,"summary":"\nCreates a new gradient that distributes a predefined array of stops\nbetween a start color and end color.\n","syntax":{"content":"public static Gradient ToGradient(this Color start, Color end, float[] stops)","parameters":[{"description":"The start color of the gradient.","id":"start","type":"Global.Color"},{"description":"The end color of the gradient.","id":"end","type":"Global.Color"},{"description":"The array of stops to distribute between the start and end color.","id":"stops","type":"System.Single[]"}],"return":{"description":"The new gradient.","type":"Global.Gradient"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Gradients.ToGradient(Color,Color,System.Single[])"},{"children":null,"id":"ToGradient(Color,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToGradient(Color, Color[])","nameWithType":"Gradients.ToGradient(Color, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Gradients","remarks":null,"summary":"\nCreates a new gradient with the given colors evenly distributed\nthroughout.\n","syntax":{"content":"public static Gradient ToGradient(this Color start, params Color[] stops)","parameters":[{"description":"The start color of the gradient.","id":"start","type":"Global.Color"},{"description":"The remaining colors of the gradient.","id":"stops","type":"Global.Color[]"}],"return":{"description":"The new gradient.","type":"Global.Gradient"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Gradients.ToGradient(Color,Color[])"},{"children":null,"id":"ToGradient(Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToGradient(Color[])","nameWithType":"Gradients.ToGradient(Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Gradients","remarks":null,"summary":"\nCreates a new gradient with the given colors evenly distributed\nthroughout.\n","syntax":{"content":"public static Gradient ToGradient(this Color[] colors)","parameters":[{"description":"The colors of the gradient.","id":"colors","type":"Global.Color[]"}],"return":{"description":"The new gradient.","type":"Global.Gradient"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Gradients.ToGradient(Color[])"},{"children":null,"id":"ToGradient(Color[],System.Single[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToGradient(Color[], Single[])","nameWithType":"Gradients.ToGradient(Color[], Single[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Gradients","remarks":null,"summary":"\nCreates a new gradient with the given colors distributed with a\npredefined array of stops.\n","syntax":{"content":"public static Gradient ToGradient(this Color[] colors, float[] stops)","parameters":[{"description":"The colors of the gradient.","id":"colors","type":"Global.Color[]"},{"description":"The array of stops to distribute for each color of the gradient.","id":"stops","type":"System.Single[]"}],"return":{"description":"The new gradient.","type":"Global.Gradient"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Gradients.ToGradient(Color[],System.Single[])"},{"children":null,"id":"ToGradientPalette(Color,Color,System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToGradientPalette(Color, Color, Int32)","nameWithType":"Gradients.ToGradientPalette(Color, Color, Int32)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Gradients","remarks":null,"summary":"\nCreates a palette of colors by interpolating a linear amount of\nstops between a start color and end color.\n","syntax":{"content":"public static Color[] ToGradientPalette(this Color start, Color end, int stops)","parameters":[{"description":"The start color of the gradient palette.","id":"start","type":"Global.Color"},{"description":"The end color of the gradient palette.","id":"end","type":"Global.Color"},{"description":"The amount of stops to interpolate between the start and end color.","id":"stops","type":"System.Int32"}],"return":{"description":"The colors of the gradient palette.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Gradients.ToGradientPalette(Color,Color,System.Int32)"},{"children":null,"id":"ToGradientPaletteNonAlloc(Color,Color,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToGradientPaletteNonAlloc(Color, Color, Color[])","nameWithType":"Gradients.ToGradientPaletteNonAlloc(Color, Color, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Gradients","remarks":null,"summary":"\nCreates a palette of colors by interpolating a linear amount of\nstops between a start color and end color. The number of colors\ngenerated is determined by the size of the array. The colors are\nstored in an existing array to prevent heap allocations.\n","syntax":{"content":"public static void ToGradientPaletteNonAlloc(this Color start, Color end, Color[] output)","parameters":[{"description":"The start color of the gradient palette.","id":"start","type":"Global.Color"},{"description":"The end color of the gradient palette.","id":"end","type":"Global.Color"},{"description":"The output array to store the colors in.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Gradients.ToGradientPaletteNonAlloc(Color,Color,Color[])"},{"children":null,"id":"ToGradientPalette(Color,Color,System.Single[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToGradientPalette(Color, Color, Single[])","nameWithType":"Gradients.ToGradientPalette(Color, Color, Single[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Gradients","remarks":null,"summary":"\nCreates a palette of colors by evaluating a predefined array of\nstops between a start color and end color. The number of colors\ngenerated is determined by the amount of stops.\n","syntax":{"content":"public static Color[] ToGradientPalette(this Color start, Color end, float[] stops)","parameters":[{"description":"The start color of the gradient palette.","id":"start","type":"Global.Color"},{"description":"The end color of the gradient palette.","id":"end","type":"Global.Color"},{"description":"The array of stops to evaluate between the start and end color.","id":"stops","type":"System.Single[]"}],"return":{"description":"The colors of the gradient palette.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Gradients.ToGradientPalette(Color,Color,System.Single[])"},{"children":null,"id":"ToGradientPaletteNonAlloc(Color,Color,System.Single[],Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToGradientPaletteNonAlloc(Color, Color, Single[], Color[])","nameWithType":"Gradients.ToGradientPaletteNonAlloc(Color, Color, Single[], Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Gradients","remarks":null,"summary":"\nCreates a palette of colors by evaluating a predefined array of\nstops between a start color and end color. The number of colors\ngenerated is determined by the amount of stops. The colors are\nstored in an existing array to prevent heap allocations.\n","syntax":{"content":"public static void ToGradientPaletteNonAlloc(this Color start, Color end, float[] stops, Color[] output)","parameters":[{"description":"The start color of the gradient palette.","id":"start","type":"Global.Color"},{"description":"The end color of the gradient palette.","id":"end","type":"Global.Color"},{"description":"The array of stops to evaluate between the start and end color.","id":"stops","type":"System.Single[]"},{"description":"The output array to store the colors in.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Gradients.ToGradientPaletteNonAlloc(Color,Color,System.Single[],Color[])"},{"children":null,"id":"ToColors(Gradient,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColors(Gradient, Boolean)","nameWithType":"Gradients.ToColors(Gradient, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Gradients","remarks":null,"summary":"\nReturns the colors of a gradient.\n","syntax":{"content":"public static Color[] ToColors(this Gradient gradient, bool evaluateAlpha = true)","parameters":[{"description":"The gradient to get the colors from.","id":"gradient","type":"Global.Gradient"},{"description":"Whether to evaluate the alpha values of the gradient.","id":"evaluateAlpha","type":"System.Boolean"}],"return":{"description":"The colors of the gradient.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Gradients.ToColors(Gradient,System.Boolean)"},{"children":null,"id":"ToColors(Gradient,System.Int32,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColors(Gradient, Int32, Boolean)","nameWithType":"Gradients.ToColors(Gradient, Int32, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Gradients","remarks":null,"summary":"\nReturns the colors of a gradient by interpolating a linear amount\nof stops within the gradient.\n","syntax":{"content":"public static Color[] ToColors(this Gradient gradient, int stops, bool evaluateAlpha = true)","parameters":[{"description":"The gradient to interpolate.","id":"gradient","type":"Global.Gradient"},{"description":"The number of stops to interpolate in the gradient.","id":"stops","type":"System.Int32"},{"description":"Whether to evaluate the alpha values of the gradient.","id":"evaluateAlpha","type":"System.Boolean"}],"return":{"description":"The colors of the gradient.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Gradients.ToColors(Gradient,System.Int32,System.Boolean)"},{"children":null,"id":"ToColors(Gradient,System.Single[],System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColors(Gradient, Single[], Boolean)","nameWithType":"Gradients.ToColors(Gradient, Single[], Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Gradients","remarks":null,"summary":"\nReturns the colors of a gradient by evaluating a predefined array\nof stops.\n","syntax":{"content":"public static Color[] ToColors(this Gradient gradient, float[] stops, bool evaluateAlpha = true)","parameters":[{"description":"The gradient to interpolate.","id":"gradient","type":"Global.Gradient"},{"description":"The array of stops to evaluate each color in the gradient.","id":"stops","type":"System.Single[]"},{"description":"Whether to evaluate the alpha values of the gradient.","id":"evaluateAlpha","type":"System.Boolean"}],"return":{"description":"The colors of the gradient.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Gradients.ToColors(Gradient,System.Single[],System.Boolean)"}]},{"items":[{"children":["Zigurous.ColorPro.Hex.ToARGBColor(System.Int32)","Zigurous.ColorPro.Hex.ToARGBColor(System.String)","Zigurous.ColorPro.Hex.ToColor(System.Int32,System.Single)","Zigurous.ColorPro.Hex.ToColor(System.String,System.Single)","Zigurous.ColorPro.Hex.ToHex(Color)","Zigurous.ColorPro.Hex.ToHexARGB(Color)","Zigurous.ColorPro.Hex.ToHexRGBA(Color)","Zigurous.ColorPro.Hex.ToHexString(Color)","Zigurous.ColorPro.Hex.ToHexStringARGB(Color)","Zigurous.ColorPro.Hex.ToHexStringRGBA(Color)","Zigurous.ColorPro.Hex.ToInt(System.String)","Zigurous.ColorPro.Hex.ToRGBAColor(System.Int32)","Zigurous.ColorPro.Hex.ToRGBAColor(System.String)"],"id":"Hex","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Hex","nameWithType":"Hex","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nFunctions for converting between hexadecimal and RGB color values.\n","syntax":{"content":"public static class Hex","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.Hex"},{"children":null,"id":"ToHex(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHex(Color)","nameWithType":"Hex.ToHex(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Hex","remarks":null,"summary":"\nConverts the color to a hexadecimal integer in the RGB format\n(RRGGBB), e.g., 0xffff00.\n","syntax":{"content":"public static int ToHex(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The hexadecimal integer.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Hex.ToHex(Color)"},{"children":null,"id":"ToHexRGBA(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHexRGBA(Color)","nameWithType":"Hex.ToHexRGBA(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Hex","remarks":null,"summary":"\nConverts the color to a hexadecimal integer in the RGBA format\n(RRGGBBAA), e.g., 0xffff0080.\n","syntax":{"content":"public static int ToHexRGBA(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The hexadecimal integer.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Hex.ToHexRGBA(Color)"},{"children":null,"id":"ToHexARGB(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHexARGB(Color)","nameWithType":"Hex.ToHexARGB(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Hex","remarks":null,"summary":"\nConverts the color to a hexadecimal integer in the ARGB format\n(AARRGGBB), e.g., 0x80ffff00.\n","syntax":{"content":"public static int ToHexARGB(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The hexadecimal integer.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Hex.ToHexARGB(Color)"},{"children":null,"id":"ToHexString(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHexString(Color)","nameWithType":"Hex.ToHexString(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Hex","remarks":null,"summary":"\nConverts the color to a hexadecimal string in the RGB format\n(RRGGBB), e.g., &quot;#ffff00&quot;.\n","syntax":{"content":"public static string ToHexString(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The hexadecimal string.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Hex.ToHexString(Color)"},{"children":null,"id":"ToHexStringRGBA(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHexStringRGBA(Color)","nameWithType":"Hex.ToHexStringRGBA(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Hex","remarks":null,"summary":"\nConverts the color to a hexadecimal string in the RGBA format\n(RRGGBBAA), e.g., &quot;#ffff0080&quot;.\n","syntax":{"content":"public static string ToHexStringRGBA(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The hexadecimal string.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Hex.ToHexStringRGBA(Color)"},{"children":null,"id":"ToHexStringARGB(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHexStringARGB(Color)","nameWithType":"Hex.ToHexStringARGB(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Hex","remarks":null,"summary":"\nConverts the color to a hexadecimal string in the ARGB format\n(AARRGGBB), e.g., &quot;#80ffff00&quot;.\n","syntax":{"content":"public static string ToHexStringARGB(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The hexadecimal string.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Hex.ToHexStringARGB(Color)"},{"children":null,"id":"ToColor(System.Int32,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(Int32, Single)","nameWithType":"Hex.ToColor(Int32, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Hex","remarks":null,"summary":"\nCreates a color from a hexadecimal integer in the RGB format\n(RRGGBB), e.g., 0xffff00.\n","syntax":{"content":"public static Color ToColor(int hex, float alpha = 1F)","parameters":[{"description":"The hexadecimal integer to convert.","id":"hex","type":"System.Int32"},{"description":"The alpha component of the new color.","id":"alpha","type":"System.Single"}],"return":{"description":"The color formed from the hexadecimal integer.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Hex.ToColor(System.Int32,System.Single)"},{"children":null,"id":"ToColor(System.String,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(String, Single)","nameWithType":"Hex.ToColor(String, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Hex","remarks":null,"summary":"\nCreates a color from a hexadecimal string in the RGB format\n(RRGGBB), e.g., &quot;#ffff00&quot;.\n","syntax":{"content":"public static Color ToColor(string hex, float alpha = 1F)","parameters":[{"description":"The hexadecimal string to convert.","id":"hex","type":"System.String"},{"description":"The alpha component of the new color.","id":"alpha","type":"System.Single"}],"return":{"description":"The color formed from the hexadecimal string.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Hex.ToColor(System.String,System.Single)"},{"children":null,"id":"ToRGBAColor(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToRGBAColor(Int32)","nameWithType":"Hex.ToRGBAColor(Int32)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Hex","remarks":null,"summary":"\nCreates a color from a hexadecimal integer in the RGBA format\n(RRGGBBAA), e.g., 0xffff0080.\n","syntax":{"content":"public static Color ToRGBAColor(int hex)","parameters":[{"description":"The hexadecimal integer to convert.","id":"hex","type":"System.Int32"}],"return":{"description":"The color formed from the hexadecimal integer.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Hex.ToRGBAColor(System.Int32)"},{"children":null,"id":"ToRGBAColor(System.String)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToRGBAColor(String)","nameWithType":"Hex.ToRGBAColor(String)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Hex","remarks":null,"summary":"\nCreates a color from a hexadecimal string in the ARGB format\n(RRGGBBAA), e.g., &quot;#ffff0080&quot;.\n","syntax":{"content":"public static Color ToRGBAColor(string hex)","parameters":[{"description":"The hexadecimal string to convert.","id":"hex","type":"System.String"}],"return":{"description":"The color formed from the hexadecimal string.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Hex.ToRGBAColor(System.String)"},{"children":null,"id":"ToARGBColor(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToARGBColor(Int32)","nameWithType":"Hex.ToARGBColor(Int32)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Hex","remarks":null,"summary":"\nCreates a color from a hexadecimal integer in the ARGB format\n(AARRGGBB), e.g., 0x80ffff00.\n","syntax":{"content":"public static Color ToARGBColor(int hex)","parameters":[{"description":"The hexadecimal integer to convert.","id":"hex","type":"System.Int32"}],"return":{"description":"The color formed from the hexadecimal integer.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Hex.ToARGBColor(System.Int32)"},{"children":null,"id":"ToARGBColor(System.String)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToARGBColor(String)","nameWithType":"Hex.ToARGBColor(String)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Hex","remarks":null,"summary":"\nCreates a color from a hexadecimal string in the ARGB format\n(AARRGGBB), e.g., &quot;#80ffff00&quot;.\n","syntax":{"content":"public static Color ToARGBColor(string hex)","parameters":[{"description":"The hexadecimal string to convert.","id":"hex","type":"System.String"}],"return":{"description":"The color formed from the hexadecimal string.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Hex.ToARGBColor(System.String)"},{"children":null,"id":"ToInt(System.String)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToInt(String)","nameWithType":"Hex.ToInt(String)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Hex","remarks":null,"summary":"\nConverts a hex string to a 32-bit integer in base 16.\n","syntax":{"content":"public static int ToInt(string hex)","parameters":[{"description":"The hexadecimal string to convert.","id":"hex","type":"System.String"}],"return":{"description":"The converted hexadecimal integer.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Hex.ToInt(System.String)"}]},{"items":[{"children":["Zigurous.ColorPro.Harmonies.Analogous(Color,System.Int32,System.Single)","Zigurous.ColorPro.Harmonies.AnalogousNonAlloc(Color,Color[],System.Single)","Zigurous.ColorPro.Harmonies.Complementary(Color)","Zigurous.ColorPro.Harmonies.ComplementaryNonAlloc(Color,Color[])","Zigurous.ColorPro.Harmonies.DoubleSplitComplementary(Color)","Zigurous.ColorPro.Harmonies.DoubleSplitComplementaryNonAlloc(Color,Color[])","Zigurous.ColorPro.Harmonies.Monochromatic(Color,System.Int32,System.Single)","Zigurous.ColorPro.Harmonies.MonochromaticNonAlloc(Color,Color[],System.Single)","Zigurous.ColorPro.Harmonies.SplitComplementary(Color)","Zigurous.ColorPro.Harmonies.SplitComplementaryNonAlloc(Color,Color[])","Zigurous.ColorPro.Harmonies.Square(Color)","Zigurous.ColorPro.Harmonies.SquareNonAlloc(Color,Color[])","Zigurous.ColorPro.Harmonies.Triadic(Color)","Zigurous.ColorPro.Harmonies.TriadicNonAlloc(Color,Color[])"],"id":"Harmonies","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Harmonies","nameWithType":"Harmonies","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nFunctions for generating color harmonies.\n","syntax":{"content":"public static class Harmonies","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.Harmonies"},{"children":null,"id":"Monochromatic(Color,System.Int32,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Monochromatic(Color, Int32, Single)","nameWithType":"Harmonies.Monochromatic(Color, Int32, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Harmonies","remarks":null,"summary":"\nCreates a monochromatic harmony of the color, a set of tints and\nshades formed from the base color.\n","syntax":{"content":"public static Color[] Monochromatic(this Color baseColor, int amount = 5, float spread = 0.5F)","parameters":[{"description":"The base color to create the harmony from.","id":"baseColor","type":"Global.Color"},{"description":"The number of colors to create.","id":"amount","type":"System.Int32"},{"description":"The amount of change from the start to end [0..1].","id":"spread","type":"System.Single"}],"return":{"description":"An array of colors forming the harmony.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Harmonies.Monochromatic(Color,System.Int32,System.Single)"},{"children":null,"id":"MonochromaticNonAlloc(Color,Color[],System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"MonochromaticNonAlloc(Color, Color[], Single)","nameWithType":"Harmonies.MonochromaticNonAlloc(Color, Color[], Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Harmonies","remarks":null,"summary":"\nCreates a monochromatic harmony of the color, a set of tints and\nshades formed from the base color. The colors are stored in an\nexisting array to prevent heap allocations. The amount of colors\ngenerated is determined by the size of the array.\n","syntax":{"content":"public static void MonochromaticNonAlloc(this Color baseColor, Color[] output, float spread = 0.5F)","parameters":[{"description":"The base color to create the harmony from.","id":"baseColor","type":"Global.Color"},{"description":"The output array to store the colors in.","id":"output","type":"Global.Color[]"},{"description":"The amount of change from the start to end [0..1].","id":"spread","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Harmonies.MonochromaticNonAlloc(Color,Color[],System.Single)"},{"children":null,"id":"Analogous(Color,System.Int32,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Analogous(Color, Int32, Single)","nameWithType":"Harmonies.Analogous(Color, Int32, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Harmonies","remarks":null,"summary":"\nCreates an analogous harmony of the color, a set of colors located\nnext to each other on the color wheel.\n","syntax":{"content":"public static Color[] Analogous(this Color baseColor, int amount = 3, float hueShift = 30F)","parameters":[{"description":"The base color to create the harmony from.","id":"baseColor","type":"Global.Color"},{"description":"The number of colors to create.","id":"amount","type":"System.Int32"},{"description":"The amount of degrees to shift each hue.","id":"hueShift","type":"System.Single"}],"return":{"description":"An array of colors forming the harmony.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Harmonies.Analogous(Color,System.Int32,System.Single)"},{"children":null,"id":"AnalogousNonAlloc(Color,Color[],System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"AnalogousNonAlloc(Color, Color[], Single)","nameWithType":"Harmonies.AnalogousNonAlloc(Color, Color[], Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Harmonies","remarks":null,"summary":"\nCreates an analogous harmony of the color, a set of colors located\nnext to each other on the color wheel. The colors are stored in an\nexisting array to prevent heap allocations. The amount of colors\ngenerated is determined by the size of the array.\n","syntax":{"content":"public static void AnalogousNonAlloc(this Color baseColor, Color[] output, float hueShift = 30F)","parameters":[{"description":"The base color to create the harmony from.","id":"baseColor","type":"Global.Color"},{"description":"The output array to store the colors in.","id":"output","type":"Global.Color[]"},{"description":"The amount of degrees to shift each hue.","id":"hueShift","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Harmonies.AnalogousNonAlloc(Color,Color[],System.Single)"},{"children":null,"id":"Complementary(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Complementary(Color)","nameWithType":"Harmonies.Complementary(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Harmonies","remarks":null,"summary":"\nCreates a complementary harmony of the color, two colors located\nopposite to each other on the color wheel.\n","syntax":{"content":"public static Color[] Complementary(this Color baseColor)","parameters":[{"description":"The base color to create the harmony from.","id":"baseColor","type":"Global.Color"}],"return":{"description":"An array of colors forming the harmony.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Harmonies.Complementary(Color)"},{"children":null,"id":"ComplementaryNonAlloc(Color,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ComplementaryNonAlloc(Color, Color[])","nameWithType":"Harmonies.ComplementaryNonAlloc(Color, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Harmonies","remarks":null,"summary":"\nCreates a complementary harmony of the color, two colors located\nopposite to each other on the color wheel. The colors are stored in\nan existing array to prevent heap allocations. The array requires a\nsize of at least 2.\n","syntax":{"content":"public static void ComplementaryNonAlloc(this Color baseColor, Color[] output)","parameters":[{"description":"The base color to create the harmony from.","id":"baseColor","type":"Global.Color"},{"description":"The output array to store the colors in.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Harmonies.ComplementaryNonAlloc(Color,Color[])"},{"children":null,"id":"SplitComplementary(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SplitComplementary(Color)","nameWithType":"Harmonies.SplitComplementary(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Harmonies","remarks":null,"summary":"\nCreates a split complementary harmony of the color, the base color\nwith two colors adjacent to the directly opposing color on the color wheel.\n","syntax":{"content":"public static Color[] SplitComplementary(this Color baseColor)","parameters":[{"description":"The base color to create the harmony from.","id":"baseColor","type":"Global.Color"}],"return":{"description":"An array of colors forming the harmony.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Harmonies.SplitComplementary(Color)"},{"children":null,"id":"SplitComplementaryNonAlloc(Color,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SplitComplementaryNonAlloc(Color, Color[])","nameWithType":"Harmonies.SplitComplementaryNonAlloc(Color, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Harmonies","remarks":null,"summary":"\nCreates a split complementary harmony of the color, the base color\nwith two colors adjacent to the directly opposing color on the color\nwheel. The colors are stored in an existing array to prevent heap\nallocations. The array requires a size of at least 3.\n","syntax":{"content":"public static void SplitComplementaryNonAlloc(this Color baseColor, Color[] output)","parameters":[{"description":"The base color to create the harmony from.","id":"baseColor","type":"Global.Color"},{"description":"The output array to store the colors in.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Harmonies.SplitComplementaryNonAlloc(Color,Color[])"},{"children":null,"id":"DoubleSplitComplementary(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"DoubleSplitComplementary(Color)","nameWithType":"Harmonies.DoubleSplitComplementary(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Harmonies","remarks":null,"summary":"\nCreates a double split complementary harmony of the color, two pairs\nof complementary colors on either side of the base color.\n","syntax":{"content":"public static Color[] DoubleSplitComplementary(this Color baseColor)","parameters":[{"description":"The base color to create the harmony from.","id":"baseColor","type":"Global.Color"}],"return":{"description":"An array of colors forming the harmony.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Harmonies.DoubleSplitComplementary(Color)"},{"children":null,"id":"DoubleSplitComplementaryNonAlloc(Color,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"DoubleSplitComplementaryNonAlloc(Color, Color[])","nameWithType":"Harmonies.DoubleSplitComplementaryNonAlloc(Color, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Harmonies","remarks":null,"summary":"\nCreates a double split complementary harmony of the color, two pairs\nof complementary colors on either side of the base color. The colors\nare stored in an existing array to prevent heap allocations. The\narray requires a size of at least 4.\n","syntax":{"content":"public static void DoubleSplitComplementaryNonAlloc(this Color baseColor, Color[] output)","parameters":[{"description":"The base color to create the harmony from.","id":"baseColor","type":"Global.Color"},{"description":"The output array to store the colors in.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Harmonies.DoubleSplitComplementaryNonAlloc(Color,Color[])"},{"children":null,"id":"Triadic(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Triadic(Color)","nameWithType":"Harmonies.Triadic(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Harmonies","remarks":null,"summary":"\nCreates a triadic harmony of the color, three colors evenly spaced\naround the color wheel to form a triangle (120° hue shifts).\n","syntax":{"content":"public static Color[] Triadic(this Color baseColor)","parameters":[{"description":"The base color to create the harmony from.","id":"baseColor","type":"Global.Color"}],"return":{"description":"An array of colors forming the harmony.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Harmonies.Triadic(Color)"},{"children":null,"id":"TriadicNonAlloc(Color,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"TriadicNonAlloc(Color, Color[])","nameWithType":"Harmonies.TriadicNonAlloc(Color, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Harmonies","remarks":null,"summary":"\nCreates a triadic harmony of the color, three colors evenly spaced\naround the color wheel to form a triangle (120° hue shifts). The\ncolors are stored in an existing array to prevent heap allocations.\nThe array requires a size of at least 3.\n","syntax":{"content":"public static void TriadicNonAlloc(this Color baseColor, Color[] output)","parameters":[{"description":"The base color to create the harmony from.","id":"baseColor","type":"Global.Color"},{"description":"The output array to store the colors in.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Harmonies.TriadicNonAlloc(Color,Color[])"},{"children":null,"id":"Square(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Square(Color)","nameWithType":"Harmonies.Square(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Harmonies","remarks":null,"summary":"\nCreates a tetradic (square) harmony of the color, four colors evenly\nspaced around the color wheel to form a square (90° hue shifts).\n","syntax":{"content":"public static Color[] Square(this Color baseColor)","parameters":[{"description":"The base color to create the harmony from.","id":"baseColor","type":"Global.Color"}],"return":{"description":"An array of colors forming the harmony.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Harmonies.Square(Color)"},{"children":null,"id":"SquareNonAlloc(Color,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SquareNonAlloc(Color, Color[])","nameWithType":"Harmonies.SquareNonAlloc(Color, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Harmonies","remarks":null,"summary":"\nCreates a tetradic (square) harmony of the color, four colors evenly\nspaced around the color wheel to form a square (90° hue shifts). The\ncolors are stored in an existing array to prevent heap allocations.\nThe array requires a size of at least 4.\n","syntax":{"content":"public static void SquareNonAlloc(this Color baseColor, Color[] output)","parameters":[{"description":"The base color to create the harmony from.","id":"baseColor","type":"Global.Color"},{"description":"The output array to store the colors in.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Harmonies.SquareNonAlloc(Color,Color[])"}]},{"items":[{"children":["Zigurous.ColorPro.HSB.#ctor(Color)","Zigurous.ColorPro.HSB.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.HSB.#ctor(Zigurous.ColorPro.HSB)","Zigurous.ColorPro.HSB.brightness","Zigurous.ColorPro.HSB.Equals(System.Object)","Zigurous.ColorPro.HSB.Equals(Zigurous.ColorPro.HSB)","Zigurous.ColorPro.HSB.GetHashCode","Zigurous.ColorPro.HSB.hue","Zigurous.ColorPro.HSB.Item(System.Int32)","Zigurous.ColorPro.HSB.op_Equality(Zigurous.ColorPro.HSB,Zigurous.ColorPro.HSB)","Zigurous.ColorPro.HSB.op_Explicit(Color)~Zigurous.ColorPro.HSB","Zigurous.ColorPro.HSB.op_Explicit(Zigurous.ColorPro.HSB)~Color","Zigurous.ColorPro.HSB.op_Implicit(Zigurous.ColorPro.HSB)~Zigurous.ColorPro.HSV","Zigurous.ColorPro.HSB.op_Inequality(Zigurous.ColorPro.HSB,Zigurous.ColorPro.HSB)","Zigurous.ColorPro.HSB.saturation","Zigurous.ColorPro.HSB.ToColor","Zigurous.ColorPro.HSB.ToHSV","Zigurous.ColorPro.HSB.ToString"],"id":"HSB","implements":["Global.IEquatable{Zigurous.ColorPro.HSB}"],"inheritance":null,"inheritedMembers":null,"name":"HSB","nameWithType":"HSB","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe HSB (hue, saturation, brightness) components of a color in the range [0..1].\n","syntax":{"content":"[Serializable]\npublic struct HSB : IEquatable<HSB>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.HSB"},{"children":null,"id":"hue","implements":null,"inheritance":null,"inheritedMembers":null,"name":"hue","nameWithType":"HSB.hue","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":"\nThe hue component of the color in the range [0..1].\n","syntax":{"content":"public float hue","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.HSB.hue"},{"children":null,"id":"saturation","implements":null,"inheritance":null,"inheritedMembers":null,"name":"saturation","nameWithType":"HSB.saturation","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":"\nThe saturation component of the color in the range [0..1].\n","syntax":{"content":"public float saturation","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.HSB.saturation"},{"children":null,"id":"brightness","implements":null,"inheritance":null,"inheritedMembers":null,"name":"brightness","nameWithType":"HSB.brightness","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":"\nThe brightness component of the color in the range [0..1].\n","syntax":{"content":"public float brightness","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.HSB.brightness"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"HSB.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.HSB.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSB(Single, Single, Single)","nameWithType":"HSB.HSB(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":"\nCreates new HSB components from the given values.\n","syntax":{"content":"public HSB(float hue, float saturation, float brightness)","parameters":[{"description":"The hue component of the color in the range [0..1].","id":"hue","type":"System.Single"},{"description":"The saturation component of the color in the range [0..1].","id":"saturation","type":"System.Single"},{"description":"The brightness component of the color in the range [0..1].","id":"brightness","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HSB.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.HSB)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSB(HSB)","nameWithType":"HSB.HSB(HSB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public HSB(HSB other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.HSB"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HSB.#ctor(Zigurous.ColorPro.HSB)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSB(Color)","nameWithType":"HSB.HSB(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":"\nCreates new HSB components from the given color.\n","syntax":{"content":"public HSB(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HSB.#ctor(Color)"},{"children":null,"id":"Equals(Zigurous.ColorPro.HSB)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(HSB)","nameWithType":"HSB.Equals(HSB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(HSB other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.HSB"}],"return":{"description":"True if the components are equal, otherwise false.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSB.Equals(Zigurous.ColorPro.HSB)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"HSB.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, otherwise false.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSB.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"HSB.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSB.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"HSB.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSB.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"HSB.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSB.ToColor"},{"children":null,"id":"ToHSV","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHSV()","nameWithType":"HSB.ToHSV()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":"\nConverts the components to HSV (hue, saturation, value) components.\n","syntax":{"content":"public HSV ToHSV()","parameters":null,"return":{"description":"The HSV components.","type":"Zigurous.ColorPro.HSV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSB.ToHSV"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.HSB,Zigurous.ColorPro.HSB)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(HSB, HSB)","nameWithType":"HSB.Equality(HSB, HSB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(HSB lhs, HSB rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.HSB"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.HSB"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSB.op_Equality(Zigurous.ColorPro.HSB,Zigurous.ColorPro.HSB)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.HSB,Zigurous.ColorPro.HSB)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(HSB, HSB)","nameWithType":"HSB.Inequality(HSB, HSB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(HSB lhs, HSB rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.HSB"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.HSB"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSB.op_Inequality(Zigurous.ColorPro.HSB,Zigurous.ColorPro.HSB)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.HSB)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(HSB to Color)","nameWithType":"HSB.Explicit(HSB to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(HSB hsb)","parameters":[{"description":null,"id":"hsb","type":"Zigurous.ColorPro.HSB"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSB.op_Explicit(Zigurous.ColorPro.HSB)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.HSB","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to HSB)","nameWithType":"HSB.Explicit(Color to HSB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator HSB(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.HSB"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSB.op_Explicit(Color)~Zigurous.ColorPro.HSB"},{"children":null,"id":"op_Implicit(Zigurous.ColorPro.HSB)~Zigurous.ColorPro.HSV","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Implicit(HSB to HSV)","nameWithType":"HSB.Implicit(HSB to HSV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSB","remarks":null,"summary":null,"syntax":{"content":"public static implicit operator HSV(HSB hsb)","parameters":[{"description":null,"id":"hsb","type":"Zigurous.ColorPro.HSB"}],"return":{"description":null,"type":"Zigurous.ColorPro.HSV"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSB.op_Implicit(Zigurous.ColorPro.HSB)~Zigurous.ColorPro.HSV"}]},{"items":[{"children":["Zigurous.ColorPro.HSI.#ctor(Color)","Zigurous.ColorPro.HSI.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.HSI.#ctor(Zigurous.ColorPro.HSI)","Zigurous.ColorPro.HSI.Equals(System.Object)","Zigurous.ColorPro.HSI.Equals(Zigurous.ColorPro.HSI)","Zigurous.ColorPro.HSI.GetHashCode","Zigurous.ColorPro.HSI.hue","Zigurous.ColorPro.HSI.intensity","Zigurous.ColorPro.HSI.Item(System.Int32)","Zigurous.ColorPro.HSI.op_Equality(Zigurous.ColorPro.HSI,Zigurous.ColorPro.HSI)","Zigurous.ColorPro.HSI.op_Explicit(Color)~Zigurous.ColorPro.HSI","Zigurous.ColorPro.HSI.op_Explicit(Zigurous.ColorPro.HSI)~Color","Zigurous.ColorPro.HSI.op_Inequality(Zigurous.ColorPro.HSI,Zigurous.ColorPro.HSI)","Zigurous.ColorPro.HSI.saturation","Zigurous.ColorPro.HSI.ToColor","Zigurous.ColorPro.HSI.ToString"],"id":"HSI","implements":["Global.IEquatable{Zigurous.ColorPro.HSI}"],"inheritance":null,"inheritedMembers":null,"name":"HSI","nameWithType":"HSI","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe HSI (hue, saturation, intensity) components of a color in the range [0..1].\n","syntax":{"content":"[Serializable]\npublic struct HSI : IEquatable<HSI>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.HSI"},{"children":null,"id":"hue","implements":null,"inheritance":null,"inheritedMembers":null,"name":"hue","nameWithType":"HSI.hue","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSI","remarks":null,"summary":"\nThe hue component of the color in the range [0..1].\n","syntax":{"content":"public float hue","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.HSI.hue"},{"children":null,"id":"saturation","implements":null,"inheritance":null,"inheritedMembers":null,"name":"saturation","nameWithType":"HSI.saturation","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSI","remarks":null,"summary":"\nThe saturation component of the color in the range [0..1].\n","syntax":{"content":"public float saturation","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.HSI.saturation"},{"children":null,"id":"intensity","implements":null,"inheritance":null,"inheritedMembers":null,"name":"intensity","nameWithType":"HSI.intensity","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSI","remarks":null,"summary":"\nThe intensity component of the color in the range [0..1].\n","syntax":{"content":"public float intensity","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.HSI.intensity"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"HSI.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSI","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.HSI.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSI(Single, Single, Single)","nameWithType":"HSI.HSI(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSI","remarks":null,"summary":"\nCreates new HSI components from the given values.\n","syntax":{"content":"public HSI(float hue, float saturation, float intensity)","parameters":[{"description":"The hue component of the color in the range [0..1].","id":"hue","type":"System.Single"},{"description":"The saturation component of the color in the range [0..1].","id":"saturation","type":"System.Single"},{"description":"The intensity component of the color in the range [0..1].","id":"intensity","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HSI.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.HSI)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSI(HSI)","nameWithType":"HSI.HSI(HSI)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSI","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public HSI(HSI other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.HSI"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HSI.#ctor(Zigurous.ColorPro.HSI)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSI(Color)","nameWithType":"HSI.HSI(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSI","remarks":null,"summary":"\nCreates new HSI components from the given color.\n","syntax":{"content":"public HSI(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HSI.#ctor(Color)"},{"children":null,"id":"Equals(Zigurous.ColorPro.HSI)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(HSI)","nameWithType":"HSI.Equals(HSI)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSI","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(HSI other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.HSI"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSI.Equals(Zigurous.ColorPro.HSI)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"HSI.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSI","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSI.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"HSI.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSI","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSI.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"HSI.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSI","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSI.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"HSI.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSI","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSI.ToColor"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.HSI,Zigurous.ColorPro.HSI)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(HSI, HSI)","nameWithType":"HSI.Equality(HSI, HSI)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSI","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(HSI lhs, HSI rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.HSI"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.HSI"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSI.op_Equality(Zigurous.ColorPro.HSI,Zigurous.ColorPro.HSI)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.HSI,Zigurous.ColorPro.HSI)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(HSI, HSI)","nameWithType":"HSI.Inequality(HSI, HSI)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSI","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(HSI lhs, HSI rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.HSI"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.HSI"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSI.op_Inequality(Zigurous.ColorPro.HSI,Zigurous.ColorPro.HSI)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.HSI)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(HSI to Color)","nameWithType":"HSI.Explicit(HSI to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSI","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(HSI hsi)","parameters":[{"description":null,"id":"hsi","type":"Zigurous.ColorPro.HSI"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSI.op_Explicit(Zigurous.ColorPro.HSI)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.HSI","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to HSI)","nameWithType":"HSI.Explicit(Color to HSI)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSI","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator HSI(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.HSI"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSI.op_Explicit(Color)~Zigurous.ColorPro.HSI"}]},{"items":[{"children":["Zigurous.ColorPro.HSL.#ctor(Color)","Zigurous.ColorPro.HSL.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.HSL.#ctor(Zigurous.ColorPro.HSL)","Zigurous.ColorPro.HSL.Equals(System.Object)","Zigurous.ColorPro.HSL.Equals(Zigurous.ColorPro.HSL)","Zigurous.ColorPro.HSL.GetHashCode","Zigurous.ColorPro.HSL.hue","Zigurous.ColorPro.HSL.Item(System.Int32)","Zigurous.ColorPro.HSL.lightness","Zigurous.ColorPro.HSL.op_Equality(Zigurous.ColorPro.HSL,Zigurous.ColorPro.HSL)","Zigurous.ColorPro.HSL.op_Explicit(Color)~Zigurous.ColorPro.HSL","Zigurous.ColorPro.HSL.op_Explicit(Zigurous.ColorPro.HSL)~Color","Zigurous.ColorPro.HSL.op_Explicit(Zigurous.ColorPro.HSL)~Zigurous.ColorPro.HSB","Zigurous.ColorPro.HSL.op_Explicit(Zigurous.ColorPro.HSL)~Zigurous.ColorPro.HSV","Zigurous.ColorPro.HSL.op_Inequality(Zigurous.ColorPro.HSL,Zigurous.ColorPro.HSL)","Zigurous.ColorPro.HSL.saturation","Zigurous.ColorPro.HSL.ToColor","Zigurous.ColorPro.HSL.ToHSB","Zigurous.ColorPro.HSL.ToHSV","Zigurous.ColorPro.HSL.ToString"],"id":"HSL","implements":["Global.IEquatable{Zigurous.ColorPro.HSL}"],"inheritance":null,"inheritedMembers":null,"name":"HSL","nameWithType":"HSL","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe HSL (hue, saturation, lightness) components of a color in the range [0..1].\n","syntax":{"content":"[Serializable]\npublic struct HSL : IEquatable<HSL>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.HSL"},{"children":null,"id":"hue","implements":null,"inheritance":null,"inheritedMembers":null,"name":"hue","nameWithType":"HSL.hue","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":"\nThe hue component of the color in the range [0..1].\n","syntax":{"content":"public float hue","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.HSL.hue"},{"children":null,"id":"saturation","implements":null,"inheritance":null,"inheritedMembers":null,"name":"saturation","nameWithType":"HSL.saturation","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":"\nThe saturation component of the color in the range [0..1].\n","syntax":{"content":"public float saturation","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.HSL.saturation"},{"children":null,"id":"lightness","implements":null,"inheritance":null,"inheritedMembers":null,"name":"lightness","nameWithType":"HSL.lightness","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":"\nThe lightness component of the color in the range [0..1].\n","syntax":{"content":"public float lightness","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.HSL.lightness"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"HSL.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.HSL.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSL(Single, Single, Single)","nameWithType":"HSL.HSL(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":"\nCreates new HSL components from the given values.\n","syntax":{"content":"public HSL(float hue, float saturation, float lightness)","parameters":[{"description":"The hue component of the color in the range [0..1].","id":"hue","type":"System.Single"},{"description":"The saturation component of the color in the range [0..1].","id":"saturation","type":"System.Single"},{"description":"The lightness component of the color in the range [0..1].","id":"lightness","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HSL.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.HSL)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSL(HSL)","nameWithType":"HSL.HSL(HSL)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public HSL(HSL other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.HSL"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HSL.#ctor(Zigurous.ColorPro.HSL)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSL(Color)","nameWithType":"HSL.HSL(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":"\nCreates new HSL components from the given color.\n","syntax":{"content":"public HSL(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HSL.#ctor(Color)"},{"children":null,"id":"Equals(Zigurous.ColorPro.HSL)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(HSL)","nameWithType":"HSL.Equals(HSL)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(HSL other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.HSL"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSL.Equals(Zigurous.ColorPro.HSL)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"HSL.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSL.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"HSL.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSL.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"HSL.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSL.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"HSL.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSL.ToColor"},{"children":null,"id":"ToHSB","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHSB()","nameWithType":"HSL.ToHSB()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":"\nConverts the components to HSB (hue, saturation, brightness) components.\n","syntax":{"content":"public HSB ToHSB()","parameters":null,"return":{"description":"The HSB components.","type":"Zigurous.ColorPro.HSB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSL.ToHSB"},{"children":null,"id":"ToHSV","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHSV()","nameWithType":"HSL.ToHSV()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":"\nConverts the components to HSV (hue, saturation, value) components.\n","syntax":{"content":"public HSV ToHSV()","parameters":null,"return":{"description":"The HSV components.","type":"Zigurous.ColorPro.HSV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSL.ToHSV"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.HSL,Zigurous.ColorPro.HSL)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(HSL, HSL)","nameWithType":"HSL.Equality(HSL, HSL)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(HSL lhs, HSL rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.HSL"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.HSL"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSL.op_Equality(Zigurous.ColorPro.HSL,Zigurous.ColorPro.HSL)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.HSL,Zigurous.ColorPro.HSL)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(HSL, HSL)","nameWithType":"HSL.Inequality(HSL, HSL)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(HSL lhs, HSL rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.HSL"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.HSL"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSL.op_Inequality(Zigurous.ColorPro.HSL,Zigurous.ColorPro.HSL)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.HSL)~Zigurous.ColorPro.HSV","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(HSL to HSV)","nameWithType":"HSL.Explicit(HSL to HSV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator HSV(HSL hsl)","parameters":[{"description":null,"id":"hsl","type":"Zigurous.ColorPro.HSL"}],"return":{"description":null,"type":"Zigurous.ColorPro.HSV"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSL.op_Explicit(Zigurous.ColorPro.HSL)~Zigurous.ColorPro.HSV"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.HSL)~Zigurous.ColorPro.HSB","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(HSL to HSB)","nameWithType":"HSL.Explicit(HSL to HSB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator HSB(HSL hsl)","parameters":[{"description":null,"id":"hsl","type":"Zigurous.ColorPro.HSL"}],"return":{"description":null,"type":"Zigurous.ColorPro.HSB"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSL.op_Explicit(Zigurous.ColorPro.HSL)~Zigurous.ColorPro.HSB"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.HSL)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(HSL to Color)","nameWithType":"HSL.Explicit(HSL to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(HSL hsl)","parameters":[{"description":null,"id":"hsl","type":"Zigurous.ColorPro.HSL"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSL.op_Explicit(Zigurous.ColorPro.HSL)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.HSL","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to HSL)","nameWithType":"HSL.Explicit(Color to HSL)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSL","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator HSL(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.HSL"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSL.op_Explicit(Color)~Zigurous.ColorPro.HSL"}]},{"items":[{"children":["Zigurous.ColorPro.HSV.#ctor(Color)","Zigurous.ColorPro.HSV.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.HSV.#ctor(Zigurous.ColorPro.HSV)","Zigurous.ColorPro.HSV.Equals(System.Object)","Zigurous.ColorPro.HSV.Equals(Zigurous.ColorPro.HSV)","Zigurous.ColorPro.HSV.GetHashCode","Zigurous.ColorPro.HSV.hue","Zigurous.ColorPro.HSV.Item(System.Int32)","Zigurous.ColorPro.HSV.op_Equality(Zigurous.ColorPro.HSV,Zigurous.ColorPro.HSV)","Zigurous.ColorPro.HSV.op_Explicit(Color)~Zigurous.ColorPro.HSV","Zigurous.ColorPro.HSV.op_Explicit(Zigurous.ColorPro.HSV)~Color","Zigurous.ColorPro.HSV.op_Implicit(Zigurous.ColorPro.HSV)~Zigurous.ColorPro.HSB","Zigurous.ColorPro.HSV.op_Inequality(Zigurous.ColorPro.HSV,Zigurous.ColorPro.HSV)","Zigurous.ColorPro.HSV.saturation","Zigurous.ColorPro.HSV.ToColor","Zigurous.ColorPro.HSV.ToHSB","Zigurous.ColorPro.HSV.ToString","Zigurous.ColorPro.HSV.value"],"id":"HSV","implements":["Global.IEquatable{Zigurous.ColorPro.HSV}"],"inheritance":null,"inheritedMembers":null,"name":"HSV","nameWithType":"HSV","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe HSV (hue, saturation, value) components of a color in the range [0..1].\n","syntax":{"content":"[Serializable]\npublic struct HSV : IEquatable<HSV>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.HSV"},{"children":null,"id":"hue","implements":null,"inheritance":null,"inheritedMembers":null,"name":"hue","nameWithType":"HSV.hue","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":"\nThe hue component of the color in the range [0..1].\n","syntax":{"content":"public float hue","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.HSV.hue"},{"children":null,"id":"saturation","implements":null,"inheritance":null,"inheritedMembers":null,"name":"saturation","nameWithType":"HSV.saturation","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":"\nThe saturation component of the color in the range [0..1].\n","syntax":{"content":"public float saturation","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.HSV.saturation"},{"children":null,"id":"value","implements":null,"inheritance":null,"inheritedMembers":null,"name":"value","nameWithType":"HSV.value","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":"\nThe value component of the color in the range [0..1].\n","syntax":{"content":"public float value","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.HSV.value"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"HSV.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.HSV.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSV(Single, Single, Single)","nameWithType":"HSV.HSV(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":"\nCreates new HSV components from the given values.\n","syntax":{"content":"public HSV(float hue, float saturation, float value)","parameters":[{"description":"The hue component of the color in the range [0..1].","id":"hue","type":"System.Single"},{"description":"The saturation component of the color in the range [0..1].","id":"saturation","type":"System.Single"},{"description":"The value component of the color in the range [0..1].","id":"value","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HSV.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.HSV)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSV(HSV)","nameWithType":"HSV.HSV(HSV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public HSV(HSV other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.HSV"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HSV.#ctor(Zigurous.ColorPro.HSV)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSV(Color)","nameWithType":"HSV.HSV(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":"\nCreates new HSV components from the given color.\n","syntax":{"content":"public HSV(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HSV.#ctor(Color)"},{"children":null,"id":"Equals(Zigurous.ColorPro.HSV)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(HSV)","nameWithType":"HSV.Equals(HSV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(HSV other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.HSV"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSV.Equals(Zigurous.ColorPro.HSV)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"HSV.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSV.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"HSV.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSV.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"HSV.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSV.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"HSV.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSV.ToColor"},{"children":null,"id":"ToHSB","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHSB()","nameWithType":"HSV.ToHSB()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":"\nConverts the components to HSB (hue, saturation, brightness) components.\n","syntax":{"content":"public HSB ToHSB()","parameters":null,"return":{"description":"The HSB components.","type":"Zigurous.ColorPro.HSB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HSV.ToHSB"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.HSV,Zigurous.ColorPro.HSV)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(HSV, HSV)","nameWithType":"HSV.Equality(HSV, HSV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(HSV lhs, HSV rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.HSV"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.HSV"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSV.op_Equality(Zigurous.ColorPro.HSV,Zigurous.ColorPro.HSV)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.HSV,Zigurous.ColorPro.HSV)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(HSV, HSV)","nameWithType":"HSV.Inequality(HSV, HSV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(HSV lhs, HSV rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.HSV"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.HSV"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSV.op_Inequality(Zigurous.ColorPro.HSV,Zigurous.ColorPro.HSV)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.HSV)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(HSV to Color)","nameWithType":"HSV.Explicit(HSV to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(HSV hsv)","parameters":[{"description":null,"id":"hsv","type":"Zigurous.ColorPro.HSV"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSV.op_Explicit(Zigurous.ColorPro.HSV)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.HSV","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to HSV)","nameWithType":"HSV.Explicit(Color to HSV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator HSV(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.HSV"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSV.op_Explicit(Color)~Zigurous.ColorPro.HSV"},{"children":null,"id":"op_Implicit(Zigurous.ColorPro.HSV)~Zigurous.ColorPro.HSB","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Implicit(HSV to HSB)","nameWithType":"HSV.Implicit(HSV to HSB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HSV","remarks":null,"summary":null,"syntax":{"content":"public static implicit operator HSB(HSV hsv)","parameters":[{"description":null,"id":"hsv","type":"Zigurous.ColorPro.HSV"}],"return":{"description":null,"type":"Zigurous.ColorPro.HSB"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HSV.op_Implicit(Zigurous.ColorPro.HSV)~Zigurous.ColorPro.HSB"}]},{"items":[{"children":["Zigurous.ColorPro.HunterLab.#ctor(Color)","Zigurous.ColorPro.HunterLab.#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.HunterLab.#ctor(Color,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.HunterLab.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.HunterLab.#ctor(Zigurous.ColorPro.HunterLab)","Zigurous.ColorPro.HunterLab.a","Zigurous.ColorPro.HunterLab.b","Zigurous.ColorPro.HunterLab.Equals(System.Object)","Zigurous.ColorPro.HunterLab.Equals(Zigurous.ColorPro.HunterLab)","Zigurous.ColorPro.HunterLab.GetHashCode","Zigurous.ColorPro.HunterLab.Item(System.Int32)","Zigurous.ColorPro.HunterLab.L","Zigurous.ColorPro.HunterLab.op_Equality(Zigurous.ColorPro.HunterLab,Zigurous.ColorPro.HunterLab)","Zigurous.ColorPro.HunterLab.op_Explicit(Color)~Zigurous.ColorPro.HunterLab","Zigurous.ColorPro.HunterLab.op_Explicit(Zigurous.ColorPro.HunterLab)~Color","Zigurous.ColorPro.HunterLab.op_Explicit(Zigurous.ColorPro.HunterLab)~Zigurous.ColorPro.CIEXYZ","Zigurous.ColorPro.HunterLab.op_Inequality(Zigurous.ColorPro.HunterLab,Zigurous.ColorPro.HunterLab)","Zigurous.ColorPro.HunterLab.ToColor","Zigurous.ColorPro.HunterLab.ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.HunterLab.ToColor(Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.HunterLab.ToString","Zigurous.ColorPro.HunterLab.ToXYZ","Zigurous.ColorPro.HunterLab.ToXYZ(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.HunterLab.ToXYZ(Zigurous.ColorPro.Tristimulus)"],"id":"HunterLab","implements":["Global.IEquatable{Zigurous.ColorPro.HunterLab}"],"inheritance":null,"inheritedMembers":null,"name":"HunterLab","nameWithType":"HunterLab","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe Hunter Lab components of a color - lightness (L) and chromaticity (a,b).\n","syntax":{"content":"[Serializable]\npublic struct HunterLab : IEquatable<HunterLab>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.HunterLab"},{"children":null,"id":"L","implements":null,"inheritance":null,"inheritedMembers":null,"name":"L","nameWithType":"HunterLab.L","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nThe lightness component of the color in the range [0..100].\n","syntax":{"content":"public float L","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.HunterLab.L"},{"children":null,"id":"a","implements":null,"inheritance":null,"inheritedMembers":null,"name":"a","nameWithType":"HunterLab.a","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nThe green-red chromaticity component of the color.\n","syntax":{"content":"public float a","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.HunterLab.a"},{"children":null,"id":"b","implements":null,"inheritance":null,"inheritedMembers":null,"name":"b","nameWithType":"HunterLab.b","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nThe blue-yellow chromaticity component of the color.\n","syntax":{"content":"public float b","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.HunterLab.b"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"HunterLab.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.HunterLab.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HunterLab(Single, Single, Single)","nameWithType":"HunterLab.HunterLab(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nCreates new Hunter Lab components from the given values.\n","syntax":{"content":"public HunterLab(float L, float a, float b)","parameters":[{"description":"The lightness component of the color in the range [0..100].","id":"L","type":"System.Single"},{"description":"The green-red chromaticity component of the color.","id":"a","type":"System.Single"},{"description":"The blue-yellow chromaticity component of the color.","id":"b","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HunterLab.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.HunterLab)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HunterLab(HunterLab)","nameWithType":"HunterLab.HunterLab(HunterLab)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public HunterLab(HunterLab other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.HunterLab"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HunterLab.#ctor(Zigurous.ColorPro.HunterLab)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HunterLab(Color)","nameWithType":"HunterLab.HunterLab(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nCreates new Hunter Lab components from the given color.\n","syntax":{"content":"public HunterLab(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HunterLab.#ctor(Color)"},{"children":null,"id":"#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HunterLab(Color, Illuminant, StandardObserver)","nameWithType":"HunterLab.HunterLab(Color, Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nCreates new Hunter Lab components from the given color, illuminant,\nand standard observer.\n","syntax":{"content":"public HunterLab(Color color, Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"},{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HunterLab.#ctor(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"#ctor(Color,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HunterLab(Color, Tristimulus)","nameWithType":"HunterLab.HunterLab(Color, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nCreates new Hunter Lab components from the given color and white point.\n","syntax":{"content":"public HunterLab(Color color, Tristimulus whitePoint)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"},{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.HunterLab.#ctor(Color,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"Equals(Zigurous.ColorPro.HunterLab)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(HunterLab)","nameWithType":"HunterLab.Equals(HunterLab)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(HunterLab other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.HunterLab"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HunterLab.Equals(Zigurous.ColorPro.HunterLab)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"HunterLab.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HunterLab.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"HunterLab.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HunterLab.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"HunterLab.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HunterLab.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"HunterLab.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HunterLab.ToColor"},{"children":null,"id":"ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(Illuminant, StandardObserver)","nameWithType":"HunterLab.ToColor(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nConverts the components to a color using the given illuminant and\nstandard observer.\n","syntax":{"content":"public Color ToColor(Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HunterLab.ToColor(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToColor(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(Tristimulus)","nameWithType":"HunterLab.ToColor(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nConverts the components to a color using the given white point.\n","syntax":{"content":"public Color ToColor(Tristimulus whitePoint)","parameters":[{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HunterLab.ToColor(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToXYZ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToXYZ()","nameWithType":"HunterLab.ToXYZ()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nConverts the components to CIE XYZ components.\n","syntax":{"content":"public CIEXYZ ToXYZ()","parameters":null,"return":{"description":"The CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HunterLab.ToXYZ"},{"children":null,"id":"ToXYZ(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToXYZ(Illuminant, StandardObserver)","nameWithType":"HunterLab.ToXYZ(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nConverts the components to CIE XYZ components.\n","syntax":{"content":"public CIEXYZ ToXYZ(Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HunterLab.ToXYZ(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToXYZ(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToXYZ(Tristimulus)","nameWithType":"HunterLab.ToXYZ(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":"\nConverts the components to CIE XYZ components.\n","syntax":{"content":"public CIEXYZ ToXYZ(Tristimulus whitePoint)","parameters":[{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.HunterLab.ToXYZ(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.HunterLab,Zigurous.ColorPro.HunterLab)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(HunterLab, HunterLab)","nameWithType":"HunterLab.Equality(HunterLab, HunterLab)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(HunterLab lhs, HunterLab rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.HunterLab"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.HunterLab"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HunterLab.op_Equality(Zigurous.ColorPro.HunterLab,Zigurous.ColorPro.HunterLab)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.HunterLab,Zigurous.ColorPro.HunterLab)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(HunterLab, HunterLab)","nameWithType":"HunterLab.Inequality(HunterLab, HunterLab)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(HunterLab lhs, HunterLab rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.HunterLab"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.HunterLab"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HunterLab.op_Inequality(Zigurous.ColorPro.HunterLab,Zigurous.ColorPro.HunterLab)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.HunterLab)~Zigurous.ColorPro.CIEXYZ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(HunterLab to CIEXYZ)","nameWithType":"HunterLab.Explicit(HunterLab to CIEXYZ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator CIEXYZ(HunterLab components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.HunterLab"}],"return":{"description":null,"type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HunterLab.op_Explicit(Zigurous.ColorPro.HunterLab)~Zigurous.ColorPro.CIEXYZ"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.HunterLab)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(HunterLab to Color)","nameWithType":"HunterLab.Explicit(HunterLab to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(HunterLab components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.HunterLab"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HunterLab.op_Explicit(Zigurous.ColorPro.HunterLab)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.HunterLab","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to HunterLab)","nameWithType":"HunterLab.Explicit(Color to HunterLab)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.HunterLab","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator HunterLab(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.HunterLab"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.HunterLab.op_Explicit(Color)~Zigurous.ColorPro.HunterLab"}]},{"items":[{"children":["Zigurous.ColorPro.Illuminant.A","Zigurous.ColorPro.Illuminant.B","Zigurous.ColorPro.Illuminant.C","Zigurous.ColorPro.Illuminant.D50","Zigurous.ColorPro.Illuminant.D55","Zigurous.ColorPro.Illuminant.D65","Zigurous.ColorPro.Illuminant.D75","Zigurous.ColorPro.Illuminant.E","Zigurous.ColorPro.Illuminant.F1","Zigurous.ColorPro.Illuminant.F10","Zigurous.ColorPro.Illuminant.F11","Zigurous.ColorPro.Illuminant.F12","Zigurous.ColorPro.Illuminant.F2","Zigurous.ColorPro.Illuminant.F3","Zigurous.ColorPro.Illuminant.F4","Zigurous.ColorPro.Illuminant.F5","Zigurous.ColorPro.Illuminant.F6","Zigurous.ColorPro.Illuminant.F7","Zigurous.ColorPro.Illuminant.F8","Zigurous.ColorPro.Illuminant.F9"],"id":"Illuminant","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Illuminant","nameWithType":"Illuminant","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nA standard illuminant defined by the International Commission on\nIllumination (CIE) which provides a basis for comparing images or colors\nrecorded under different lighting.\n","syntax":{"content":"public enum Illuminant","parameters":null,"return":null,"typeParameters":null},"type":"Enum","uid":"Zigurous.ColorPro.Illuminant"},{"children":null,"id":"A","implements":null,"inheritance":null,"inheritedMembers":null,"name":"A","nameWithType":"Illuminant.A","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nIncandescent/Tungsten\n","syntax":{"content":"A = 0","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.A"},{"children":null,"id":"B","implements":null,"inheritance":null,"inheritedMembers":null,"name":"B","nameWithType":"Illuminant.B","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nOld Direct Sunlight at Noon\n","syntax":{"content":"B = 1","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.B"},{"children":null,"id":"C","implements":null,"inheritance":null,"inheritedMembers":null,"name":"C","nameWithType":"Illuminant.C","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nOld Daylight\n","syntax":{"content":"C = 2","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.C"},{"children":null,"id":"D50","implements":null,"inheritance":null,"inheritedMembers":null,"name":"D50","nameWithType":"Illuminant.D50","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nICC Profile PCS\n","syntax":{"content":"D50 = 3","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.D50"},{"children":null,"id":"D55","implements":null,"inheritance":null,"inheritedMembers":null,"name":"D55","nameWithType":"Illuminant.D55","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nMid-morning Daylight\n","syntax":{"content":"D55 = 4","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.D55"},{"children":null,"id":"D65","implements":null,"inheritance":null,"inheritedMembers":null,"name":"D65","nameWithType":"Illuminant.D65","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nDaylight, sRGB, Adobe-RGB\n","syntax":{"content":"D65 = 5","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.D65"},{"children":null,"id":"D75","implements":null,"inheritance":null,"inheritedMembers":null,"name":"D75","nameWithType":"Illuminant.D75","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nNorth Sky Daylight\n","syntax":{"content":"D75 = 6","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.D75"},{"children":null,"id":"E","implements":null,"inheritance":null,"inheritedMembers":null,"name":"E","nameWithType":"Illuminant.E","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nEqual Energy\n","syntax":{"content":"E = 7","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.E"},{"children":null,"id":"F1","implements":null,"inheritance":null,"inheritedMembers":null,"name":"F1","nameWithType":"Illuminant.F1","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nDaylight Fluorescent\n","syntax":{"content":"F1 = 8","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.F1"},{"children":null,"id":"F2","implements":null,"inheritance":null,"inheritedMembers":null,"name":"F2","nameWithType":"Illuminant.F2","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nCool Fluorescent\n","syntax":{"content":"F2 = 9","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.F2"},{"children":null,"id":"F3","implements":null,"inheritance":null,"inheritedMembers":null,"name":"F3","nameWithType":"Illuminant.F3","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nWhite Fluorescent\n","syntax":{"content":"F3 = 10","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.F3"},{"children":null,"id":"F4","implements":null,"inheritance":null,"inheritedMembers":null,"name":"F4","nameWithType":"Illuminant.F4","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nWarm White Fluorescent\n","syntax":{"content":"F4 = 11","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.F4"},{"children":null,"id":"F5","implements":null,"inheritance":null,"inheritedMembers":null,"name":"F5","nameWithType":"Illuminant.F5","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nDaylight Fluorescent\n","syntax":{"content":"F5 = 12","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.F5"},{"children":null,"id":"F6","implements":null,"inheritance":null,"inheritedMembers":null,"name":"F6","nameWithType":"Illuminant.F6","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nLite White Fluorescent\n","syntax":{"content":"F6 = 13","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.F6"},{"children":null,"id":"F7","implements":null,"inheritance":null,"inheritedMembers":null,"name":"F7","nameWithType":"Illuminant.F7","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nDaylight Fluorescent, D65 Simulator\n","syntax":{"content":"F7 = 14","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.F7"},{"children":null,"id":"F8","implements":null,"inheritance":null,"inheritedMembers":null,"name":"F8","nameWithType":"Illuminant.F8","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nSylvania F40, D50 Simulator\n","syntax":{"content":"F8 = 15","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.F8"},{"children":null,"id":"F9","implements":null,"inheritance":null,"inheritedMembers":null,"name":"F9","nameWithType":"Illuminant.F9","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nCool White Fluorescent\n","syntax":{"content":"F9 = 16","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.F9"},{"children":null,"id":"F10","implements":null,"inheritance":null,"inheritedMembers":null,"name":"F10","nameWithType":"Illuminant.F10","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nUltralume 50, Philips TL85\n","syntax":{"content":"F10 = 17","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.F10"},{"children":null,"id":"F11","implements":null,"inheritance":null,"inheritedMembers":null,"name":"F11","nameWithType":"Illuminant.F11","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nUltralume 40, Philips TL84\n","syntax":{"content":"F11 = 18","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.F11"},{"children":null,"id":"F12","implements":null,"inheritance":null,"inheritedMembers":null,"name":"F12","nameWithType":"Illuminant.F12","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Illuminant","remarks":null,"summary":"\nUltralume 30, Philips TL83\n","syntax":{"content":"F12 = 19","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.Illuminant"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Illuminant.F12"}]},{"items":[{"children":["Zigurous.ColorPro.IlluminantExtensions.GetWhitePoint(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver,System.Single)"],"id":"IlluminantExtensions","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"IlluminantExtensions","nameWithType":"IlluminantExtensions","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nExtensions methods for <xref href=\"Zigurous.ColorPro.Illuminant\" data-throw-if-not-resolved=\"false\"></xref>.\n","syntax":{"content":"public static class IlluminantExtensions","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.IlluminantExtensions"},{"children":null,"id":"GetWhitePoint(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetWhitePoint(Illuminant, StandardObserver, Single)","nameWithType":"IlluminantExtensions.GetWhitePoint(Illuminant, StandardObserver, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.IlluminantExtensions","remarks":null,"summary":"\nReturns the white point tristimulus values of the illuminant while\nobserved under a given standard observer. Values are usually scaled\nbetween 0 and 100.\n","syntax":{"content":"public static Tristimulus GetWhitePoint(this Illuminant illuminant, StandardObserver observer = StandardObserver.Two, float scale = 100F)","parameters":[{"description":"The illuminant to get the white point of.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"},{"description":"The scale to use for the output values.","id":"scale","type":"System.Single"}],"return":{"description":"The white point tristimulus values of the illuminant.","type":"Zigurous.ColorPro.Tristimulus"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.IlluminantExtensions.GetWhitePoint(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver,System.Single)"}]},{"items":[{"children":["Zigurous.ColorPro.LMS.#ctor(Color)","Zigurous.ColorPro.LMS.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.LMS.#ctor(Zigurous.ColorPro.LMS)","Zigurous.ColorPro.LMS.Apply(System.Single[])","Zigurous.ColorPro.LMS.Equals(System.Object)","Zigurous.ColorPro.LMS.Equals(Zigurous.ColorPro.LMS)","Zigurous.ColorPro.LMS.GetHashCode","Zigurous.ColorPro.LMS.Item(System.Int32)","Zigurous.ColorPro.LMS.L","Zigurous.ColorPro.LMS.M","Zigurous.ColorPro.LMS.op_Equality(Zigurous.ColorPro.LMS,Zigurous.ColorPro.LMS)","Zigurous.ColorPro.LMS.op_Explicit(Color)~Zigurous.ColorPro.LMS","Zigurous.ColorPro.LMS.op_Explicit(Zigurous.ColorPro.LMS)~Color","Zigurous.ColorPro.LMS.op_Inequality(Zigurous.ColorPro.LMS,Zigurous.ColorPro.LMS)","Zigurous.ColorPro.LMS.S","Zigurous.ColorPro.LMS.ToColor","Zigurous.ColorPro.LMS.ToString"],"id":"LMS","implements":["Global.IEquatable{Zigurous.ColorPro.LMS}"],"inheritance":null,"inheritedMembers":null,"name":"LMS","nameWithType":"LMS","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe LMS (long, medium, short) components of a color.\n","syntax":{"content":"[Serializable]\npublic struct LMS : IEquatable<LMS>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.LMS"},{"children":null,"id":"L","implements":null,"inheritance":null,"inheritedMembers":null,"name":"L","nameWithType":"LMS.L","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":"\nThe long cone cell of the human eye.\n","syntax":{"content":"public float L","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.LMS.L"},{"children":null,"id":"M","implements":null,"inheritance":null,"inheritedMembers":null,"name":"M","nameWithType":"LMS.M","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":"\nThe medium cone cell of the human eye.\n","syntax":{"content":"public float M","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.LMS.M"},{"children":null,"id":"S","implements":null,"inheritance":null,"inheritedMembers":null,"name":"S","nameWithType":"LMS.S","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":"\nThe short cone cell of the human eye.\n","syntax":{"content":"public float S","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.LMS.S"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"LMS.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.LMS.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"LMS(Single, Single, Single)","nameWithType":"LMS.LMS(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":"\nCreates new LMS components from the given values.\n","syntax":{"content":"public LMS(float L, float M, float S)","parameters":[{"description":"The long cone cell of the human eye.","id":"L","type":"System.Single"},{"description":"The medium cone cell of the human eye.","id":"M","type":"System.Single"},{"description":"The short cone cell of the human eye.","id":"S","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.LMS.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.LMS)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"LMS(LMS)","nameWithType":"LMS.LMS(LMS)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public LMS(LMS other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.LMS"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.LMS.#ctor(Zigurous.ColorPro.LMS)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"LMS(Color)","nameWithType":"LMS.LMS(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":"\nCreates new LMS components from the given color.\n","syntax":{"content":"public LMS(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.LMS.#ctor(Color)"},{"children":null,"id":"Apply(System.Single[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Apply(Single[])","nameWithType":"LMS.Apply(Single[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":"\nApplies the RGB matrix to the components.\n","syntax":{"content":"public void Apply(float[] m)","parameters":[{"description":"The RGB matrix to apply.","id":"m","type":"System.Single[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.LMS.Apply(System.Single[])"},{"children":null,"id":"Equals(Zigurous.ColorPro.LMS)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(LMS)","nameWithType":"LMS.Equals(LMS)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(LMS other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.LMS"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.LMS.Equals(Zigurous.ColorPro.LMS)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"LMS.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.LMS.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"LMS.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.LMS.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"LMS.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.LMS.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"LMS.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.LMS.ToColor"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.LMS,Zigurous.ColorPro.LMS)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(LMS, LMS)","nameWithType":"LMS.Equality(LMS, LMS)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(LMS lhs, LMS rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.LMS"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.LMS"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.LMS.op_Equality(Zigurous.ColorPro.LMS,Zigurous.ColorPro.LMS)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.LMS,Zigurous.ColorPro.LMS)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(LMS, LMS)","nameWithType":"LMS.Inequality(LMS, LMS)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(LMS lhs, LMS rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.LMS"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.LMS"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.LMS.op_Inequality(Zigurous.ColorPro.LMS,Zigurous.ColorPro.LMS)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.LMS)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(LMS to Color)","nameWithType":"LMS.Explicit(LMS to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(LMS components)","parameters":[{"description":null,"id":"components","type":"Zigurous.ColorPro.LMS"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.LMS.op_Explicit(Zigurous.ColorPro.LMS)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.LMS","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to LMS)","nameWithType":"LMS.Explicit(Color to LMS)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LMS","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator LMS(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.LMS"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.LMS.op_Explicit(Color)~Zigurous.ColorPro.LMS"}]},{"items":[{"children":["Zigurous.ColorPro.LumaCoefficients.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.LumaCoefficients.#ctor(Zigurous.ColorPro.LumaCoefficients)","Zigurous.ColorPro.LumaCoefficients.B","Zigurous.ColorPro.LumaCoefficients.Equals(System.Object)","Zigurous.ColorPro.LumaCoefficients.Equals(Zigurous.ColorPro.LumaCoefficients)","Zigurous.ColorPro.LumaCoefficients.G","Zigurous.ColorPro.LumaCoefficients.GetHashCode","Zigurous.ColorPro.LumaCoefficients.Item(System.Int32)","Zigurous.ColorPro.LumaCoefficients.op_Equality(Zigurous.ColorPro.LumaCoefficients,Zigurous.ColorPro.LumaCoefficients)","Zigurous.ColorPro.LumaCoefficients.op_Inequality(Zigurous.ColorPro.LumaCoefficients,Zigurous.ColorPro.LumaCoefficients)","Zigurous.ColorPro.LumaCoefficients.R","Zigurous.ColorPro.LumaCoefficients.ToString"],"id":"LumaCoefficients","implements":["Global.IEquatable{Zigurous.ColorPro.LumaCoefficients}"],"inheritance":null,"inheritedMembers":null,"name":"LumaCoefficients","nameWithType":"LumaCoefficients","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nA tuple of luma coefficients that are used to calculate the luma of a\ncolor under different signal encodings.\n","syntax":{"content":"[Serializable]\npublic struct LumaCoefficients : IEquatable<LumaCoefficients>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.LumaCoefficients"},{"children":null,"id":"R","implements":null,"inheritance":null,"inheritedMembers":null,"name":"R","nameWithType":"LumaCoefficients.R","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LumaCoefficients","remarks":null,"summary":"\nThe luma coefficient for the red channel.\n","syntax":{"content":"public float R","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.LumaCoefficients.R"},{"children":null,"id":"G","implements":null,"inheritance":null,"inheritedMembers":null,"name":"G","nameWithType":"LumaCoefficients.G","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LumaCoefficients","remarks":null,"summary":"\nThe luma coefficient for the green channel.\n","syntax":{"content":"public float G","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.LumaCoefficients.G"},{"children":null,"id":"B","implements":null,"inheritance":null,"inheritedMembers":null,"name":"B","nameWithType":"LumaCoefficients.B","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LumaCoefficients","remarks":null,"summary":"\nThe luma coefficient for the blue channel.\n","syntax":{"content":"public float B","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.LumaCoefficients.B"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"LumaCoefficients(Single, Single, Single)","nameWithType":"LumaCoefficients.LumaCoefficients(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LumaCoefficients","remarks":null,"summary":"\nCreates new luma coefficients with the given values.\n","syntax":{"content":"public LumaCoefficients(float R, float G, float B)","parameters":[{"description":"The luma coefficient for the red channel.","id":"R","type":"System.Single"},{"description":"The luma coefficient for the green channel.","id":"G","type":"System.Single"},{"description":"The luma coefficient for the blue channel.","id":"B","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.LumaCoefficients.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.LumaCoefficients)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"LumaCoefficients(LumaCoefficients)","nameWithType":"LumaCoefficients.LumaCoefficients(LumaCoefficients)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LumaCoefficients","remarks":null,"summary":"\nCreates a new copy of the values.\n","syntax":{"content":"public LumaCoefficients(LumaCoefficients other)","parameters":[{"description":"The other values to copy.","id":"other","type":"Zigurous.ColorPro.LumaCoefficients"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.LumaCoefficients.#ctor(Zigurous.ColorPro.LumaCoefficients)"},{"children":null,"id":"Equals(Zigurous.ColorPro.LumaCoefficients)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(LumaCoefficients)","nameWithType":"LumaCoefficients.Equals(LumaCoefficients)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LumaCoefficients","remarks":null,"summary":"\nDetermines if the luma coefficients are equal to another.\n","syntax":{"content":"public bool Equals(LumaCoefficients other)","parameters":[{"description":"The other luma coefficients to compare to.","id":"other","type":"Zigurous.ColorPro.LumaCoefficients"}],"return":{"description":"True if the luma coefficients are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.LumaCoefficients.Equals(Zigurous.ColorPro.LumaCoefficients)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"LumaCoefficients.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LumaCoefficients","remarks":null,"summary":"\nDetermines if the luma coefficients are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the luma coefficients are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.LumaCoefficients.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"LumaCoefficients.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LumaCoefficients","remarks":null,"summary":"\nReturns the hash code of the luma coefficients.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the luma coefficients.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.LumaCoefficients.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"LumaCoefficients.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LumaCoefficients","remarks":null,"summary":"\nConverts the luma coefficients to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The luma coefficients as a string.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.LumaCoefficients.ToString"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"LumaCoefficients.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LumaCoefficients","remarks":null,"summary":"\nGets or sets the coefficient at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the coefficient to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.LumaCoefficients.Item(System.Int32)"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.LumaCoefficients,Zigurous.ColorPro.LumaCoefficients)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(LumaCoefficients, LumaCoefficients)","nameWithType":"LumaCoefficients.Equality(LumaCoefficients, LumaCoefficients)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LumaCoefficients","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(LumaCoefficients lhs, LumaCoefficients rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.LumaCoefficients"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.LumaCoefficients"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.LumaCoefficients.op_Equality(Zigurous.ColorPro.LumaCoefficients,Zigurous.ColorPro.LumaCoefficients)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.LumaCoefficients,Zigurous.ColorPro.LumaCoefficients)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(LumaCoefficients, LumaCoefficients)","nameWithType":"LumaCoefficients.Inequality(LumaCoefficients, LumaCoefficients)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.LumaCoefficients","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(LumaCoefficients lhs, LumaCoefficients rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.LumaCoefficients"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.LumaCoefficients"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.LumaCoefficients.op_Inequality(Zigurous.ColorPro.LumaCoefficients,Zigurous.ColorPro.LumaCoefficients)"}]},{"items":[{"children":["Zigurous.ColorPro.Luminance.PerceivedBrightness(Color,Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.Luminance.RelativeLuminance(Color,Zigurous.ColorPro.SignalEncoding)"],"id":"Luminance","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Luminance","nameWithType":"Luminance","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nFunctions for calculating color luminance.\n","syntax":{"content":"public static class Luminance","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.Luminance"},{"children":null,"id":"RelativeLuminance(Color,Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RelativeLuminance(Color, SignalEncoding)","nameWithType":"Luminance.RelativeLuminance(Color, SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Luminance","remarks":null,"summary":"\nCalculates the relative luminance of the color, measured according\nto the HSL color model.\n","syntax":{"content":"public static float RelativeLuminance(this Color color, SignalEncoding encoding = SignalEncoding.Rec709)","parameters":[{"description":"The color to calculate the luminance of.","id":"color","type":"Global.Color"},{"description":"The signal encoding to use when calculating the luminance (default=Rec709).","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The relative luminance of the color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Luminance.RelativeLuminance(Color,Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"PerceivedBrightness(Color,Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"PerceivedBrightness(Color, SignalEncoding)","nameWithType":"Luminance.PerceivedBrightness(Color, SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Luminance","remarks":null,"summary":"\nCalculates the perceived brightness of the color, measured according\nto the HSP color model - http://alienryderflex.com/hsp.html.\n","syntax":{"content":"public static float PerceivedBrightness(this Color color, SignalEncoding encoding = SignalEncoding.Rec601)","parameters":[{"description":"The color to calculate the brightness of.","id":"color","type":"Global.Color"},{"description":"The signal encoding to use when calculating the brightness (default=Rec601).","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The perceived brightness of the color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Luminance.PerceivedBrightness(Color,Zigurous.ColorPro.SignalEncoding)"}]},{"items":[{"children":["Zigurous.ColorPro.MaterialPalette.Add(Material)","Zigurous.ColorPro.MaterialPalette.Convert","Zigurous.ColorPro.MaterialPalette.Item(System.Int32)","Zigurous.ColorPro.MaterialPalette.materials","Zigurous.ColorPro.MaterialPalette.Random"],"id":"MaterialPalette","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"MaterialPalette","nameWithType":"MaterialPalette","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nRepresents a palette of materials that can be saved as a Unity asset.\n","syntax":{"content":"public sealed class MaterialPalette : ScriptableObject","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.MaterialPalette"},{"children":null,"id":"materials","implements":null,"inheritance":null,"inheritedMembers":null,"name":"materials","nameWithType":"MaterialPalette.materials","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.MaterialPalette","remarks":null,"summary":"\nThe materials that define the palette.\n","syntax":{"content":"public Material[] materials","parameters":null,"return":{"description":null,"type":"Global.Material[]"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.MaterialPalette.materials"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"MaterialPalette.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.MaterialPalette","remarks":null,"summary":"\nGets or sets the material at the specified index.\n","syntax":{"content":"public Material this[int index] { get; set; }","parameters":[{"description":"The index of the material to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"Global.Material"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.MaterialPalette.Item(System.Int32)"},{"children":null,"id":"Add(Material)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Add(Material)","nameWithType":"MaterialPalette.Add(Material)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.MaterialPalette","remarks":null,"summary":"\nAdds a new material to the palette.\n","syntax":{"content":"public void Add(Material material)","parameters":[{"description":"The material to add.","id":"material","type":"Global.Material"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.MaterialPalette.Add(Material)"},{"children":null,"id":"Random","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Random()","nameWithType":"MaterialPalette.Random()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.MaterialPalette","remarks":null,"summary":"\nReturns a random material from the palette.\n","syntax":{"content":"public Material Random()","parameters":null,"return":{"description":"A random material from the palette.","type":"Global.Material"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.MaterialPalette.Random"},{"children":null,"id":"Convert","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Convert()","nameWithType":"MaterialPalette.Convert()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.MaterialPalette","remarks":null,"summary":"\nConverts the material palette to a color palette using each\nmaterial&apos;s main color.\n","syntax":{"content":"public ColorPalette Convert()","parameters":null,"return":{"description":"A new color palette.","type":"Zigurous.ColorPro.ColorPalette"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.MaterialPalette.Convert"}]},{"items":[{"children":["Zigurous.ColorPro.Mixing.Mix(Color,Color,System.Single,System.Boolean)","Zigurous.ColorPro.Mixing.Shade(Color,System.Single)","Zigurous.ColorPro.Mixing.Shades(Color,System.Int32)","Zigurous.ColorPro.Mixing.ShadesNonAlloc(Color,Color[])","Zigurous.ColorPro.Mixing.Tint(Color,System.Single)","Zigurous.ColorPro.Mixing.Tints(Color,System.Int32)","Zigurous.ColorPro.Mixing.TintsNonAlloc(Color,Color[])","Zigurous.ColorPro.Mixing.Tone(Color,System.Single)","Zigurous.ColorPro.Mixing.Tones(Color,System.Int32)","Zigurous.ColorPro.Mixing.TonesNonAlloc(Color,Color[])"],"id":"Mixing","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Mixing","nameWithType":"Mixing","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nFunctions for mixing colors together, including tints, shades, and tones.\n","syntax":{"content":"public static class Mixing","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.Mixing"},{"children":null,"id":"Mix(Color,Color,System.Single,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Mix(Color, Color, Single, Boolean)","nameWithType":"Mixing.Mix(Color, Color, Single, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Mixing","remarks":null,"summary":"\nReturns the result of mixing the current color with another color\nusing a given weight between [0..1]. A weight of 0 results in the\nfirst color, and a weight of 1 results in the second color.\n","syntax":{"content":"public static Color Mix(this Color color, Color other, float weight = 0.5F, bool mixAlpha = true)","parameters":[{"description":"The first color to mix.","id":"color","type":"Global.Color"},{"description":"The second color to mix.","id":"other","type":"Global.Color"},{"description":"The weight of the second color to mix with the first.","id":"weight","type":"System.Single"},{"description":"True to mix the alpha components, otherwise the first color&apos;s alpha is used.","id":"mixAlpha","type":"System.Boolean"}],"return":{"description":"The result of mixing the two colors.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Mixing.Mix(Color,Color,System.Single,System.Boolean)"},{"children":null,"id":"Tint(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Tint(Color, Single)","nameWithType":"Mixing.Tint(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Mixing","remarks":null,"summary":"\nReturns a tint of the color by mixing it with a percentage of white.\n","syntax":{"content":"public static Color Tint(this Color color, float percentage = 0.1F)","parameters":[{"description":"The color to tint.","id":"color","type":"Global.Color"},{"description":"The percentage of white to mix with.","id":"percentage","type":"System.Single"}],"return":{"description":"The tinted color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Mixing.Tint(Color,System.Single)"},{"children":null,"id":"Tints(Color,System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Tints(Color, Int32)","nameWithType":"Mixing.Tints(Color, Int32)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Mixing","remarks":null,"summary":"\nGenerates a given amount of tints from the base color.\n","syntax":{"content":"public static Color[] Tints(this Color color, int amount)","parameters":[{"description":"The base color to generate new colors from.","id":"color","type":"Global.Color"},{"description":"The amount of tints to generate.","id":"amount","type":"System.Int32"}],"return":{"description":"An array of tints.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Mixing.Tints(Color,System.Int32)"},{"children":null,"id":"TintsNonAlloc(Color,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"TintsNonAlloc(Color, Color[])","nameWithType":"Mixing.TintsNonAlloc(Color, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Mixing","remarks":null,"summary":"\nFills an existing array with tints of the base color to prevent\nheap allocations. The amount of colors generated is determined by\nthe size of the array.\n","syntax":{"content":"public static void TintsNonAlloc(this Color color, Color[] output)","parameters":[{"description":"The base color to generate new colors from.","id":"color","type":"Global.Color"},{"description":"The array to store the generated colors in.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Mixing.TintsNonAlloc(Color,Color[])"},{"children":null,"id":"Shade(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Shade(Color, Single)","nameWithType":"Mixing.Shade(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Mixing","remarks":null,"summary":"\nReturns a shade of the color by mixing it with a percentage of black.\n","syntax":{"content":"public static Color Shade(this Color color, float percentage = 0.1F)","parameters":[{"description":"The color to shade.","id":"color","type":"Global.Color"},{"description":"The percentage of black to mix with.","id":"percentage","type":"System.Single"}],"return":{"description":"The shaded color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Mixing.Shade(Color,System.Single)"},{"children":null,"id":"Shades(Color,System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Shades(Color, Int32)","nameWithType":"Mixing.Shades(Color, Int32)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Mixing","remarks":null,"summary":"\nGenerates a given amount of shades from the base color.\n","syntax":{"content":"public static Color[] Shades(this Color color, int amount)","parameters":[{"description":"The base color to generate new colors from.","id":"color","type":"Global.Color"},{"description":"The amount of shades to generate.","id":"amount","type":"System.Int32"}],"return":{"description":"An array of shades.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Mixing.Shades(Color,System.Int32)"},{"children":null,"id":"ShadesNonAlloc(Color,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ShadesNonAlloc(Color, Color[])","nameWithType":"Mixing.ShadesNonAlloc(Color, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Mixing","remarks":null,"summary":"\nFills an existing array with shades of the base color to prevent\nheap allocations. The amount of colors generated is determined by\nthe size of the array.\n","syntax":{"content":"public static void ShadesNonAlloc(this Color color, Color[] output)","parameters":[{"description":"The base color to generate new colors from.","id":"color","type":"Global.Color"},{"description":"The array to store the generated colors in.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Mixing.ShadesNonAlloc(Color,Color[])"},{"children":null,"id":"Tone(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Tone(Color, Single)","nameWithType":"Mixing.Tone(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Mixing","remarks":null,"summary":"\nReturns a tone of the color by mixing it with a percentage of gray.\n","syntax":{"content":"public static Color Tone(this Color color, float percentage = 0.1F)","parameters":[{"description":"The color to tone.","id":"color","type":"Global.Color"},{"description":"The percentage of gray to mix with.","id":"percentage","type":"System.Single"}],"return":{"description":"The toned color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Mixing.Tone(Color,System.Single)"},{"children":null,"id":"Tones(Color,System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Tones(Color, Int32)","nameWithType":"Mixing.Tones(Color, Int32)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Mixing","remarks":null,"summary":"\nGenerates a given amount of tones from the base color.\n","syntax":{"content":"public static Color[] Tones(this Color color, int amount)","parameters":[{"description":"The base color to generate new colors from.","id":"color","type":"Global.Color"},{"description":"The amount of tones to generate.","id":"amount","type":"System.Int32"}],"return":{"description":"An array of tones.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Mixing.Tones(Color,System.Int32)"},{"children":null,"id":"TonesNonAlloc(Color,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"TonesNonAlloc(Color, Color[])","nameWithType":"Mixing.TonesNonAlloc(Color, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Mixing","remarks":null,"summary":"\nFills an existing array with tones of the base color to prevent\nheap allocations. The amount of colors generated is determined by\nthe size of the array.\n","syntax":{"content":"public static void TonesNonAlloc(this Color color, Color[] output)","parameters":[{"description":"The base color to generate new colors from.","id":"color","type":"Global.Color"},{"description":"The array to store the generated colors in.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Mixing.TonesNonAlloc(Color,Color[])"}]},{"items":[{"children":["Zigurous.ColorPro.MixingModel.Additive","Zigurous.ColorPro.MixingModel.Subtractive","Zigurous.ColorPro.MixingModel.Traditional"],"id":"MixingModel","implements":null,"inheritance":null,"inheritedMembers":null,"name":"MixingModel","nameWithType":"MixingModel","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nA model that describes how colors are mixed together to form all other\ncolors.\n","syntax":{"content":"public enum MixingModel","parameters":null,"return":null,"typeParameters":null},"type":"Enum","uid":"Zigurous.ColorPro.MixingModel"},{"children":null,"id":"Additive","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Additive","nameWithType":"MixingModel.Additive","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.MixingModel","remarks":null,"summary":"\nA mixing model that leads to the RGB color model with primary colors\nof red, green, and blue. The absence of color is black, and the\npresence of all three primary colors is white. Colors are added\ntogether to form white. Additive color mixing simulates light.\n","syntax":{"content":"Additive = 0","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.MixingModel"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.MixingModel.Additive"},{"children":null,"id":"Subtractive","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Subtractive","nameWithType":"MixingModel.Subtractive","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.MixingModel","remarks":null,"summary":"\nA mixing model that leads to the CMYK color model with primary\ncolors of cyan, magenta, and yellow. The absence of color is white,\nand the presence of all three primary colors is black. Colors are\nsubtracted to form black. Subtractive color mixing simulates print.\n","syntax":{"content":"Subtractive = 1","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.MixingModel"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.MixingModel.Subtractive"},{"children":null,"id":"Traditional","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Traditional","nameWithType":"MixingModel.Traditional","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.MixingModel","remarks":null,"summary":"\nA mixing model that leads to the RYB color model with primary colors\nof red, yellow, and blue. The absence of color is white, and the\npresence of all three primary colors is black. Traditional color\nmixing simulates paint.\n","syntax":{"content":"Traditional = 2","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.MixingModel"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.MixingModel.Traditional"}]},{"items":[{"children":["Zigurous.ColorPro.MixingModelExtensions.ColorWheel(Zigurous.ColorPro.MixingModel)","Zigurous.ColorPro.MixingModelExtensions.ColorWheelNonAlloc(Zigurous.ColorPro.MixingModel,Color[])","Zigurous.ColorPro.MixingModelExtensions.PrimaryColors(Zigurous.ColorPro.MixingModel)","Zigurous.ColorPro.MixingModelExtensions.PrimaryColorsNonAlloc(Zigurous.ColorPro.MixingModel,Color[])","Zigurous.ColorPro.MixingModelExtensions.SecondaryColors(Zigurous.ColorPro.MixingModel)","Zigurous.ColorPro.MixingModelExtensions.SecondaryColorsNonAlloc(Zigurous.ColorPro.MixingModel,Color[])","Zigurous.ColorPro.MixingModelExtensions.TertiaryColors(Zigurous.ColorPro.MixingModel)","Zigurous.ColorPro.MixingModelExtensions.TertiaryColorsNonAlloc(Zigurous.ColorPro.MixingModel,Color[])"],"id":"MixingModelExtensions","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"MixingModelExtensions","nameWithType":"MixingModelExtensions","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nExtensions methods for <xref href=\"Zigurous.ColorPro.MixingModel\" data-throw-if-not-resolved=\"false\"></xref>.\n","syntax":{"content":"public static class MixingModelExtensions","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.MixingModelExtensions"},{"children":null,"id":"PrimaryColors(Zigurous.ColorPro.MixingModel)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"PrimaryColors(MixingModel)","nameWithType":"MixingModelExtensions.PrimaryColors(MixingModel)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.MixingModelExtensions","remarks":null,"summary":"\nReturns the primary colors of the mixing model.\n","syntax":{"content":"public static Color[] PrimaryColors(this MixingModel model)","parameters":[{"description":"The mixing model to get the colors of.","id":"model","type":"Zigurous.ColorPro.MixingModel"}],"return":{"description":"The primary colors of the mixing model.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.MixingModelExtensions.PrimaryColors(Zigurous.ColorPro.MixingModel)"},{"children":null,"id":"PrimaryColorsNonAlloc(Zigurous.ColorPro.MixingModel,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"PrimaryColorsNonAlloc(MixingModel, Color[])","nameWithType":"MixingModelExtensions.PrimaryColorsNonAlloc(MixingModel, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.MixingModelExtensions","remarks":null,"summary":"\nFills an existing array with the primary colors of the mixing model\nto prevent heap allocations. The output array requires a size of at\nleast 3.\n","syntax":{"content":"public static void PrimaryColorsNonAlloc(this MixingModel model, Color[] output)","parameters":[{"description":"The mixing model to get the colors of.","id":"model","type":"Zigurous.ColorPro.MixingModel"},{"description":"The array to populate with the colors.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.MixingModelExtensions.PrimaryColorsNonAlloc(Zigurous.ColorPro.MixingModel,Color[])"},{"children":null,"id":"SecondaryColors(Zigurous.ColorPro.MixingModel)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SecondaryColors(MixingModel)","nameWithType":"MixingModelExtensions.SecondaryColors(MixingModel)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.MixingModelExtensions","remarks":null,"summary":"\nReturns the secondary colors of the mixing model.\n","syntax":{"content":"public static Color[] SecondaryColors(this MixingModel model)","parameters":[{"description":"The mixing model to get the colors of.","id":"model","type":"Zigurous.ColorPro.MixingModel"}],"return":{"description":"The secondary colors of the mixing model.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.MixingModelExtensions.SecondaryColors(Zigurous.ColorPro.MixingModel)"},{"children":null,"id":"SecondaryColorsNonAlloc(Zigurous.ColorPro.MixingModel,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SecondaryColorsNonAlloc(MixingModel, Color[])","nameWithType":"MixingModelExtensions.SecondaryColorsNonAlloc(MixingModel, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.MixingModelExtensions","remarks":null,"summary":"\nFills an existing array with the secondary colors of the mixing\nmodel to prevent heap allocations. The output array requires a size\nof at least 3.\n","syntax":{"content":"public static void SecondaryColorsNonAlloc(this MixingModel model, Color[] output)","parameters":[{"description":"The mixing model to get the colors of.","id":"model","type":"Zigurous.ColorPro.MixingModel"},{"description":"The array to populate with the colors.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.MixingModelExtensions.SecondaryColorsNonAlloc(Zigurous.ColorPro.MixingModel,Color[])"},{"children":null,"id":"TertiaryColors(Zigurous.ColorPro.MixingModel)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"TertiaryColors(MixingModel)","nameWithType":"MixingModelExtensions.TertiaryColors(MixingModel)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.MixingModelExtensions","remarks":null,"summary":"\nReturns the tertiary colors of the mixing model.\n","syntax":{"content":"public static Color[] TertiaryColors(this MixingModel model)","parameters":[{"description":"The mixing model to get the colors of.","id":"model","type":"Zigurous.ColorPro.MixingModel"}],"return":{"description":"The tertiary colors of the mixing model.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.MixingModelExtensions.TertiaryColors(Zigurous.ColorPro.MixingModel)"},{"children":null,"id":"TertiaryColorsNonAlloc(Zigurous.ColorPro.MixingModel,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"TertiaryColorsNonAlloc(MixingModel, Color[])","nameWithType":"MixingModelExtensions.TertiaryColorsNonAlloc(MixingModel, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.MixingModelExtensions","remarks":null,"summary":"\nFills an existing array with the tertiary colors of the mixing model\nto prevent heap allocations. The output array requires a size of at\nleast 6.\n","syntax":{"content":"public static void TertiaryColorsNonAlloc(this MixingModel model, Color[] output)","parameters":[{"description":"The mixing model to get the colors of.","id":"model","type":"Zigurous.ColorPro.MixingModel"},{"description":"The array to populate with the colors.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.MixingModelExtensions.TertiaryColorsNonAlloc(Zigurous.ColorPro.MixingModel,Color[])"},{"children":null,"id":"ColorWheel(Zigurous.ColorPro.MixingModel)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ColorWheel(MixingModel)","nameWithType":"MixingModelExtensions.ColorWheel(MixingModel)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.MixingModelExtensions","remarks":null,"summary":"\nReturns the primary, secondary, and tertiary colors of the mixing model.\n","syntax":{"content":"public static Color[] ColorWheel(this MixingModel model)","parameters":[{"description":"The mixing model to get the colors of.","id":"model","type":"Zigurous.ColorPro.MixingModel"}],"return":{"description":"The primary, secondary, and tertiary colors of the mixing model.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.MixingModelExtensions.ColorWheel(Zigurous.ColorPro.MixingModel)"},{"children":null,"id":"ColorWheelNonAlloc(Zigurous.ColorPro.MixingModel,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ColorWheelNonAlloc(MixingModel, Color[])","nameWithType":"MixingModelExtensions.ColorWheelNonAlloc(MixingModel, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.MixingModelExtensions","remarks":null,"summary":"\nFills an existing array with the primary, secondary, and tertiary\ncolors of the mixing model to prevent heap allocations. The output\narray requires a size of at least 12.\n","syntax":{"content":"public static void ColorWheelNonAlloc(this MixingModel model, Color[] output)","parameters":[{"description":"The mixing model to get the colors of.","id":"model","type":"Zigurous.ColorPro.MixingModel"},{"description":"The array to populate with the colors.","id":"output","type":"Global.Color[]"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.MixingModelExtensions.ColorWheelNonAlloc(Zigurous.ColorPro.MixingModel,Color[])"}]},{"items":[{"children":["Zigurous.ColorPro.Random.Color(System.Boolean)","Zigurous.ColorPro.Random.Colors(System.Int32,System.Boolean)","Zigurous.ColorPro.Random.ColorsNonAlloc(Color[],System.Boolean)","Zigurous.ColorPro.Random.RandomDarker(Color,System.Int32,System.Single,System.Single)","Zigurous.ColorPro.Random.RandomDarkerNonAlloc(Color,Color[],System.Single,System.Single)","Zigurous.ColorPro.Random.RandomDesaturated(Color,System.Int32,System.Single,System.Single)","Zigurous.ColorPro.Random.RandomDesaturatedNonAlloc(Color,Color[],System.Single,System.Single)","Zigurous.ColorPro.Random.RandomHues(Color,System.Int32,System.Single,System.Single)","Zigurous.ColorPro.Random.RandomHuesNonAlloc(Color,Color[],System.Single,System.Single)","Zigurous.ColorPro.Random.RandomLighter(Color,System.Int32,System.Single,System.Single)","Zigurous.ColorPro.Random.RandomLighterNonAlloc(Color,Color[],System.Single,System.Single)","Zigurous.ColorPro.Random.RandomSaturated(Color,System.Int32,System.Single,System.Single)","Zigurous.ColorPro.Random.RandomSaturatedNonAlloc(Color,Color[],System.Single,System.Single)","Zigurous.ColorPro.Random.RandomShades(Color,System.Int32,System.Single,System.Single)","Zigurous.ColorPro.Random.RandomShadesNonAlloc(Color,Color[],System.Single,System.Single)","Zigurous.ColorPro.Random.RandomTints(Color,System.Int32,System.Single,System.Single)","Zigurous.ColorPro.Random.RandomTintsNonAlloc(Color,Color[],System.Single,System.Single)","Zigurous.ColorPro.Random.RandomTones(Color,System.Int32,System.Single,System.Single)","Zigurous.ColorPro.Random.RandomTonesNonAlloc(Color,Color[],System.Single,System.Single)"],"id":"Random","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Random","nameWithType":"Random","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nFunctions for generating random colors.\n","syntax":{"content":"public static class Random","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.Random"},{"children":null,"id":"Color(System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Color(Boolean)","nameWithType":"Random.Color(Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nReturns a random color.\n","syntax":{"content":"public static Color Color(bool randomizeAlpha = false)","parameters":[{"description":"Randomizes the alpha value as well, otherwise uses a value of 1.","id":"randomizeAlpha","type":"System.Boolean"}],"return":{"description":"A random color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.Color(System.Boolean)"},{"children":null,"id":"Colors(System.Int32,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Colors(Int32, Boolean)","nameWithType":"Random.Colors(Int32, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nReturns a random array of colors.\n","syntax":{"content":"public static Color[] Colors(int amount, bool randomizeAlpha = false)","parameters":[{"description":"The number of colors to return.","id":"amount","type":"System.Int32"},{"description":"Randomizes the alpha values as well, otherwise uses a value of 1.","id":"randomizeAlpha","type":"System.Boolean"}],"return":{"description":"An array of random colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.Colors(System.Int32,System.Boolean)"},{"children":null,"id":"ColorsNonAlloc(Color[],System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ColorsNonAlloc(Color[], Boolean)","nameWithType":"Random.ColorsNonAlloc(Color[], Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nFills an existing array with random colors to prevent heap\nallocations. The amount of colors generated is determined by the\nsize of the array.\n","syntax":{"content":"public static void ColorsNonAlloc(Color[] output, bool randomizeAlpha = false)","parameters":[{"description":"The array to populate with random colors.","id":"output","type":"Global.Color[]"},{"description":"Randomizes the alpha values as well, otherwise uses a value of 1.","id":"randomizeAlpha","type":"System.Boolean"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.ColorsNonAlloc(Color[],System.Boolean)"},{"children":null,"id":"RandomTints(Color,System.Int32,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RandomTints(Color, Int32, Single, Single)","nameWithType":"Random.RandomTints(Color, Int32, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nGenerates a given amount of random tints from the base color. The\namount of change in the tints can be constrained between a minimum\nand maximum range if desired.\n","syntax":{"content":"public static Color[] RandomTints(this Color baseColor, int amount, float min = 0F, float max = 1F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The amount of random tints to generate.","id":"amount","type":"System.Int32"},{"description":"The minimum amount of change in the tints.","id":"min","type":"System.Single"},{"description":"The maximum amount of change in the tints.","id":"max","type":"System.Single"}],"return":{"description":"An array of random tints.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.RandomTints(Color,System.Int32,System.Single,System.Single)"},{"children":null,"id":"RandomTintsNonAlloc(Color,Color[],System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RandomTintsNonAlloc(Color, Color[], Single, Single)","nameWithType":"Random.RandomTintsNonAlloc(Color, Color[], Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nFills an existing array with random tints of the base color to\nprevent heap allocations. The amount of colors generated is\ndetermined by the size of the array.\n","syntax":{"content":"public static void RandomTintsNonAlloc(this Color baseColor, Color[] output, float min = 0F, float max = 1F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The array to populate with random colors.","id":"output","type":"Global.Color[]"},{"description":"The minimum amount of change in the tints.","id":"min","type":"System.Single"},{"description":"The maximum amount of change in the tints.","id":"max","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.RandomTintsNonAlloc(Color,Color[],System.Single,System.Single)"},{"children":null,"id":"RandomShades(Color,System.Int32,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RandomShades(Color, Int32, Single, Single)","nameWithType":"Random.RandomShades(Color, Int32, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nGenerates a given amount of random shades from the base color. The\namount of change in the shades can be constrained between a minimum\nand maximum range if desired.\n","syntax":{"content":"public static Color[] RandomShades(this Color baseColor, int amount, float min = 0F, float max = 1F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The amount of random shades to generate.","id":"amount","type":"System.Int32"},{"description":"The minimum amount of change in the shades.","id":"min","type":"System.Single"},{"description":"The maximum amount of change in the shades.","id":"max","type":"System.Single"}],"return":{"description":"An array of random shades.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.RandomShades(Color,System.Int32,System.Single,System.Single)"},{"children":null,"id":"RandomShadesNonAlloc(Color,Color[],System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RandomShadesNonAlloc(Color, Color[], Single, Single)","nameWithType":"Random.RandomShadesNonAlloc(Color, Color[], Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nFills an existing array with random shades of the base color to\nprevent heap allocations. The amount of colors generated is\ndetermined by the size of the array.\n","syntax":{"content":"public static void RandomShadesNonAlloc(this Color baseColor, Color[] output, float min = 0F, float max = 1F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The array to populate with random colors.","id":"output","type":"Global.Color[]"},{"description":"The minimum amount of change in the shades.","id":"min","type":"System.Single"},{"description":"The maximum amount of change in the shades.","id":"max","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.RandomShadesNonAlloc(Color,Color[],System.Single,System.Single)"},{"children":null,"id":"RandomTones(Color,System.Int32,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RandomTones(Color, Int32, Single, Single)","nameWithType":"Random.RandomTones(Color, Int32, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nGenerates a given amount of random tones from the base color. The\namount of change in the tones can be constrained between a minimum\nand maximum range if desired.\n","syntax":{"content":"public static Color[] RandomTones(this Color baseColor, int amount, float min = 0F, float max = 1F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The amount of random tones to generate.","id":"amount","type":"System.Int32"},{"description":"The minimum amount of change in the tones.","id":"min","type":"System.Single"},{"description":"The maximum amount of change in the tones.","id":"max","type":"System.Single"}],"return":{"description":"An array of random tones.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.RandomTones(Color,System.Int32,System.Single,System.Single)"},{"children":null,"id":"RandomTonesNonAlloc(Color,Color[],System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RandomTonesNonAlloc(Color, Color[], Single, Single)","nameWithType":"Random.RandomTonesNonAlloc(Color, Color[], Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nFills an existing array with random tones of the base color to\nprevent heap allocations. The amount of colors generated is\ndetermined by the size of the array.\n","syntax":{"content":"public static void RandomTonesNonAlloc(this Color baseColor, Color[] output, float min = 0F, float max = 1F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The array to populate with random colors.","id":"output","type":"Global.Color[]"},{"description":"The minimum amount of change in the tones.","id":"min","type":"System.Single"},{"description":"The maximum amount of change in the tones.","id":"max","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.RandomTonesNonAlloc(Color,Color[],System.Single,System.Single)"},{"children":null,"id":"RandomLighter(Color,System.Int32,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RandomLighter(Color, Int32, Single, Single)","nameWithType":"Random.RandomLighter(Color, Int32, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nGenerates a given amount of random lighter colors from the base\ncolor. The amount of change in lightness can be constrained between\na minimum and maximum range if desired.\n","syntax":{"content":"public static Color[] RandomLighter(this Color baseColor, int amount, float min = 0F, float max = 1F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The amount of random colors to generate.","id":"amount","type":"System.Int32"},{"description":"The minimum amount of change in lightness.","id":"min","type":"System.Single"},{"description":"The maximum amount of change in lightness.","id":"max","type":"System.Single"}],"return":{"description":"An array of random lighter colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.RandomLighter(Color,System.Int32,System.Single,System.Single)"},{"children":null,"id":"RandomLighterNonAlloc(Color,Color[],System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RandomLighterNonAlloc(Color, Color[], Single, Single)","nameWithType":"Random.RandomLighterNonAlloc(Color, Color[], Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nFills an existing array with random lighter colors of the base color\nto prevent heap allocations. The amount of colors generated is\ndetermined by the size of the array.\n","syntax":{"content":"public static void RandomLighterNonAlloc(this Color baseColor, Color[] output, float min = 0F, float max = 1F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The array to populate with random colors.","id":"output","type":"Global.Color[]"},{"description":"The minimum amount of change in the tones.","id":"min","type":"System.Single"},{"description":"The maximum amount of change in the tones.","id":"max","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.RandomLighterNonAlloc(Color,Color[],System.Single,System.Single)"},{"children":null,"id":"RandomDarker(Color,System.Int32,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RandomDarker(Color, Int32, Single, Single)","nameWithType":"Random.RandomDarker(Color, Int32, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nGenerates a given amount of random darker colors from the base\ncolor. The amount of change in darkness can be constrained between\na minimum and maximum range if desired.\n","syntax":{"content":"public static Color[] RandomDarker(this Color baseColor, int amount, float min = 0F, float max = 1F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The amount of random colors to generate.","id":"amount","type":"System.Int32"},{"description":"The minimum amount of change in darkness.","id":"min","type":"System.Single"},{"description":"The maximum amount of change in darkness.","id":"max","type":"System.Single"}],"return":{"description":"An array of random darker colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.RandomDarker(Color,System.Int32,System.Single,System.Single)"},{"children":null,"id":"RandomDarkerNonAlloc(Color,Color[],System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RandomDarkerNonAlloc(Color, Color[], Single, Single)","nameWithType":"Random.RandomDarkerNonAlloc(Color, Color[], Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nFills an existing array with random darker colors of the base color\nto prevent heap allocations. The amount of colors generated is\ndetermined by the size of the array.\n","syntax":{"content":"public static void RandomDarkerNonAlloc(this Color baseColor, Color[] output, float min = 0F, float max = 1F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The array to populate with random colors.","id":"output","type":"Global.Color[]"},{"description":"The minimum amount of change in the tones.","id":"min","type":"System.Single"},{"description":"The maximum amount of change in the tones.","id":"max","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.RandomDarkerNonAlloc(Color,Color[],System.Single,System.Single)"},{"children":null,"id":"RandomSaturated(Color,System.Int32,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RandomSaturated(Color, Int32, Single, Single)","nameWithType":"Random.RandomSaturated(Color, Int32, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nGenerates a given amount of random saturated colors from the base\ncolor. The amount of change in saturation can be constrained between\na minimum and maximum range if desired.\n","syntax":{"content":"public static Color[] RandomSaturated(this Color baseColor, int amount, float min = 0F, float max = 1F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The amount of random colors to generate.","id":"amount","type":"System.Int32"},{"description":"The minimum amount of change in saturation.","id":"min","type":"System.Single"},{"description":"The maximum amount of change in saturation.","id":"max","type":"System.Single"}],"return":{"description":"An array of random saturated colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.RandomSaturated(Color,System.Int32,System.Single,System.Single)"},{"children":null,"id":"RandomSaturatedNonAlloc(Color,Color[],System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RandomSaturatedNonAlloc(Color, Color[], Single, Single)","nameWithType":"Random.RandomSaturatedNonAlloc(Color, Color[], Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nFills an existing array with random saturated colors of the base\ncolor to prevent heap allocations. The amount of colors generated is\ndetermined by the size of the array.\n","syntax":{"content":"public static void RandomSaturatedNonAlloc(this Color baseColor, Color[] output, float min = 0F, float max = 1F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The array to populate with random colors.","id":"output","type":"Global.Color[]"},{"description":"The minimum amount of change in the tones.","id":"min","type":"System.Single"},{"description":"The maximum amount of change in the tones.","id":"max","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.RandomSaturatedNonAlloc(Color,Color[],System.Single,System.Single)"},{"children":null,"id":"RandomDesaturated(Color,System.Int32,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RandomDesaturated(Color, Int32, Single, Single)","nameWithType":"Random.RandomDesaturated(Color, Int32, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nGenerates a given amount of random desaturated colors from the base\ncolor. The amount of change in desaturation can be constrained\nbetween a minimum and maximum range if desired.\n","syntax":{"content":"public static Color[] RandomDesaturated(this Color baseColor, int amount, float min = 0F, float max = 1F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The amount of random colors to generate.","id":"amount","type":"System.Int32"},{"description":"The minimum amount of change in desaturation.","id":"min","type":"System.Single"},{"description":"The maximum amount of change in desaturation.","id":"max","type":"System.Single"}],"return":{"description":"An array of random desaturated colors.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.RandomDesaturated(Color,System.Int32,System.Single,System.Single)"},{"children":null,"id":"RandomDesaturatedNonAlloc(Color,Color[],System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RandomDesaturatedNonAlloc(Color, Color[], Single, Single)","nameWithType":"Random.RandomDesaturatedNonAlloc(Color, Color[], Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nFills an existing array with random desaturated colors of the base\ncolor to prevent heap allocations. The amount of colors generated is\ndetermined by the size of the array.\n","syntax":{"content":"public static void RandomDesaturatedNonAlloc(this Color baseColor, Color[] output, float min = 0F, float max = 1F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The array to populate with random colors.","id":"output","type":"Global.Color[]"},{"description":"The minimum amount of change in the tones.","id":"min","type":"System.Single"},{"description":"The maximum amount of change in the tones.","id":"max","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.RandomDesaturatedNonAlloc(Color,Color[],System.Single,System.Single)"},{"children":null,"id":"RandomHues(Color,System.Int32,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RandomHues(Color, Int32, Single, Single)","nameWithType":"Random.RandomHues(Color, Int32, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nGenerates a given amount of random hues of the base color.\n","syntax":{"content":"public static Color[] RandomHues(this Color baseColor, int amount, float min = 0F, float max = 360F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The amount of random hues to generate.","id":"amount","type":"System.Int32"},{"description":"The minimum hue value (default=0).","id":"min","type":"System.Single"},{"description":"The maximum hue value (default=360).","id":"max","type":"System.Single"}],"return":{"description":"An array of random hues.","type":"Global.Color[]"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.RandomHues(Color,System.Int32,System.Single,System.Single)"},{"children":null,"id":"RandomHuesNonAlloc(Color,Color[],System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RandomHuesNonAlloc(Color, Color[], Single, Single)","nameWithType":"Random.RandomHuesNonAlloc(Color, Color[], Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Random","remarks":null,"summary":"\nFills an existing array with random hues of the base color to\nprevent heap allocations. The amount of colors generated is\ndetermined by the size of the array.\n","syntax":{"content":"public static void RandomHuesNonAlloc(this Color baseColor, Color[] output, float min = 0F, float max = 360F)","parameters":[{"description":"The base color to generate new colors from.","id":"baseColor","type":"Global.Color"},{"description":"The array to populate with random colors.","id":"output","type":"Global.Color[]"},{"description":"The minimum hue value (default=0).","id":"min","type":"System.Single"},{"description":"The maximum hue value (default=360).","id":"max","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Random.RandomHuesNonAlloc(Color,Color[],System.Single,System.Single)"}]},{"items":[{"children":["Zigurous.ColorPro.RGB.#ctor(Color)","Zigurous.ColorPro.RGB.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.RGB.#ctor(Zigurous.ColorPro.RGB)","Zigurous.ColorPro.RGB.blue","Zigurous.ColorPro.RGB.Equals(System.Object)","Zigurous.ColorPro.RGB.Equals(Zigurous.ColorPro.RGB)","Zigurous.ColorPro.RGB.GetHashCode","Zigurous.ColorPro.RGB.green","Zigurous.ColorPro.RGB.Item(System.Int32)","Zigurous.ColorPro.RGB.op_Equality(Zigurous.ColorPro.RGB,Zigurous.ColorPro.RGB)","Zigurous.ColorPro.RGB.op_Explicit(Color)~Zigurous.ColorPro.RGB","Zigurous.ColorPro.RGB.op_Explicit(Zigurous.ColorPro.RGB)~Color","Zigurous.ColorPro.RGB.op_Implicit(Zigurous.ColorPro.RGB)~Zigurous.ColorPro.ARGB","Zigurous.ColorPro.RGB.op_Implicit(Zigurous.ColorPro.RGB)~Zigurous.ColorPro.RGBA","Zigurous.ColorPro.RGB.op_Inequality(Zigurous.ColorPro.RGB,Zigurous.ColorPro.RGB)","Zigurous.ColorPro.RGB.red","Zigurous.ColorPro.RGB.ToColor(System.Single)","Zigurous.ColorPro.RGB.ToString"],"id":"RGB","implements":["Global.IEquatable{Zigurous.ColorPro.RGB}"],"inheritance":null,"inheritedMembers":null,"name":"RGB","nameWithType":"RGB","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe RGB (red, green, blue) components of a color in the range [0..1].\n","syntax":{"content":"[Serializable]\npublic struct RGB : IEquatable<RGB>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.RGB"},{"children":null,"id":"red","implements":null,"inheritance":null,"inheritedMembers":null,"name":"red","nameWithType":"RGB.red","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":"\nThe red component of the color in the range [0..1].\n","syntax":{"content":"public float red","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.RGB.red"},{"children":null,"id":"green","implements":null,"inheritance":null,"inheritedMembers":null,"name":"green","nameWithType":"RGB.green","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":"\nThe green component of the color in the range [0..1].\n","syntax":{"content":"public float green","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.RGB.green"},{"children":null,"id":"blue","implements":null,"inheritance":null,"inheritedMembers":null,"name":"blue","nameWithType":"RGB.blue","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":"\nThe blue component of the color in the range [0..1].\n","syntax":{"content":"public float blue","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.RGB.blue"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"RGB.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.RGB.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGB(Single, Single, Single)","nameWithType":"RGB.RGB(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":"\nCreates new RGB components from the given values.\n","syntax":{"content":"public RGB(float red, float green, float blue)","parameters":[{"description":"The red component of the color in the range [0..1].","id":"red","type":"System.Single"},{"description":"The green component of the color in the range [0..1].","id":"green","type":"System.Single"},{"description":"The blue component of the color in the range [0..1].","id":"blue","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.RGB.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.RGB)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGB(RGB)","nameWithType":"RGB.RGB(RGB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public RGB(RGB other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.RGB"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.RGB.#ctor(Zigurous.ColorPro.RGB)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGB(Color)","nameWithType":"RGB.RGB(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":"\nCreates new RGB components from the given color.\n","syntax":{"content":"public RGB(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.RGB.#ctor(Color)"},{"children":null,"id":"Equals(Zigurous.ColorPro.RGB)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(RGB)","nameWithType":"RGB.Equals(RGB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(RGB other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.RGB"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGB.Equals(Zigurous.ColorPro.RGB)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"RGB.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGB.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"RGB.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGB.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"RGB.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGB.ToString"},{"children":null,"id":"ToColor(System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(Single)","nameWithType":"RGB.ToColor(Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor(float alpha = 1F)","parameters":[{"description":"The alpha component of the color in the range [0..1].","id":"alpha","type":"System.Single"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGB.ToColor(System.Single)"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.RGB,Zigurous.ColorPro.RGB)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(RGB, RGB)","nameWithType":"RGB.Equality(RGB, RGB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(RGB lhs, RGB rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.RGB"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.RGB"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGB.op_Equality(Zigurous.ColorPro.RGB,Zigurous.ColorPro.RGB)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.RGB,Zigurous.ColorPro.RGB)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(RGB, RGB)","nameWithType":"RGB.Inequality(RGB, RGB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(RGB lhs, RGB rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.RGB"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.RGB"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGB.op_Inequality(Zigurous.ColorPro.RGB,Zigurous.ColorPro.RGB)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.RGB)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(RGB to Color)","nameWithType":"RGB.Explicit(RGB to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(RGB rgb)","parameters":[{"description":null,"id":"rgb","type":"Zigurous.ColorPro.RGB"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGB.op_Explicit(Zigurous.ColorPro.RGB)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.RGB","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to RGB)","nameWithType":"RGB.Explicit(Color to RGB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator RGB(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.RGB"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGB.op_Explicit(Color)~Zigurous.ColorPro.RGB"},{"children":null,"id":"op_Implicit(Zigurous.ColorPro.RGB)~Zigurous.ColorPro.RGBA","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Implicit(RGB to RGBA)","nameWithType":"RGB.Implicit(RGB to RGBA)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":null,"syntax":{"content":"public static implicit operator RGBA(RGB rgb)","parameters":[{"description":null,"id":"rgb","type":"Zigurous.ColorPro.RGB"}],"return":{"description":null,"type":"Zigurous.ColorPro.RGBA"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGB.op_Implicit(Zigurous.ColorPro.RGB)~Zigurous.ColorPro.RGBA"},{"children":null,"id":"op_Implicit(Zigurous.ColorPro.RGB)~Zigurous.ColorPro.ARGB","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Implicit(RGB to ARGB)","nameWithType":"RGB.Implicit(RGB to ARGB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB","remarks":null,"summary":null,"syntax":{"content":"public static implicit operator ARGB(RGB rgb)","parameters":[{"description":null,"id":"rgb","type":"Zigurous.ColorPro.RGB"}],"return":{"description":null,"type":"Zigurous.ColorPro.ARGB"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGB.op_Implicit(Zigurous.ColorPro.RGB)~Zigurous.ColorPro.ARGB"}]},{"items":[{"children":["Zigurous.ColorPro.RGB255.#ctor(Color)","Zigurous.ColorPro.RGB255.#ctor(System.Int32,System.Int32,System.Int32)","Zigurous.ColorPro.RGB255.#ctor(Zigurous.ColorPro.RGB255)","Zigurous.ColorPro.RGB255.blue","Zigurous.ColorPro.RGB255.Equals(System.Object)","Zigurous.ColorPro.RGB255.Equals(Zigurous.ColorPro.RGB255)","Zigurous.ColorPro.RGB255.GetHashCode","Zigurous.ColorPro.RGB255.green","Zigurous.ColorPro.RGB255.Item(System.Int32)","Zigurous.ColorPro.RGB255.op_Equality(Zigurous.ColorPro.RGB255,Zigurous.ColorPro.RGB255)","Zigurous.ColorPro.RGB255.op_Explicit(Color)~Zigurous.ColorPro.RGB255","Zigurous.ColorPro.RGB255.op_Explicit(Zigurous.ColorPro.RGB255)~Color","Zigurous.ColorPro.RGB255.op_Implicit(Zigurous.ColorPro.RGB255)~Zigurous.ColorPro.ARGB255","Zigurous.ColorPro.RGB255.op_Implicit(Zigurous.ColorPro.RGB255)~Zigurous.ColorPro.RGBA255","Zigurous.ColorPro.RGB255.op_Inequality(Zigurous.ColorPro.RGB255,Zigurous.ColorPro.RGB255)","Zigurous.ColorPro.RGB255.red","Zigurous.ColorPro.RGB255.ToColor","Zigurous.ColorPro.RGB255.ToString"],"id":"RGB255","implements":["Global.IEquatable{Zigurous.ColorPro.RGB255}"],"inheritance":null,"inheritedMembers":null,"name":"RGB255","nameWithType":"RGB255","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe RGB (red, green, blue) components of a color in the range [0..255].\n","syntax":{"content":"[Serializable]\npublic struct RGB255 : IEquatable<RGB255>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.RGB255"},{"children":null,"id":"red","implements":null,"inheritance":null,"inheritedMembers":null,"name":"red","nameWithType":"RGB255.red","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":"\nThe red component of the color in the range [0..255].\n","syntax":{"content":"public int red","parameters":null,"return":{"description":null,"type":"System.Int32"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.RGB255.red"},{"children":null,"id":"green","implements":null,"inheritance":null,"inheritedMembers":null,"name":"green","nameWithType":"RGB255.green","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":"\nThe green component of the color in the range [0..255].\n","syntax":{"content":"public int green","parameters":null,"return":{"description":null,"type":"System.Int32"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.RGB255.green"},{"children":null,"id":"blue","implements":null,"inheritance":null,"inheritedMembers":null,"name":"blue","nameWithType":"RGB255.blue","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":"\nThe blue component of the color in the range [0..255].\n","syntax":{"content":"public int blue","parameters":null,"return":{"description":null,"type":"System.Int32"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.RGB255.blue"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"RGB255.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public int this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Int32"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.RGB255.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Int32,System.Int32,System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGB255(Int32, Int32, Int32)","nameWithType":"RGB255.RGB255(Int32, Int32, Int32)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":"\nCreates new RGB255 components from the given values.\n","syntax":{"content":"public RGB255(int red, int green, int blue)","parameters":[{"description":"The red component of the color in the range [0..255].","id":"red","type":"System.Int32"},{"description":"The green component of the color in the range [0..255].","id":"green","type":"System.Int32"},{"description":"The blue component of the color in the range [0..255].","id":"blue","type":"System.Int32"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.RGB255.#ctor(System.Int32,System.Int32,System.Int32)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.RGB255)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGB255(RGB255)","nameWithType":"RGB255.RGB255(RGB255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public RGB255(RGB255 other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.RGB255"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.RGB255.#ctor(Zigurous.ColorPro.RGB255)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGB255(Color)","nameWithType":"RGB255.RGB255(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":"\nCreates new RGB255 components from the given color.\n","syntax":{"content":"public RGB255(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.RGB255.#ctor(Color)"},{"children":null,"id":"Equals(Zigurous.ColorPro.RGB255)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(RGB255)","nameWithType":"RGB255.Equals(RGB255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(RGB255 other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.RGB255"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGB255.Equals(Zigurous.ColorPro.RGB255)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"RGB255.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGB255.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"RGB255.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGB255.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"RGB255.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGB255.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"RGB255.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGB255.ToColor"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.RGB255,Zigurous.ColorPro.RGB255)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(RGB255, RGB255)","nameWithType":"RGB255.Equality(RGB255, RGB255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(RGB255 lhs, RGB255 rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.RGB255"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.RGB255"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGB255.op_Equality(Zigurous.ColorPro.RGB255,Zigurous.ColorPro.RGB255)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.RGB255,Zigurous.ColorPro.RGB255)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(RGB255, RGB255)","nameWithType":"RGB255.Inequality(RGB255, RGB255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(RGB255 lhs, RGB255 rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.RGB255"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.RGB255"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGB255.op_Inequality(Zigurous.ColorPro.RGB255,Zigurous.ColorPro.RGB255)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.RGB255)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(RGB255 to Color)","nameWithType":"RGB255.Explicit(RGB255 to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(RGB255 rgb)","parameters":[{"description":null,"id":"rgb","type":"Zigurous.ColorPro.RGB255"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGB255.op_Explicit(Zigurous.ColorPro.RGB255)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.RGB255","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to RGB255)","nameWithType":"RGB255.Explicit(Color to RGB255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator RGB255(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.RGB255"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGB255.op_Explicit(Color)~Zigurous.ColorPro.RGB255"},{"children":null,"id":"op_Implicit(Zigurous.ColorPro.RGB255)~Zigurous.ColorPro.RGBA255","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Implicit(RGB255 to RGBA255)","nameWithType":"RGB255.Implicit(RGB255 to RGBA255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":null,"syntax":{"content":"public static implicit operator RGBA255(RGB255 rgb)","parameters":[{"description":null,"id":"rgb","type":"Zigurous.ColorPro.RGB255"}],"return":{"description":null,"type":"Zigurous.ColorPro.RGBA255"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGB255.op_Implicit(Zigurous.ColorPro.RGB255)~Zigurous.ColorPro.RGBA255"},{"children":null,"id":"op_Implicit(Zigurous.ColorPro.RGB255)~Zigurous.ColorPro.ARGB255","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Implicit(RGB255 to ARGB255)","nameWithType":"RGB255.Implicit(RGB255 to ARGB255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGB255","remarks":null,"summary":null,"syntax":{"content":"public static implicit operator ARGB255(RGB255 rgb)","parameters":[{"description":null,"id":"rgb","type":"Zigurous.ColorPro.RGB255"}],"return":{"description":null,"type":"Zigurous.ColorPro.ARGB255"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGB255.op_Implicit(Zigurous.ColorPro.RGB255)~Zigurous.ColorPro.ARGB255"}]},{"items":[{"children":["Zigurous.ColorPro.RGBA.#ctor(Color)","Zigurous.ColorPro.RGBA.#ctor(System.Single,System.Single,System.Single,System.Single)","Zigurous.ColorPro.RGBA.#ctor(Zigurous.ColorPro.RGBA)","Zigurous.ColorPro.RGBA.alpha","Zigurous.ColorPro.RGBA.blue","Zigurous.ColorPro.RGBA.Equals(System.Object)","Zigurous.ColorPro.RGBA.Equals(Zigurous.ColorPro.RGBA)","Zigurous.ColorPro.RGBA.GetHashCode","Zigurous.ColorPro.RGBA.green","Zigurous.ColorPro.RGBA.Item(System.Int32)","Zigurous.ColorPro.RGBA.op_Equality(Zigurous.ColorPro.RGBA,Zigurous.ColorPro.RGBA)","Zigurous.ColorPro.RGBA.op_Explicit(Color)~Zigurous.ColorPro.RGBA","Zigurous.ColorPro.RGBA.op_Explicit(Zigurous.ColorPro.RGBA)~Color","Zigurous.ColorPro.RGBA.op_Implicit(Zigurous.ColorPro.RGBA)~Zigurous.ColorPro.ARGB","Zigurous.ColorPro.RGBA.op_Implicit(Zigurous.ColorPro.RGBA)~Zigurous.ColorPro.RGB","Zigurous.ColorPro.RGBA.op_Inequality(Zigurous.ColorPro.RGBA,Zigurous.ColorPro.RGBA)","Zigurous.ColorPro.RGBA.red","Zigurous.ColorPro.RGBA.ToColor","Zigurous.ColorPro.RGBA.ToString"],"id":"RGBA","implements":["Global.IEquatable{Zigurous.ColorPro.RGBA}"],"inheritance":null,"inheritedMembers":null,"name":"RGBA","nameWithType":"RGBA","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe RGBA (red, green, blue, alpha) components of a color in the range [0..1].\n","syntax":{"content":"[Serializable]\npublic struct RGBA : IEquatable<RGBA>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.RGBA"},{"children":null,"id":"red","implements":null,"inheritance":null,"inheritedMembers":null,"name":"red","nameWithType":"RGBA.red","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":"\nThe red component of the color in the range [0..1].\n","syntax":{"content":"public float red","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.RGBA.red"},{"children":null,"id":"green","implements":null,"inheritance":null,"inheritedMembers":null,"name":"green","nameWithType":"RGBA.green","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":"\nThe green component of the color in the range [0..1].\n","syntax":{"content":"public float green","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.RGBA.green"},{"children":null,"id":"blue","implements":null,"inheritance":null,"inheritedMembers":null,"name":"blue","nameWithType":"RGBA.blue","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":"\nThe blue component of the color in the range [0..1].\n","syntax":{"content":"public float blue","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.RGBA.blue"},{"children":null,"id":"alpha","implements":null,"inheritance":null,"inheritedMembers":null,"name":"alpha","nameWithType":"RGBA.alpha","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":"\nThe alpha component of the color in the range [0..1].\n","syntax":{"content":"public float alpha","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.RGBA.alpha"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"RGBA.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.RGBA.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBA(Single, Single, Single, Single)","nameWithType":"RGBA.RGBA(Single, Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":"\nCreates new RGBA components from the given values.\n","syntax":{"content":"public RGBA(float red, float green, float blue, float alpha)","parameters":[{"description":"The red component of the color in the range [0..1].","id":"red","type":"System.Single"},{"description":"The green component of the color in the range [0..1].","id":"green","type":"System.Single"},{"description":"The blue component of the color in the range [0..1].","id":"blue","type":"System.Single"},{"description":"The alpha component of the color in the range [0..1].","id":"alpha","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.RGBA.#ctor(System.Single,System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.RGBA)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBA(RGBA)","nameWithType":"RGBA.RGBA(RGBA)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public RGBA(RGBA other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.RGBA"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.RGBA.#ctor(Zigurous.ColorPro.RGBA)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBA(Color)","nameWithType":"RGBA.RGBA(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":"\nCreates new RGBA components from the given color.\n","syntax":{"content":"public RGBA(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.RGBA.#ctor(Color)"},{"children":null,"id":"Equals(Zigurous.ColorPro.RGBA)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(RGBA)","nameWithType":"RGBA.Equals(RGBA)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(RGBA other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.RGBA"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGBA.Equals(Zigurous.ColorPro.RGBA)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"RGBA.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGBA.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"RGBA.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGBA.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"RGBA.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGBA.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"RGBA.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGBA.ToColor"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.RGBA,Zigurous.ColorPro.RGBA)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(RGBA, RGBA)","nameWithType":"RGBA.Equality(RGBA, RGBA)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(RGBA lhs, RGBA rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.RGBA"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.RGBA"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGBA.op_Equality(Zigurous.ColorPro.RGBA,Zigurous.ColorPro.RGBA)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.RGBA,Zigurous.ColorPro.RGBA)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(RGBA, RGBA)","nameWithType":"RGBA.Inequality(RGBA, RGBA)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(RGBA lhs, RGBA rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.RGBA"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.RGBA"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGBA.op_Inequality(Zigurous.ColorPro.RGBA,Zigurous.ColorPro.RGBA)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.RGBA)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(RGBA to Color)","nameWithType":"RGBA.Explicit(RGBA to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(RGBA rgba)","parameters":[{"description":null,"id":"rgba","type":"Zigurous.ColorPro.RGBA"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGBA.op_Explicit(Zigurous.ColorPro.RGBA)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.RGBA","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to RGBA)","nameWithType":"RGBA.Explicit(Color to RGBA)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator RGBA(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.RGBA"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGBA.op_Explicit(Color)~Zigurous.ColorPro.RGBA"},{"children":null,"id":"op_Implicit(Zigurous.ColorPro.RGBA)~Zigurous.ColorPro.ARGB","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Implicit(RGBA to ARGB)","nameWithType":"RGBA.Implicit(RGBA to ARGB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":null,"syntax":{"content":"public static implicit operator ARGB(RGBA rgba)","parameters":[{"description":null,"id":"rgba","type":"Zigurous.ColorPro.RGBA"}],"return":{"description":null,"type":"Zigurous.ColorPro.ARGB"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGBA.op_Implicit(Zigurous.ColorPro.RGBA)~Zigurous.ColorPro.ARGB"},{"children":null,"id":"op_Implicit(Zigurous.ColorPro.RGBA)~Zigurous.ColorPro.RGB","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Implicit(RGBA to RGB)","nameWithType":"RGBA.Implicit(RGBA to RGB)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA","remarks":null,"summary":null,"syntax":{"content":"public static implicit operator RGB(RGBA rgba)","parameters":[{"description":null,"id":"rgba","type":"Zigurous.ColorPro.RGBA"}],"return":{"description":null,"type":"Zigurous.ColorPro.RGB"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGBA.op_Implicit(Zigurous.ColorPro.RGBA)~Zigurous.ColorPro.RGB"}]},{"items":[{"children":["Zigurous.ColorPro.RGBA255.#ctor(Color)","Zigurous.ColorPro.RGBA255.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)","Zigurous.ColorPro.RGBA255.#ctor(Zigurous.ColorPro.RGBA255)","Zigurous.ColorPro.RGBA255.alpha","Zigurous.ColorPro.RGBA255.blue","Zigurous.ColorPro.RGBA255.Equals(System.Object)","Zigurous.ColorPro.RGBA255.Equals(Zigurous.ColorPro.RGBA255)","Zigurous.ColorPro.RGBA255.GetHashCode","Zigurous.ColorPro.RGBA255.green","Zigurous.ColorPro.RGBA255.Item(System.Int32)","Zigurous.ColorPro.RGBA255.op_Equality(Zigurous.ColorPro.RGBA255,Zigurous.ColorPro.RGBA255)","Zigurous.ColorPro.RGBA255.op_Explicit(Color)~Zigurous.ColorPro.RGBA255","Zigurous.ColorPro.RGBA255.op_Explicit(Zigurous.ColorPro.RGBA255)~Color","Zigurous.ColorPro.RGBA255.op_Implicit(Zigurous.ColorPro.RGBA255)~Zigurous.ColorPro.ARGB255","Zigurous.ColorPro.RGBA255.op_Implicit(Zigurous.ColorPro.RGBA255)~Zigurous.ColorPro.RGB255","Zigurous.ColorPro.RGBA255.op_Inequality(Zigurous.ColorPro.RGBA255,Zigurous.ColorPro.RGBA255)","Zigurous.ColorPro.RGBA255.red","Zigurous.ColorPro.RGBA255.ToColor","Zigurous.ColorPro.RGBA255.ToString"],"id":"RGBA255","implements":["Global.IEquatable{Zigurous.ColorPro.RGBA255}"],"inheritance":null,"inheritedMembers":null,"name":"RGBA255","nameWithType":"RGBA255","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe RGBA (red, green, blue, alpha) components of a color in the range [0..255].\n","syntax":{"content":"[Serializable]\npublic struct RGBA255 : IEquatable<RGBA255>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.RGBA255"},{"children":null,"id":"red","implements":null,"inheritance":null,"inheritedMembers":null,"name":"red","nameWithType":"RGBA255.red","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":"\nThe red component of the color in the range [0..255].\n","syntax":{"content":"public int red","parameters":null,"return":{"description":null,"type":"System.Int32"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.RGBA255.red"},{"children":null,"id":"green","implements":null,"inheritance":null,"inheritedMembers":null,"name":"green","nameWithType":"RGBA255.green","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":"\nThe green component of the color in the range [0..255].\n","syntax":{"content":"public int green","parameters":null,"return":{"description":null,"type":"System.Int32"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.RGBA255.green"},{"children":null,"id":"blue","implements":null,"inheritance":null,"inheritedMembers":null,"name":"blue","nameWithType":"RGBA255.blue","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":"\nThe blue component of the color in the range [0..255].\n","syntax":{"content":"public int blue","parameters":null,"return":{"description":null,"type":"System.Int32"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.RGBA255.blue"},{"children":null,"id":"alpha","implements":null,"inheritance":null,"inheritedMembers":null,"name":"alpha","nameWithType":"RGBA255.alpha","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":"\nThe alpha component of the color in the range [0..255].\n","syntax":{"content":"public int alpha","parameters":null,"return":{"description":null,"type":"System.Int32"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.RGBA255.alpha"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"RGBA255.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public int this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Int32"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.RGBA255.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Int32,System.Int32,System.Int32,System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBA255(Int32, Int32, Int32, Int32)","nameWithType":"RGBA255.RGBA255(Int32, Int32, Int32, Int32)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":"\nCreates new RGBA255 components from the given values.\n","syntax":{"content":"public RGBA255(int red, int green, int blue, int alpha)","parameters":[{"description":"The red component of the color in the range [0..255].","id":"red","type":"System.Int32"},{"description":"The green component of the color in the range [0..255].","id":"green","type":"System.Int32"},{"description":"The blue component of the color in the range [0..255].","id":"blue","type":"System.Int32"},{"description":"The alpha component of the color in the range [0..255].","id":"alpha","type":"System.Int32"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.RGBA255.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.RGBA255)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBA255(RGBA255)","nameWithType":"RGBA255.RGBA255(RGBA255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public RGBA255(RGBA255 other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.RGBA255"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.RGBA255.#ctor(Zigurous.ColorPro.RGBA255)"},{"children":null,"id":"#ctor(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBA255(Color)","nameWithType":"RGBA255.RGBA255(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":"\nCreates new RGBA255 components from the given color.\n","syntax":{"content":"public RGBA255(Color color)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.RGBA255.#ctor(Color)"},{"children":null,"id":"Equals(Zigurous.ColorPro.RGBA255)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(RGBA255)","nameWithType":"RGBA255.Equals(RGBA255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(RGBA255 other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.RGBA255"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGBA255.Equals(Zigurous.ColorPro.RGBA255)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"RGBA255.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGBA255.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"RGBA255.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGBA255.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"RGBA255.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGBA255.ToString"},{"children":null,"id":"ToColor","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor()","nameWithType":"RGBA255.ToColor()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":"\nConverts the components to a color.\n","syntax":{"content":"public Color ToColor()","parameters":null,"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.RGBA255.ToColor"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.RGBA255,Zigurous.ColorPro.RGBA255)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(RGBA255, RGBA255)","nameWithType":"RGBA255.Equality(RGBA255, RGBA255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(RGBA255 lhs, RGBA255 rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.RGBA255"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.RGBA255"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGBA255.op_Equality(Zigurous.ColorPro.RGBA255,Zigurous.ColorPro.RGBA255)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.RGBA255,Zigurous.ColorPro.RGBA255)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(RGBA255, RGBA255)","nameWithType":"RGBA255.Inequality(RGBA255, RGBA255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(RGBA255 lhs, RGBA255 rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.RGBA255"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.RGBA255"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGBA255.op_Inequality(Zigurous.ColorPro.RGBA255,Zigurous.ColorPro.RGBA255)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.RGBA255)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(RGBA255 to Color)","nameWithType":"RGBA255.Explicit(RGBA255 to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(RGBA255 rgba)","parameters":[{"description":null,"id":"rgba","type":"Zigurous.ColorPro.RGBA255"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGBA255.op_Explicit(Zigurous.ColorPro.RGBA255)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.RGBA255","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to RGBA255)","nameWithType":"RGBA255.Explicit(Color to RGBA255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator RGBA255(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.RGBA255"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGBA255.op_Explicit(Color)~Zigurous.ColorPro.RGBA255"},{"children":null,"id":"op_Implicit(Zigurous.ColorPro.RGBA255)~Zigurous.ColorPro.ARGB255","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Implicit(RGBA255 to ARGB255)","nameWithType":"RGBA255.Implicit(RGBA255 to ARGB255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":null,"syntax":{"content":"public static implicit operator ARGB255(RGBA255 rgba)","parameters":[{"description":null,"id":"rgba","type":"Zigurous.ColorPro.RGBA255"}],"return":{"description":null,"type":"Zigurous.ColorPro.ARGB255"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGBA255.op_Implicit(Zigurous.ColorPro.RGBA255)~Zigurous.ColorPro.ARGB255"},{"children":null,"id":"op_Implicit(Zigurous.ColorPro.RGBA255)~Zigurous.ColorPro.RGB255","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Implicit(RGBA255 to RGB255)","nameWithType":"RGBA255.Implicit(RGBA255 to RGB255)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.RGBA255","remarks":null,"summary":null,"syntax":{"content":"public static implicit operator RGB255(RGBA255 rgba)","parameters":[{"description":null,"id":"rgba","type":"Zigurous.ColorPro.RGBA255"}],"return":{"description":null,"type":"Zigurous.ColorPro.RGB255"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.RGBA255.op_Implicit(Zigurous.ColorPro.RGBA255)~Zigurous.ColorPro.RGB255"}]},{"items":[{"children":["Zigurous.ColorPro.SignalEncoding.Rec2020","Zigurous.ColorPro.SignalEncoding.Rec2100","Zigurous.ColorPro.SignalEncoding.Rec601","Zigurous.ColorPro.SignalEncoding.Rec709"],"id":"SignalEncoding","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SignalEncoding","nameWithType":"SignalEncoding","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nA standard ITU-R Recommendation signal encoding. ITU-R Recommendations\nare the names given to the set of international technical standards\ndeveloped by the Radiocommunication Sector of the International\nTelecommunication Union (ITU).\n","syntax":{"content":"public enum SignalEncoding","parameters":null,"return":null,"typeParameters":null},"type":"Enum","uid":"Zigurous.ColorPro.SignalEncoding"},{"children":null,"id":"Rec601","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Rec601","nameWithType":"SignalEncoding.Rec601","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.SignalEncoding","remarks":null,"summary":"\nITU-R BT.601 (SDTV)\n","syntax":{"content":"Rec601 = 0","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.SignalEncoding"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.SignalEncoding.Rec601"},{"children":null,"id":"Rec709","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Rec709","nameWithType":"SignalEncoding.Rec709","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.SignalEncoding","remarks":null,"summary":"\nITU-R BT.709 (HDTV)\n","syntax":{"content":"Rec709 = 1","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.SignalEncoding"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.SignalEncoding.Rec709"},{"children":null,"id":"Rec2020","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Rec2020","nameWithType":"SignalEncoding.Rec2020","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.SignalEncoding","remarks":null,"summary":"\nITU-R BT.2020 (UHDTV)\n","syntax":{"content":"Rec2020 = 2","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.SignalEncoding"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.SignalEncoding.Rec2020"},{"children":null,"id":"Rec2100","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Rec2100","nameWithType":"SignalEncoding.Rec2100","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.SignalEncoding","remarks":null,"summary":"\nITU-R BT.2100 (HDR-TV)\n","syntax":{"content":"Rec2100 = 3","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.SignalEncoding"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.SignalEncoding.Rec2100"}]},{"items":[{"children":["Zigurous.ColorPro.SignalEncodingExtensions.GetCoefficients(Zigurous.ColorPro.SignalEncoding)"],"id":"SignalEncodingExtensions","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"SignalEncodingExtensions","nameWithType":"SignalEncodingExtensions","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nExtension methods for <xref href=\"Zigurous.ColorPro.SignalEncoding\" data-throw-if-not-resolved=\"false\"></xref>\n","syntax":{"content":"public static class SignalEncodingExtensions","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.SignalEncodingExtensions"},{"children":null,"id":"GetCoefficients(Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetCoefficients(SignalEncoding)","nameWithType":"SignalEncodingExtensions.GetCoefficients(SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.SignalEncodingExtensions","remarks":null,"summary":"\nReturns the luma coefficients of the signal encoding.\n","syntax":{"content":"public static LumaCoefficients GetCoefficients(this SignalEncoding encoding)","parameters":[{"description":"The encoding to get the coefficients of.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The luma coefficients of the signal encoding.","type":"Zigurous.ColorPro.LumaCoefficients"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.SignalEncodingExtensions.GetCoefficients(Zigurous.ColorPro.SignalEncoding)"}]},{"items":[{"children":["Zigurous.ColorPro.StandardObserver.Ten","Zigurous.ColorPro.StandardObserver.Two"],"id":"StandardObserver","implements":null,"inheritance":null,"inheritedMembers":null,"name":"StandardObserver","nameWithType":"StandardObserver","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nA CIE color-mapping function called the standard observer which\nrepresents an average human&apos;s chromatic response while observing an\nobject under an illuminant.\n","syntax":{"content":"public enum StandardObserver","parameters":null,"return":null,"typeParameters":null},"type":"Enum","uid":"Zigurous.ColorPro.StandardObserver"},{"children":null,"id":"Two","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Two","nameWithType":"StandardObserver.Two","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.StandardObserver","remarks":null,"summary":"\nCIE 1931 2° Standard Observer\n","syntax":{"content":"Two = 0","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.StandardObserver"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.StandardObserver.Two"},{"children":null,"id":"Ten","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Ten","nameWithType":"StandardObserver.Ten","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.StandardObserver","remarks":null,"summary":"\nCIE 1964 10° Standard Observer\n","syntax":{"content":"Ten = 1","parameters":null,"return":{"description":null,"type":"Zigurous.ColorPro.StandardObserver"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.StandardObserver.Ten"}]},{"items":[{"children":["Zigurous.ColorPro.Temperature.CCT(Color)","Zigurous.ColorPro.Temperature.CCT(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.Temperature.CCTString(Color)","Zigurous.ColorPro.Temperature.CCTString(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"],"id":"Temperature","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Temperature","nameWithType":"Temperature","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nFunctions for calculating and testing color temperature.\n","syntax":{"content":"public static class Temperature","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.Temperature"},{"children":null,"id":"CCT(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CCT(Color)","nameWithType":"Temperature.CCT(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Temperature","remarks":null,"summary":"\nReturns the CCT temperature of the color in Kelvin.\n","syntax":{"content":"public static float CCT(this Color color)","parameters":[{"description":"The color to get the CCT temperature of.","id":"color","type":"Global.Color"}],"return":{"description":"The CCT temperature of the color in Kelvin.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Temperature.CCT(Color)"},{"children":null,"id":"CCT(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CCT(Illuminant, StandardObserver)","nameWithType":"Temperature.CCT(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Temperature","remarks":null,"summary":"\nReturns the CCT temperature of the illuminant in Kelvin.\n","syntax":{"content":"public static float CCT(this Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The illuminant to get the CCT temperature of.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The CCT temperature of the illuminant in Kelvin.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Temperature.CCT(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"CCTString(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CCTString(Color)","nameWithType":"Temperature.CCTString(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Temperature","remarks":null,"summary":"\nReturns the CCT temperature of the color in Kelvin as a string.\n","syntax":{"content":"public static string CCTString(this Color color)","parameters":[{"description":"The color to get the CCT temperature of.","id":"color","type":"Global.Color"}],"return":{"description":"The CCT temperature of the color in Kelvin as a string.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Temperature.CCTString(Color)"},{"children":null,"id":"CCTString(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CCTString(Illuminant, StandardObserver)","nameWithType":"Temperature.CCTString(Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Temperature","remarks":null,"summary":"\nReturns the CCT temperature of the illuminant in Kelvin as a string.\n","syntax":{"content":"public static string CCTString(this Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The illuminant to get the CCT temperature of.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The CCT temperature of the illuminant in Kelvin as a string.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Temperature.CCTString(Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"}]},{"items":[{"children":["Zigurous.ColorPro.Tristimulus.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Tristimulus.#ctor(Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Tristimulus.Equals(System.Object)","Zigurous.ColorPro.Tristimulus.Equals(Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Tristimulus.GetHashCode","Zigurous.ColorPro.Tristimulus.Item(System.Int32)","Zigurous.ColorPro.Tristimulus.op_Equality(Zigurous.ColorPro.Tristimulus,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Tristimulus.op_Inequality(Zigurous.ColorPro.Tristimulus,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Tristimulus.op_Multiply(Color,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Tristimulus.op_Multiply(System.Single,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Tristimulus.op_Multiply(Zigurous.ColorPro.Tristimulus,Color)","Zigurous.ColorPro.Tristimulus.op_Multiply(Zigurous.ColorPro.Tristimulus,System.Single)","Zigurous.ColorPro.Tristimulus.ToString","Zigurous.ColorPro.Tristimulus.ToXYZ","Zigurous.ColorPro.Tristimulus.X","Zigurous.ColorPro.Tristimulus.Y","Zigurous.ColorPro.Tristimulus.Z"],"id":"Tristimulus","implements":["Global.IEquatable{Zigurous.ColorPro.Tristimulus}"],"inheritance":null,"inheritedMembers":null,"name":"Tristimulus","nameWithType":"Tristimulus","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nTristimulus system, a system for visually matching a color under\nstandardized conditions against the three primary colors — red, green,\nand blue; the three results are expressed as X, Y, and Z, respectively,\nand are called tristimulus values.\n","syntax":{"content":"[Serializable]\npublic struct Tristimulus : IEquatable<Tristimulus>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.Tristimulus"},{"children":null,"id":"X","implements":null,"inheritance":null,"inheritedMembers":null,"name":"X","nameWithType":"Tristimulus.X","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":"\nThe X tristimulus value.\n","syntax":{"content":"public float X","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Tristimulus.X"},{"children":null,"id":"Y","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Y","nameWithType":"Tristimulus.Y","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":"\nThe Y tristimulus value.\n","syntax":{"content":"public float Y","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Tristimulus.Y"},{"children":null,"id":"Z","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Z","nameWithType":"Tristimulus.Z","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":"\nThe Z tristimulus value.\n","syntax":{"content":"public float Z","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.Tristimulus.Z"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"Tristimulus.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":"\nGets or sets the component at the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">index</code>.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.Tristimulus.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Tristimulus(Single, Single, Single)","nameWithType":"Tristimulus.Tristimulus(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":"\nCreates a new tristimulus tuple with the given values.\n","syntax":{"content":"public Tristimulus(float X, float Y, float Z)","parameters":[{"description":"The X tristimulus value.","id":"X","type":"System.Single"},{"description":"The Y tristimulus value.","id":"Y","type":"System.Single"},{"description":"The Z tristimulus value.","id":"Z","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.Tristimulus.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Tristimulus(Tristimulus)","nameWithType":"Tristimulus.Tristimulus(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":"\nCreates a new copy of the values.\n","syntax":{"content":"public Tristimulus(Tristimulus other)","parameters":[{"description":"The other values to copy.","id":"other","type":"Zigurous.ColorPro.Tristimulus"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.Tristimulus.#ctor(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"Equals(Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Tristimulus)","nameWithType":"Tristimulus.Equals(Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":"\nDetermines if the tristimulus values are equal to another.\n","syntax":{"content":"public bool Equals(Tristimulus other)","parameters":[{"description":"The other tristimulus values to compare to.","id":"other","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"True if the tristimulus values are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Tristimulus.Equals(Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"Tristimulus.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":"\nDetermines if the tristimulus values are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the tristimulus values are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Tristimulus.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"Tristimulus.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":"\nReturns the hash code of the tristimulus values.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the tristimulus values.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Tristimulus.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"Tristimulus.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":"\nConverts the tristimulus values to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The tristimulus values as a string.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Tristimulus.ToString"},{"children":null,"id":"ToXYZ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToXYZ()","nameWithType":"Tristimulus.ToXYZ()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":"\nConverts the tristimulus values to CIE XYZ components.\n","syntax":{"content":"public CIEXYZ ToXYZ()","parameters":null,"return":{"description":"The CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Tristimulus.ToXYZ"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.Tristimulus,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(Tristimulus, Tristimulus)","nameWithType":"Tristimulus.Equality(Tristimulus, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(Tristimulus lhs, Tristimulus rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.Tristimulus"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.Tristimulus.op_Equality(Zigurous.ColorPro.Tristimulus,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.Tristimulus,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(Tristimulus, Tristimulus)","nameWithType":"Tristimulus.Inequality(Tristimulus, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(Tristimulus lhs, Tristimulus rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.Tristimulus"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.Tristimulus.op_Inequality(Zigurous.ColorPro.Tristimulus,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"op_Multiply(Zigurous.ColorPro.Tristimulus,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Multiply(Tristimulus, Single)","nameWithType":"Tristimulus.Multiply(Tristimulus, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":null,"syntax":{"content":"public static Tristimulus operator *(Tristimulus lhs, float rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.Tristimulus"},{"description":null,"id":"rhs","type":"System.Single"}],"return":{"description":null,"type":"Zigurous.ColorPro.Tristimulus"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.Tristimulus.op_Multiply(Zigurous.ColorPro.Tristimulus,System.Single)"},{"children":null,"id":"op_Multiply(System.Single,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Multiply(Single, Tristimulus)","nameWithType":"Tristimulus.Multiply(Single, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":null,"syntax":{"content":"public static Tristimulus operator *(float lhs, Tristimulus rhs)","parameters":[{"description":null,"id":"lhs","type":"System.Single"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":null,"type":"Zigurous.ColorPro.Tristimulus"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.Tristimulus.op_Multiply(System.Single,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"op_Multiply(Zigurous.ColorPro.Tristimulus,Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Multiply(Tristimulus, Color)","nameWithType":"Tristimulus.Multiply(Tristimulus, Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":null,"syntax":{"content":"public static Tristimulus operator *(Tristimulus lhs, Color rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.Tristimulus"},{"description":null,"id":"rhs","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.Tristimulus"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.Tristimulus.op_Multiply(Zigurous.ColorPro.Tristimulus,Color)"},{"children":null,"id":"op_Multiply(Color,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Multiply(Color, Tristimulus)","nameWithType":"Tristimulus.Multiply(Color, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Tristimulus","remarks":null,"summary":null,"syntax":{"content":"public static Tristimulus operator *(Color lhs, Tristimulus rhs)","parameters":[{"description":null,"id":"lhs","type":"Global.Color"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":null,"type":"Zigurous.ColorPro.Tristimulus"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.Tristimulus.op_Multiply(Color,Zigurous.ColorPro.Tristimulus)"}]},{"items":[{"children":["Zigurous.ColorPro.YCbCr.#ctor(Color,Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.YCbCr.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.YCbCr.#ctor(Zigurous.ColorPro.YCbCr)","Zigurous.ColorPro.YCbCr.Cb","Zigurous.ColorPro.YCbCr.Cr","Zigurous.ColorPro.YCbCr.Equals(System.Object)","Zigurous.ColorPro.YCbCr.Equals(Zigurous.ColorPro.YCbCr)","Zigurous.ColorPro.YCbCr.GetHashCode","Zigurous.ColorPro.YCbCr.Item(System.Int32)","Zigurous.ColorPro.YCbCr.op_Equality(Zigurous.ColorPro.YCbCr,Zigurous.ColorPro.YCbCr)","Zigurous.ColorPro.YCbCr.op_Explicit(Color)~Zigurous.ColorPro.YCbCr","Zigurous.ColorPro.YCbCr.op_Explicit(Zigurous.ColorPro.YCbCr)~Color","Zigurous.ColorPro.YCbCr.op_Explicit(Zigurous.ColorPro.YCbCr)~Zigurous.ColorPro.YPbPr","Zigurous.ColorPro.YCbCr.op_Inequality(Zigurous.ColorPro.YCbCr,Zigurous.ColorPro.YCbCr)","Zigurous.ColorPro.YCbCr.ToColor(Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.YCbCr.ToString","Zigurous.ColorPro.YCbCr.ToYPbPr","Zigurous.ColorPro.YCbCr.Y"],"id":"YCbCr","implements":["Global.IEquatable{Zigurous.ColorPro.YCbCr}"],"inheritance":null,"inheritedMembers":null,"name":"YCbCr","nameWithType":"YCbCr","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe Y′CbCr components of a color - luma (Y′) and chroma (Cb,Cr).\n","syntax":{"content":"[Serializable]\npublic struct YCbCr : IEquatable<YCbCr>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.YCbCr"},{"children":null,"id":"Y","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Y","nameWithType":"YCbCr.Y","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":"\nThe luma component of the color in the full range [0..255].\n","syntax":{"content":"public float Y","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.YCbCr.Y"},{"children":null,"id":"Cb","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Cb","nameWithType":"YCbCr.Cb","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":"\nThe blue-difference chroma component of the color in the full range [0..255].\n","syntax":{"content":"public float Cb","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.YCbCr.Cb"},{"children":null,"id":"Cr","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Cr","nameWithType":"YCbCr.Cr","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":"\nThe red-difference chroma component of the color in the full range [0..255].\n","syntax":{"content":"public float Cr","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.YCbCr.Cr"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"YCbCr.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.YCbCr.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YCbCr(Single, Single, Single)","nameWithType":"YCbCr.YCbCr(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":"\nCreates new Y′CbCr components from the given values.\n","syntax":{"content":"public YCbCr(float Y, float Cb, float Cr)","parameters":[{"description":"The luma component of the color in the full range [0..255].","id":"Y","type":"System.Single"},{"description":"The blue-difference chroma component of the color in the full range [0..255].","id":"Cb","type":"System.Single"},{"description":"The red-difference chroma component of the color in the full range [0..255].","id":"Cr","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.YCbCr.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.YCbCr)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YCbCr(YCbCr)","nameWithType":"YCbCr.YCbCr(YCbCr)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public YCbCr(YCbCr other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.YCbCr"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.YCbCr.#ctor(Zigurous.ColorPro.YCbCr)"},{"children":null,"id":"#ctor(Color,Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YCbCr(Color, SignalEncoding)","nameWithType":"YCbCr.YCbCr(Color, SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":"\nCreates new Y′CbCr components from the given color.\n","syntax":{"content":"public YCbCr(Color color, SignalEncoding encoding = SignalEncoding.Rec709)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"},{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.YCbCr.#ctor(Color,Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"Equals(Zigurous.ColorPro.YCbCr)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(YCbCr)","nameWithType":"YCbCr.Equals(YCbCr)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(YCbCr other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.YCbCr"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YCbCr.Equals(Zigurous.ColorPro.YCbCr)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"YCbCr.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YCbCr.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"YCbCr.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YCbCr.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"YCbCr.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YCbCr.ToString"},{"children":null,"id":"ToColor(Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(SignalEncoding)","nameWithType":"YCbCr.ToColor(SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":"\nConverts the components to a color using the given signal encoding.\n","syntax":{"content":"public Color ToColor(SignalEncoding encoding = SignalEncoding.Rec709)","parameters":[{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YCbCr.ToColor(Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"ToYPbPr","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToYPbPr()","nameWithType":"YCbCr.ToYPbPr()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":"\nConverts the components to Y′PbPr components.\n","syntax":{"content":"public YPbPr ToYPbPr()","parameters":null,"return":{"description":"The Y′PbPr components.","type":"Zigurous.ColorPro.YPbPr"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YCbCr.ToYPbPr"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.YCbCr,Zigurous.ColorPro.YCbCr)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(YCbCr, YCbCr)","nameWithType":"YCbCr.Equality(YCbCr, YCbCr)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(YCbCr lhs, YCbCr rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.YCbCr"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.YCbCr"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YCbCr.op_Equality(Zigurous.ColorPro.YCbCr,Zigurous.ColorPro.YCbCr)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.YCbCr,Zigurous.ColorPro.YCbCr)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(YCbCr, YCbCr)","nameWithType":"YCbCr.Inequality(YCbCr, YCbCr)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(YCbCr lhs, YCbCr rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.YCbCr"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.YCbCr"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YCbCr.op_Inequality(Zigurous.ColorPro.YCbCr,Zigurous.ColorPro.YCbCr)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.YCbCr)~Zigurous.ColorPro.YPbPr","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(YCbCr to YPbPr)","nameWithType":"YCbCr.Explicit(YCbCr to YPbPr)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator YPbPr(YCbCr yCbCr)","parameters":[{"description":null,"id":"yCbCr","type":"Zigurous.ColorPro.YCbCr"}],"return":{"description":null,"type":"Zigurous.ColorPro.YPbPr"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YCbCr.op_Explicit(Zigurous.ColorPro.YCbCr)~Zigurous.ColorPro.YPbPr"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.YCbCr)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(YCbCr to Color)","nameWithType":"YCbCr.Explicit(YCbCr to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(YCbCr yCbCr)","parameters":[{"description":null,"id":"yCbCr","type":"Zigurous.ColorPro.YCbCr"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YCbCr.op_Explicit(Zigurous.ColorPro.YCbCr)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.YCbCr","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to YCbCr)","nameWithType":"YCbCr.Explicit(Color to YCbCr)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YCbCr","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator YCbCr(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.YCbCr"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YCbCr.op_Explicit(Color)~Zigurous.ColorPro.YCbCr"}]},{"items":[{"children":["Zigurous.ColorPro.YIQ.#ctor(Color,Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.YIQ.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.YIQ.#ctor(Zigurous.ColorPro.YIQ)","Zigurous.ColorPro.YIQ.Equals(System.Object)","Zigurous.ColorPro.YIQ.Equals(Zigurous.ColorPro.YIQ)","Zigurous.ColorPro.YIQ.GetHashCode","Zigurous.ColorPro.YIQ.I","Zigurous.ColorPro.YIQ.Item(System.Int32)","Zigurous.ColorPro.YIQ.op_Equality(Zigurous.ColorPro.YIQ,Zigurous.ColorPro.YIQ)","Zigurous.ColorPro.YIQ.op_Explicit(Color)~Zigurous.ColorPro.YIQ","Zigurous.ColorPro.YIQ.op_Explicit(Zigurous.ColorPro.YIQ)~Color","Zigurous.ColorPro.YIQ.op_Explicit(Zigurous.ColorPro.YIQ)~Zigurous.ColorPro.YUV","Zigurous.ColorPro.YIQ.op_Inequality(Zigurous.ColorPro.YIQ,Zigurous.ColorPro.YIQ)","Zigurous.ColorPro.YIQ.Q","Zigurous.ColorPro.YIQ.ToColor(Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.YIQ.ToString","Zigurous.ColorPro.YIQ.ToYUV","Zigurous.ColorPro.YIQ.Y"],"id":"YIQ","implements":["Global.IEquatable{Zigurous.ColorPro.YIQ}"],"inheritance":null,"inheritedMembers":null,"name":"YIQ","nameWithType":"YIQ","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe Y′IQ components of a color - luma (Y′) and chroma (I,Q).\n","syntax":{"content":"[Serializable]\npublic struct YIQ : IEquatable<YIQ>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.YIQ"},{"children":null,"id":"Y","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Y","nameWithType":"YIQ.Y","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":"\nThe luma component of the color in the range [0..1].\n","syntax":{"content":"public float Y","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.YIQ.Y"},{"children":null,"id":"I","implements":null,"inheritance":null,"inheritedMembers":null,"name":"I","nameWithType":"YIQ.I","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":"\nThe orange-blue chroma component of the color in the range [-0.596..0.596].\n","syntax":{"content":"public float I","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.YIQ.I"},{"children":null,"id":"Q","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Q","nameWithType":"YIQ.Q","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":"\nThe purple-green chroma component of the color in the range [-0.523..0.523].\n","syntax":{"content":"public float Q","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.YIQ.Q"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"YIQ.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.YIQ.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YIQ(Single, Single, Single)","nameWithType":"YIQ.YIQ(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":"\nCreates new Y′IQ components from the given values.\n","syntax":{"content":"public YIQ(float Y, float I, float Q)","parameters":[{"description":"The luma component of the color in the range [0..1].","id":"Y","type":"System.Single"},{"description":"The orange-blue chroma component of the color in the range [-0.596..0.596].","id":"I","type":"System.Single"},{"description":"The purple-green chroma component of the color in the range [-0.523..0.523].","id":"Q","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.YIQ.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.YIQ)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YIQ(YIQ)","nameWithType":"YIQ.YIQ(YIQ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public YIQ(YIQ other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.YIQ"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.YIQ.#ctor(Zigurous.ColorPro.YIQ)"},{"children":null,"id":"#ctor(Color,Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YIQ(Color, SignalEncoding)","nameWithType":"YIQ.YIQ(Color, SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":"\nCreates new Y′IQ components from the given color and signal encoding.\n","syntax":{"content":"public YIQ(Color color, SignalEncoding encoding = SignalEncoding.Rec709)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"},{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.YIQ.#ctor(Color,Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"Equals(Zigurous.ColorPro.YIQ)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(YIQ)","nameWithType":"YIQ.Equals(YIQ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(YIQ other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.YIQ"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YIQ.Equals(Zigurous.ColorPro.YIQ)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"YIQ.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YIQ.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"YIQ.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YIQ.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"YIQ.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YIQ.ToString"},{"children":null,"id":"ToColor(Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(SignalEncoding)","nameWithType":"YIQ.ToColor(SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":"\nConverts the components to a color using the given signal encoding.\n","syntax":{"content":"public Color ToColor(SignalEncoding encoding = SignalEncoding.Rec709)","parameters":[{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YIQ.ToColor(Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"ToYUV","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToYUV()","nameWithType":"YIQ.ToYUV()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":"\nConverts the components to Y′UV components.\n","syntax":{"content":"public YUV ToYUV()","parameters":null,"return":{"description":"The Y′UV components.","type":"Zigurous.ColorPro.YUV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YIQ.ToYUV"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.YIQ,Zigurous.ColorPro.YIQ)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(YIQ, YIQ)","nameWithType":"YIQ.Equality(YIQ, YIQ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(YIQ lhs, YIQ rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.YIQ"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.YIQ"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YIQ.op_Equality(Zigurous.ColorPro.YIQ,Zigurous.ColorPro.YIQ)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.YIQ,Zigurous.ColorPro.YIQ)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(YIQ, YIQ)","nameWithType":"YIQ.Inequality(YIQ, YIQ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(YIQ lhs, YIQ rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.YIQ"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.YIQ"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YIQ.op_Inequality(Zigurous.ColorPro.YIQ,Zigurous.ColorPro.YIQ)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.YIQ)~Zigurous.ColorPro.YUV","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(YIQ to YUV)","nameWithType":"YIQ.Explicit(YIQ to YUV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator YUV(YIQ yiq)","parameters":[{"description":null,"id":"yiq","type":"Zigurous.ColorPro.YIQ"}],"return":{"description":null,"type":"Zigurous.ColorPro.YUV"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YIQ.op_Explicit(Zigurous.ColorPro.YIQ)~Zigurous.ColorPro.YUV"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.YIQ)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(YIQ to Color)","nameWithType":"YIQ.Explicit(YIQ to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(YIQ yiq)","parameters":[{"description":null,"id":"yiq","type":"Zigurous.ColorPro.YIQ"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YIQ.op_Explicit(Zigurous.ColorPro.YIQ)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.YIQ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to YIQ)","nameWithType":"YIQ.Explicit(Color to YIQ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YIQ","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator YIQ(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.YIQ"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YIQ.op_Explicit(Color)~Zigurous.ColorPro.YIQ"}]},{"items":[{"children":["Zigurous.ColorPro.Accessibility","Zigurous.ColorPro.Accessibility.Requirement","Zigurous.ColorPro.Adjustment","Zigurous.ColorPro.ARGB","Zigurous.ColorPro.ARGB255","Zigurous.ColorPro.Arithmetic","Zigurous.ColorPro.Averaging","Zigurous.ColorPro.ChannelMixer","Zigurous.ColorPro.CIELAB","Zigurous.ColorPro.CIELCh_ab","Zigurous.ColorPro.CIELCh_uv","Zigurous.ColorPro.CIELUV","Zigurous.ColorPro.CIEUCS","Zigurous.ColorPro.CIEUVW","Zigurous.ColorPro.CIExyY","Zigurous.ColorPro.CIEXYZ","Zigurous.ColorPro.CMYK","Zigurous.ColorPro.ColorBlindness","Zigurous.ColorPro.ColorPalette","Zigurous.ColorPro.ColorVision","Zigurous.ColorPro.ColorWheelDivision","Zigurous.ColorPro.Components","Zigurous.ColorPro.Contrast","Zigurous.ColorPro.Conversion","Zigurous.ColorPro.Equality","Zigurous.ColorPro.Gradients","Zigurous.ColorPro.Harmonies","Zigurous.ColorPro.Hex","Zigurous.ColorPro.HSB","Zigurous.ColorPro.HSI","Zigurous.ColorPro.HSL","Zigurous.ColorPro.HSV","Zigurous.ColorPro.HunterLab","Zigurous.ColorPro.Illuminant","Zigurous.ColorPro.IlluminantExtensions","Zigurous.ColorPro.LMS","Zigurous.ColorPro.LumaCoefficients","Zigurous.ColorPro.Luminance","Zigurous.ColorPro.MaterialPalette","Zigurous.ColorPro.Mixing","Zigurous.ColorPro.MixingModel","Zigurous.ColorPro.MixingModelExtensions","Zigurous.ColorPro.Models","Zigurous.ColorPro.Random","Zigurous.ColorPro.RGB","Zigurous.ColorPro.RGB255","Zigurous.ColorPro.RGBA","Zigurous.ColorPro.RGBA255","Zigurous.ColorPro.SignalEncoding","Zigurous.ColorPro.SignalEncodingExtensions","Zigurous.ColorPro.StandardObserver","Zigurous.ColorPro.Temperature","Zigurous.ColorPro.Tristimulus","Zigurous.ColorPro.YCbCr","Zigurous.ColorPro.YIQ","Zigurous.ColorPro.YPbPr","Zigurous.ColorPro.YUV"],"id":"Zigurous.ColorPro","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Zigurous.ColorPro","nameWithType":"Zigurous.ColorPro","namespace":null,"parent":null,"remarks":null,"summary":null,"syntax":null,"type":"Namespace","uid":"Zigurous.ColorPro"}]},{"items":[{"children":["Zigurous.ColorPro.YPbPr.#ctor(Color,Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.YPbPr.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.YPbPr.#ctor(Zigurous.ColorPro.YPbPr)","Zigurous.ColorPro.YPbPr.Equals(System.Object)","Zigurous.ColorPro.YPbPr.Equals(Zigurous.ColorPro.YPbPr)","Zigurous.ColorPro.YPbPr.GetHashCode","Zigurous.ColorPro.YPbPr.Item(System.Int32)","Zigurous.ColorPro.YPbPr.op_Equality(Zigurous.ColorPro.YPbPr,Zigurous.ColorPro.YPbPr)","Zigurous.ColorPro.YPbPr.op_Explicit(Color)~Zigurous.ColorPro.YPbPr","Zigurous.ColorPro.YPbPr.op_Explicit(Zigurous.ColorPro.YPbPr)~Color","Zigurous.ColorPro.YPbPr.op_Explicit(Zigurous.ColorPro.YPbPr)~Zigurous.ColorPro.YCbCr","Zigurous.ColorPro.YPbPr.op_Inequality(Zigurous.ColorPro.YPbPr,Zigurous.ColorPro.YPbPr)","Zigurous.ColorPro.YPbPr.Pb","Zigurous.ColorPro.YPbPr.Pr","Zigurous.ColorPro.YPbPr.ToColor(Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.YPbPr.ToString","Zigurous.ColorPro.YPbPr.ToYCbCr","Zigurous.ColorPro.YPbPr.Y"],"id":"YPbPr","implements":["Global.IEquatable{Zigurous.ColorPro.YPbPr}"],"inheritance":null,"inheritedMembers":null,"name":"YPbPr","nameWithType":"YPbPr","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe Y′PbPr components of a color - luma (Y′) and chroma (Pb,Pr).\n","syntax":{"content":"[Serializable]\npublic struct YPbPr : IEquatable<YPbPr>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.YPbPr"},{"children":null,"id":"Y","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Y","nameWithType":"YPbPr.Y","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":"\nThe luma component of the color in the range [0..1].\n","syntax":{"content":"public float Y","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.YPbPr.Y"},{"children":null,"id":"Pb","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Pb","nameWithType":"YPbPr.Pb","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":"\nThe blue-difference chroma component of the color in the range [-0.5..0.5].\n","syntax":{"content":"public float Pb","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.YPbPr.Pb"},{"children":null,"id":"Pr","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Pr","nameWithType":"YPbPr.Pr","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":"\nThe red-difference chroma component of the color in the range [-0.5..0.5].\n","syntax":{"content":"public float Pr","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.YPbPr.Pr"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"YPbPr.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.YPbPr.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YPbPr(Single, Single, Single)","nameWithType":"YPbPr.YPbPr(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":"\nCreates new Y′PbPr components from the given values.\n","syntax":{"content":"public YPbPr(float Y, float Pb, float Pr)","parameters":[{"description":"The luma component of the color in the range [0..1].","id":"Y","type":"System.Single"},{"description":"The blue-difference chroma component of the color in the range [-0.5..0.5].","id":"Pb","type":"System.Single"},{"description":"The red-difference chroma component of the color in the range [-0.5..0.5].","id":"Pr","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.YPbPr.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.YPbPr)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YPbPr(YPbPr)","nameWithType":"YPbPr.YPbPr(YPbPr)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public YPbPr(YPbPr other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.YPbPr"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.YPbPr.#ctor(Zigurous.ColorPro.YPbPr)"},{"children":null,"id":"#ctor(Color,Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YPbPr(Color, SignalEncoding)","nameWithType":"YPbPr.YPbPr(Color, SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":"\nCreates new Y′PbPr components from the given color.\n","syntax":{"content":"public YPbPr(Color color, SignalEncoding encoding = SignalEncoding.Rec709)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"},{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.YPbPr.#ctor(Color,Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"Equals(Zigurous.ColorPro.YPbPr)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(YPbPr)","nameWithType":"YPbPr.Equals(YPbPr)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(YPbPr other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.YPbPr"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YPbPr.Equals(Zigurous.ColorPro.YPbPr)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"YPbPr.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YPbPr.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"YPbPr.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YPbPr.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"YPbPr.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YPbPr.ToString"},{"children":null,"id":"ToColor(Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(SignalEncoding)","nameWithType":"YPbPr.ToColor(SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":"\nConverts the components to a color using the given signal encoding.\n","syntax":{"content":"public Color ToColor(SignalEncoding encoding = SignalEncoding.Rec709)","parameters":[{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YPbPr.ToColor(Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"ToYCbCr","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToYCbCr()","nameWithType":"YPbPr.ToYCbCr()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":"\nConverts the components to Y′CbCr components.\n","syntax":{"content":"public YCbCr ToYCbCr()","parameters":null,"return":{"description":"The Y′CbCr components.","type":"Zigurous.ColorPro.YCbCr"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YPbPr.ToYCbCr"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.YPbPr,Zigurous.ColorPro.YPbPr)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(YPbPr, YPbPr)","nameWithType":"YPbPr.Equality(YPbPr, YPbPr)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(YPbPr lhs, YPbPr rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.YPbPr"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.YPbPr"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YPbPr.op_Equality(Zigurous.ColorPro.YPbPr,Zigurous.ColorPro.YPbPr)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.YPbPr,Zigurous.ColorPro.YPbPr)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(YPbPr, YPbPr)","nameWithType":"YPbPr.Inequality(YPbPr, YPbPr)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(YPbPr lhs, YPbPr rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.YPbPr"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.YPbPr"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YPbPr.op_Inequality(Zigurous.ColorPro.YPbPr,Zigurous.ColorPro.YPbPr)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.YPbPr)~Zigurous.ColorPro.YCbCr","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(YPbPr to YCbCr)","nameWithType":"YPbPr.Explicit(YPbPr to YCbCr)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator YCbCr(YPbPr yPbPr)","parameters":[{"description":null,"id":"yPbPr","type":"Zigurous.ColorPro.YPbPr"}],"return":{"description":null,"type":"Zigurous.ColorPro.YCbCr"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YPbPr.op_Explicit(Zigurous.ColorPro.YPbPr)~Zigurous.ColorPro.YCbCr"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.YPbPr)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(YPbPr to Color)","nameWithType":"YPbPr.Explicit(YPbPr to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(YPbPr yPbPr)","parameters":[{"description":null,"id":"yPbPr","type":"Zigurous.ColorPro.YPbPr"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YPbPr.op_Explicit(Zigurous.ColorPro.YPbPr)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.YPbPr","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to YPbPr)","nameWithType":"YPbPr.Explicit(Color to YPbPr)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YPbPr","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator YPbPr(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.YPbPr"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YPbPr.op_Explicit(Color)~Zigurous.ColorPro.YPbPr"}]},{"items":[{"children":["Zigurous.ColorPro.YUV.#ctor(Color,Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.YUV.#ctor(System.Single,System.Single,System.Single)","Zigurous.ColorPro.YUV.#ctor(Zigurous.ColorPro.YUV)","Zigurous.ColorPro.YUV.Equals(System.Object)","Zigurous.ColorPro.YUV.Equals(Zigurous.ColorPro.YUV)","Zigurous.ColorPro.YUV.GetHashCode","Zigurous.ColorPro.YUV.Item(System.Int32)","Zigurous.ColorPro.YUV.op_Equality(Zigurous.ColorPro.YUV,Zigurous.ColorPro.YUV)","Zigurous.ColorPro.YUV.op_Explicit(Color)~Zigurous.ColorPro.YUV","Zigurous.ColorPro.YUV.op_Explicit(Zigurous.ColorPro.YUV)~Color","Zigurous.ColorPro.YUV.op_Explicit(Zigurous.ColorPro.YUV)~Zigurous.ColorPro.YIQ","Zigurous.ColorPro.YUV.op_Inequality(Zigurous.ColorPro.YUV,Zigurous.ColorPro.YUV)","Zigurous.ColorPro.YUV.ToColor(Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.YUV.ToString","Zigurous.ColorPro.YUV.ToYIQ","Zigurous.ColorPro.YUV.U","Zigurous.ColorPro.YUV.V","Zigurous.ColorPro.YUV.Y"],"id":"YUV","implements":["Global.IEquatable{Zigurous.ColorPro.YUV}"],"inheritance":null,"inheritedMembers":null,"name":"YUV","nameWithType":"YUV","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nThe Y′UV components of a color - luma (Y′) and chroma (U,V).\n","syntax":{"content":"[Serializable]\npublic struct YUV : IEquatable<YUV>","parameters":null,"return":null,"typeParameters":null},"type":"Struct","uid":"Zigurous.ColorPro.YUV"},{"children":null,"id":"Y","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Y","nameWithType":"YUV.Y","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":"\nThe luma component of the color in the range [0..1].\n","syntax":{"content":"public float Y","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.YUV.Y"},{"children":null,"id":"U","implements":null,"inheritance":null,"inheritedMembers":null,"name":"U","nameWithType":"YUV.U","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":"\nThe blue-difference chroma component of the color in the range [-0.436..0.436].\n","syntax":{"content":"public float U","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.YUV.U"},{"children":null,"id":"V","implements":null,"inheritance":null,"inheritedMembers":null,"name":"V","nameWithType":"YUV.V","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":"\nThe red-difference chroma component of the color in the range [-0.615..0.615].\n","syntax":{"content":"public float V","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.ColorPro.YUV.V"},{"children":null,"id":"Item(System.Int32)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Item[Int32]","nameWithType":"YUV.Item[Int32]","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":"\nGets or sets the component at the specified index.\n","syntax":{"content":"public float this[int index] { get; set; }","parameters":[{"description":"The index of the component to get or set.","id":"index","type":"System.Int32"}],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.ColorPro.YUV.Item(System.Int32)"},{"children":null,"id":"#ctor(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YUV(Single, Single, Single)","nameWithType":"YUV.YUV(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":"\nCreates new Y′UV components from the given values.\n","syntax":{"content":"public YUV(float Y, float U, float V)","parameters":[{"description":"The luma component of the color in the range [0..1].","id":"Y","type":"System.Single"},{"description":"The blue-difference chroma component of the color in the range [-0.436..0.436].","id":"U","type":"System.Single"},{"description":"The red-difference chroma component of the color in the range [-0.615..0.615].","id":"V","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.YUV.#ctor(System.Single,System.Single,System.Single)"},{"children":null,"id":"#ctor(Zigurous.ColorPro.YUV)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YUV(YUV)","nameWithType":"YUV.YUV(YUV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":"\nCreates a new copy of the components.\n","syntax":{"content":"public YUV(YUV other)","parameters":[{"description":"The other components to copy.","id":"other","type":"Zigurous.ColorPro.YUV"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.YUV.#ctor(Zigurous.ColorPro.YUV)"},{"children":null,"id":"#ctor(Color,Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YUV(Color, SignalEncoding)","nameWithType":"YUV.YUV(Color, SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":"\nCreates new Y′UV components from the given color and signal encoding.\n","syntax":{"content":"public YUV(Color color, SignalEncoding encoding = SignalEncoding.Rec709)","parameters":[{"description":"The color to extract the components from.","id":"color","type":"Global.Color"},{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":null,"typeParameters":null},"type":"Constructor","uid":"Zigurous.ColorPro.YUV.#ctor(Color,Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"Equals(Zigurous.ColorPro.YUV)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(YUV)","nameWithType":"YUV.Equals(YUV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public bool Equals(YUV other)","parameters":[{"description":"The other components to compare to.","id":"other","type":"Zigurous.ColorPro.YUV"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YUV.Equals(Zigurous.ColorPro.YUV)"},{"children":null,"id":"Equals(System.Object)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equals(Object)","nameWithType":"YUV.Equals(Object)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":"\nDetermines if the components are equal to another.\n","syntax":{"content":"public override bool Equals(object other)","parameters":[{"description":"The other object to compare to.","id":"other","type":"System.Object"}],"return":{"description":"True if the components are equal, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YUV.Equals(System.Object)"},{"children":null,"id":"GetHashCode","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHashCode()","nameWithType":"YUV.GetHashCode()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":"\nReturns the hash code of the components.\n","syntax":{"content":"public override int GetHashCode()","parameters":null,"return":{"description":"The hash code of the components.","type":"System.Int32"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YUV.GetHashCode"},{"children":null,"id":"ToString","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToString()","nameWithType":"YUV.ToString()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":"\nConverts the components to a string.\n","syntax":{"content":"public override string ToString()","parameters":null,"return":{"description":"The string representation of the components.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YUV.ToString"},{"children":null,"id":"ToColor(Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToColor(SignalEncoding)","nameWithType":"YUV.ToColor(SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":"\nConverts the components to a color using the given signal encoding.\n","syntax":{"content":"public Color ToColor(SignalEncoding encoding = SignalEncoding.Rec709)","parameters":[{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The components converted to a color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YUV.ToColor(Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"ToYIQ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToYIQ()","nameWithType":"YUV.ToYIQ()","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":"\nConverts the components to Y′IQ components.\n","syntax":{"content":"public YIQ ToYIQ()","parameters":null,"return":{"description":"The Y′IQ components.","type":"Zigurous.ColorPro.YIQ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.YUV.ToYIQ"},{"children":null,"id":"op_Equality(Zigurous.ColorPro.YUV,Zigurous.ColorPro.YUV)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Equality(YUV, YUV)","nameWithType":"YUV.Equality(YUV, YUV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":null,"syntax":{"content":"public static bool operator ==(YUV lhs, YUV rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.YUV"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.YUV"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YUV.op_Equality(Zigurous.ColorPro.YUV,Zigurous.ColorPro.YUV)"},{"children":null,"id":"op_Inequality(Zigurous.ColorPro.YUV,Zigurous.ColorPro.YUV)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Inequality(YUV, YUV)","nameWithType":"YUV.Inequality(YUV, YUV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":null,"syntax":{"content":"public static bool operator !=(YUV lhs, YUV rhs)","parameters":[{"description":null,"id":"lhs","type":"Zigurous.ColorPro.YUV"},{"description":null,"id":"rhs","type":"Zigurous.ColorPro.YUV"}],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YUV.op_Inequality(Zigurous.ColorPro.YUV,Zigurous.ColorPro.YUV)"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.YUV)~Zigurous.ColorPro.YIQ","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(YUV to YIQ)","nameWithType":"YUV.Explicit(YUV to YIQ)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator YIQ(YUV yuv)","parameters":[{"description":null,"id":"yuv","type":"Zigurous.ColorPro.YUV"}],"return":{"description":null,"type":"Zigurous.ColorPro.YIQ"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YUV.op_Explicit(Zigurous.ColorPro.YUV)~Zigurous.ColorPro.YIQ"},{"children":null,"id":"op_Explicit(Zigurous.ColorPro.YUV)~Color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(YUV to Color)","nameWithType":"YUV.Explicit(YUV to Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator Color(YUV yuv)","parameters":[{"description":null,"id":"yuv","type":"Zigurous.ColorPro.YUV"}],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YUV.op_Explicit(Zigurous.ColorPro.YUV)~Color"},{"children":null,"id":"op_Explicit(Color)~Zigurous.ColorPro.YUV","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Explicit(Color to YUV)","nameWithType":"YUV.Explicit(Color to YUV)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.YUV","remarks":null,"summary":null,"syntax":{"content":"public static explicit operator YUV(Color color)","parameters":[{"description":null,"id":"color","type":"Global.Color"}],"return":{"description":null,"type":"Zigurous.ColorPro.YUV"},"typeParameters":null},"type":"Operator","uid":"Zigurous.ColorPro.YUV.op_Explicit(Color)~Zigurous.ColorPro.YUV"}]},{"items":[{"children":["Zigurous.ColorPro.Contrast.ContrastRatio(Color,Color)","Zigurous.ColorPro.Contrast.ContrastRatioString(Color,Color)","Zigurous.ColorPro.Contrast.HigherContrastingColor(Color,Color,Color)","Zigurous.ColorPro.Contrast.HighestContrastingColor(Color,Color[])","Zigurous.ColorPro.Contrast.LowerContrastingColor(Color,Color,Color)","Zigurous.ColorPro.Contrast.LowestContrastingColor(Color,Color[])"],"id":"Contrast","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Contrast","nameWithType":"Contrast","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nFunctions for calculating contrast between colors.\n","syntax":{"content":"public static class Contrast","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.Contrast"},{"children":null,"id":"ContrastRatio(Color,Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ContrastRatio(Color, Color)","nameWithType":"Contrast.ContrastRatio(Color, Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Contrast","remarks":null,"summary":"\nReturns the contrast ratio of the color to another color.\n","syntax":{"content":"public static float ContrastRatio(this Color color, Color other)","parameters":[{"description":"The first color to compare.","id":"color","type":"Global.Color"},{"description":"The second color to compare.","id":"other","type":"Global.Color"}],"return":{"description":"The contrast ratio of the color to another color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Contrast.ContrastRatio(Color,Color)"},{"children":null,"id":"ContrastRatioString(Color,Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ContrastRatioString(Color, Color)","nameWithType":"Contrast.ContrastRatioString(Color, Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Contrast","remarks":null,"summary":"\nReturns the contrast ratio of the color to another color as a string.\n","syntax":{"content":"public static string ContrastRatioString(this Color color, Color other)","parameters":[{"description":"The first color to compare.","id":"color","type":"Global.Color"},{"description":"The second color to compare.","id":"other","type":"Global.Color"}],"return":{"description":"The contrast ratio of the color to another color as a string.","type":"System.String"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Contrast.ContrastRatioString(Color,Color)"},{"children":null,"id":"HigherContrastingColor(Color,Color,Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HigherContrastingColor(Color, Color, Color)","nameWithType":"Contrast.HigherContrastingColor(Color, Color, Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Contrast","remarks":null,"summary":"\nReturns the color that has the higher contrast ratio to the current color.\n","syntax":{"content":"public static Color HigherContrastingColor(this Color color, Color a, Color b)","parameters":[{"description":"The color to compare to.","id":"color","type":"Global.Color"},{"description":"The first color to test.","id":"a","type":"Global.Color"},{"description":"The second color to test.","id":"b","type":"Global.Color"}],"return":{"description":"The color that has the higher contrast ratio to the current color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Contrast.HigherContrastingColor(Color,Color,Color)"},{"children":null,"id":"HighestContrastingColor(Color,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HighestContrastingColor(Color, Color[])","nameWithType":"Contrast.HighestContrastingColor(Color, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Contrast","remarks":null,"summary":"\nReturns the color that has the highest contrast ratio to the current color.\n","syntax":{"content":"public static Color HighestContrastingColor(this Color color, params Color[] colors)","parameters":[{"description":"The color to compare to.","id":"color","type":"Global.Color"},{"description":"The colors to test.","id":"colors","type":"Global.Color[]"}],"return":{"description":"The color that has the highest contrast ratio to the current color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Contrast.HighestContrastingColor(Color,Color[])"},{"children":null,"id":"LowerContrastingColor(Color,Color,Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"LowerContrastingColor(Color, Color, Color)","nameWithType":"Contrast.LowerContrastingColor(Color, Color, Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Contrast","remarks":null,"summary":"\nReturns the color that has the lower contrast ratio to the current color.\n","syntax":{"content":"public static Color LowerContrastingColor(this Color color, Color a, Color b)","parameters":[{"description":"The color to compare to.","id":"color","type":"Global.Color"},{"description":"The first color to test.","id":"a","type":"Global.Color"},{"description":"The second color to test.","id":"b","type":"Global.Color"}],"return":{"description":"The color that has the lower contrast ratio to the current color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Contrast.LowerContrastingColor(Color,Color,Color)"},{"children":null,"id":"LowestContrastingColor(Color,Color[])","implements":null,"inheritance":null,"inheritedMembers":null,"name":"LowestContrastingColor(Color, Color[])","nameWithType":"Contrast.LowestContrastingColor(Color, Color[])","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Contrast","remarks":null,"summary":"\nReturns the color that has the lowest contrast ratio to the current color.\n","syntax":{"content":"public static Color LowestContrastingColor(this Color color, params Color[] colors)","parameters":[{"description":"The color to compare to.","id":"color","type":"Global.Color"},{"description":"The colors to test.","id":"colors","type":"Global.Color[]"}],"return":{"description":"The color that has the lowest contrast ratio to the current color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Contrast.LowestContrastingColor(Color,Color[])"}]},{"items":[{"children":["Zigurous.ColorPro.Components.Copy(Color,System.Boolean)","Zigurous.ColorPro.Components.Copy(Color@,Color,System.Boolean)","Zigurous.ColorPro.Components.GetAlpha(Color)","Zigurous.ColorPro.Components.GetBlack(Color)","Zigurous.ColorPro.Components.GetBlue(Color)","Zigurous.ColorPro.Components.GetBrightness(Color)","Zigurous.ColorPro.Components.GetCyan(Color)","Zigurous.ColorPro.Components.GetGreen(Color)","Zigurous.ColorPro.Components.GetHue(Color)","Zigurous.ColorPro.Components.GetLightness(Color)","Zigurous.ColorPro.Components.GetMagenta(Color)","Zigurous.ColorPro.Components.GetRed(Color)","Zigurous.ColorPro.Components.GetSaturationL(Color)","Zigurous.ColorPro.Components.GetSaturationV(Color)","Zigurous.ColorPro.Components.GetValue(Color)","Zigurous.ColorPro.Components.GetYellow(Color)","Zigurous.ColorPro.Components.SetAlpha(Color@,System.Single)","Zigurous.ColorPro.Components.SetBlack(Color@,System.Single)","Zigurous.ColorPro.Components.SetBlue(Color@,System.Single)","Zigurous.ColorPro.Components.SetBrightness(Color@,System.Single)","Zigurous.ColorPro.Components.SetCyan(Color@,System.Single)","Zigurous.ColorPro.Components.SetGreen(Color@,System.Single)","Zigurous.ColorPro.Components.SetHue(Color@,System.Single)","Zigurous.ColorPro.Components.SetLightness(Color@,System.Single)","Zigurous.ColorPro.Components.SetMagenta(Color@,System.Single)","Zigurous.ColorPro.Components.SetRed(Color@,System.Single)","Zigurous.ColorPro.Components.SetSaturationL(Color@,System.Single)","Zigurous.ColorPro.Components.SetSaturationV(Color@,System.Single)","Zigurous.ColorPro.Components.SetValue(Color@,System.Single)","Zigurous.ColorPro.Components.SetYellow(Color@,System.Single)","Zigurous.ColorPro.Components.WithAlpha(Color,System.Single)","Zigurous.ColorPro.Components.WithBlack(Color,System.Single)","Zigurous.ColorPro.Components.WithBlue(Color,System.Single)","Zigurous.ColorPro.Components.WithBrightness(Color,System.Single)","Zigurous.ColorPro.Components.WithCyan(Color,System.Single)","Zigurous.ColorPro.Components.WithGreen(Color,System.Single)","Zigurous.ColorPro.Components.WithHue(Color,System.Single)","Zigurous.ColorPro.Components.WithLightness(Color,System.Single)","Zigurous.ColorPro.Components.WithMagenta(Color,System.Single)","Zigurous.ColorPro.Components.WithRed(Color,System.Single)","Zigurous.ColorPro.Components.WithSaturationL(Color,System.Single)","Zigurous.ColorPro.Components.WithSaturationV(Color,System.Single)","Zigurous.ColorPro.Components.WithValue(Color,System.Single)","Zigurous.ColorPro.Components.WithYellow(Color,System.Single)"],"id":"Components","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Components","nameWithType":"Components","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nFunctions for getting and setting color component values.\n","syntax":{"content":"public static class Components","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.Components"},{"children":null,"id":"Copy(Color,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Copy(Color, Boolean)","nameWithType":"Components.Copy(Color, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns a copy of the color.\n","syntax":{"content":"public static Color Copy(this Color color, bool copyAlpha = true)","parameters":[{"description":"The color to copy.","id":"color","type":"Global.Color"},{"description":"Whether to copy the alpha component.","id":"copyAlpha","type":"System.Boolean"}],"return":{"description":"A copy of the color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.Copy(Color,System.Boolean)"},{"children":null,"id":"Copy(Color@,Color,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Copy(ref Color, Color, Boolean)","nameWithType":"Components.Copy(ref Color, Color, Boolean)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nSets the components of the color to match another color.\n","syntax":{"content":"public static void Copy(this ref Color color, Color other, bool copyAlpha = true)","parameters":[{"description":"The color to set the components of.","id":"color","type":"Global.Color"},{"description":"The color to copy the components from.","id":"other","type":"Global.Color"},{"description":"Whether to copy the alpha component.","id":"copyAlpha","type":"System.Boolean"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.Copy(Color@,Color,System.Boolean)"},{"children":null,"id":"GetRed(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetRed(Color)","nameWithType":"Components.GetRed(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns the red component of the color.\n","syntax":{"content":"public static float GetRed(this Color color)","parameters":[{"description":"The color to get the component from.","id":"color","type":"Global.Color"}],"return":{"description":"The red component of the color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.GetRed(Color)"},{"children":null,"id":"GetGreen(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetGreen(Color)","nameWithType":"Components.GetGreen(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns the green component of the color.\n","syntax":{"content":"public static float GetGreen(this Color color)","parameters":[{"description":"The color to get the component from.","id":"color","type":"Global.Color"}],"return":{"description":"The green component of the color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.GetGreen(Color)"},{"children":null,"id":"GetBlue(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetBlue(Color)","nameWithType":"Components.GetBlue(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns the blue component of the color.\n","syntax":{"content":"public static float GetBlue(this Color color)","parameters":[{"description":"The color to get the component from.","id":"color","type":"Global.Color"}],"return":{"description":"The blue component of the color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.GetBlue(Color)"},{"children":null,"id":"GetAlpha(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetAlpha(Color)","nameWithType":"Components.GetAlpha(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns the alpha component of the color.\n","syntax":{"content":"public static float GetAlpha(this Color color)","parameters":[{"description":"The color to get the component from.","id":"color","type":"Global.Color"}],"return":{"description":"The alpha component of the color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.GetAlpha(Color)"},{"children":null,"id":"GetCyan(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetCyan(Color)","nameWithType":"Components.GetCyan(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns the cyan component of the color using the CMYK color model.\n","syntax":{"content":"public static float GetCyan(this Color color)","parameters":[{"description":"The color to get the component from.","id":"color","type":"Global.Color"}],"return":{"description":"The cyan component of the color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.GetCyan(Color)"},{"children":null,"id":"GetMagenta(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetMagenta(Color)","nameWithType":"Components.GetMagenta(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns the magenta component of the color using the CMYK color model.\n","syntax":{"content":"public static float GetMagenta(this Color color)","parameters":[{"description":"The color to get the component from.","id":"color","type":"Global.Color"}],"return":{"description":"The magenta component of the color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.GetMagenta(Color)"},{"children":null,"id":"GetYellow(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetYellow(Color)","nameWithType":"Components.GetYellow(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns the yellow component of the color using the CMYK color model.\n","syntax":{"content":"public static float GetYellow(this Color color)","parameters":[{"description":"The color to get the component from.","id":"color","type":"Global.Color"}],"return":{"description":"The yellow component of the color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.GetYellow(Color)"},{"children":null,"id":"GetBlack(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetBlack(Color)","nameWithType":"Components.GetBlack(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns the black component of the color using the CMYK color model.\n","syntax":{"content":"public static float GetBlack(this Color color)","parameters":[{"description":"The color to get the component from.","id":"color","type":"Global.Color"}],"return":{"description":"The black component of the color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.GetBlack(Color)"},{"children":null,"id":"GetHue(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetHue(Color)","nameWithType":"Components.GetHue(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns the hue component of the color.\n","syntax":{"content":"public static float GetHue(this Color color)","parameters":[{"description":"The color to get the component from.","id":"color","type":"Global.Color"}],"return":{"description":"The hue component of the color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.GetHue(Color)"},{"children":null,"id":"GetSaturationV(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetSaturationV(Color)","nameWithType":"Components.GetSaturationV(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns the saturation component of the color using the HSV color model.\n","syntax":{"content":"public static float GetSaturationV(this Color color)","parameters":[{"description":"The color to get the component from.","id":"color","type":"Global.Color"}],"return":{"description":"The saturation component of the color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.GetSaturationV(Color)"},{"children":null,"id":"GetSaturationL(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetSaturationL(Color)","nameWithType":"Components.GetSaturationL(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns the saturation component of the color using the HSL color model.\n","syntax":{"content":"public static float GetSaturationL(this Color color)","parameters":[{"description":"The color to get the component from.","id":"color","type":"Global.Color"}],"return":{"description":"The saturation component of the color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.GetSaturationL(Color)"},{"children":null,"id":"GetValue(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetValue(Color)","nameWithType":"Components.GetValue(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns the &quot;value&quot; component of the color using the HSV color model.\n","syntax":{"content":"public static float GetValue(this Color color)","parameters":[{"description":"The color to get the component from.","id":"color","type":"Global.Color"}],"return":{"description":"The &quot;value&quot; component of the color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.GetValue(Color)"},{"children":null,"id":"GetBrightness(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetBrightness(Color)","nameWithType":"Components.GetBrightness(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns the brightness component of the color using the HSB color model.\n","syntax":{"content":"public static float GetBrightness(this Color color)","parameters":[{"description":"The color to get the component from.","id":"color","type":"Global.Color"}],"return":{"description":"The brightness component of the color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.GetBrightness(Color)"},{"children":null,"id":"GetLightness(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"GetLightness(Color)","nameWithType":"Components.GetLightness(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns the lightness component of the color using the HSL color model.\n","syntax":{"content":"public static float GetLightness(this Color color)","parameters":[{"description":"The color to get the component from.","id":"color","type":"Global.Color"}],"return":{"description":"The lightness component of the color.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.GetLightness(Color)"},{"children":null,"id":"SetRed(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetRed(ref Color, Single)","nameWithType":"Components.SetRed(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nSets the red component of the color to the given value.\n","syntax":{"content":"public static void SetRed(this ref Color color, float red)","parameters":[{"description":"The color to set the component on.","id":"color","type":"Global.Color"},{"description":"The value to set the component to.","id":"red","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.SetRed(Color@,System.Single)"},{"children":null,"id":"SetGreen(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetGreen(ref Color, Single)","nameWithType":"Components.SetGreen(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nSets the green component of the color to the given value.\n","syntax":{"content":"public static void SetGreen(this ref Color color, float green)","parameters":[{"description":"The color to set the component on.","id":"color","type":"Global.Color"},{"description":"The value to set the component to.","id":"green","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.SetGreen(Color@,System.Single)"},{"children":null,"id":"SetBlue(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetBlue(ref Color, Single)","nameWithType":"Components.SetBlue(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nSets the blue component of the color to the given value.\n","syntax":{"content":"public static void SetBlue(this ref Color color, float blue)","parameters":[{"description":"The color to set the component on.","id":"color","type":"Global.Color"},{"description":"The value to set the component to.","id":"blue","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.SetBlue(Color@,System.Single)"},{"children":null,"id":"SetAlpha(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetAlpha(ref Color, Single)","nameWithType":"Components.SetAlpha(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nSets the alpha component of the color to the given value.\n","syntax":{"content":"public static void SetAlpha(this ref Color color, float alpha)","parameters":[{"description":"The color to set the component on.","id":"color","type":"Global.Color"},{"description":"The value to set the component to.","id":"alpha","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.SetAlpha(Color@,System.Single)"},{"children":null,"id":"SetCyan(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetCyan(ref Color, Single)","nameWithType":"Components.SetCyan(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nSets the cyan component of the color to the given value using the\nCMYK color model.\n","syntax":{"content":"public static void SetCyan(this ref Color color, float cyan)","parameters":[{"description":"The color to set the component on.","id":"color","type":"Global.Color"},{"description":"The value to set the component to.","id":"cyan","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.SetCyan(Color@,System.Single)"},{"children":null,"id":"SetMagenta(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetMagenta(ref Color, Single)","nameWithType":"Components.SetMagenta(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nSets the magenta component of the color to the given value using the\nCMYK color model.\n","syntax":{"content":"public static void SetMagenta(this ref Color color, float magenta)","parameters":[{"description":"The color to set the component on.","id":"color","type":"Global.Color"},{"description":"The value to set the component to.","id":"magenta","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.SetMagenta(Color@,System.Single)"},{"children":null,"id":"SetYellow(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetYellow(ref Color, Single)","nameWithType":"Components.SetYellow(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nSets the yellow component of the color to the given value using the\nCMYK color model.\n","syntax":{"content":"public static void SetYellow(this ref Color color, float yellow)","parameters":[{"description":"The color to set the component on.","id":"color","type":"Global.Color"},{"description":"The value to set the component to.","id":"yellow","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.SetYellow(Color@,System.Single)"},{"children":null,"id":"SetBlack(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetBlack(ref Color, Single)","nameWithType":"Components.SetBlack(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nSets the black component of the color to the given value using the\nCMYK color model.\n","syntax":{"content":"public static void SetBlack(this ref Color color, float black)","parameters":[{"description":"The color to set the component on.","id":"color","type":"Global.Color"},{"description":"The value to set the component to.","id":"black","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.SetBlack(Color@,System.Single)"},{"children":null,"id":"SetHue(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetHue(ref Color, Single)","nameWithType":"Components.SetHue(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nSets the hue component of the color to the given value.\n","syntax":{"content":"public static void SetHue(this ref Color color, float hue)","parameters":[{"description":"The color to set the component on.","id":"color","type":"Global.Color"},{"description":"The value to set the component to.","id":"hue","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.SetHue(Color@,System.Single)"},{"children":null,"id":"SetSaturationV(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetSaturationV(ref Color, Single)","nameWithType":"Components.SetSaturationV(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nSets the saturation component of the color to the given value using\nthe HSV color model.\n","syntax":{"content":"public static void SetSaturationV(this ref Color color, float saturation)","parameters":[{"description":"The color to set the component on.","id":"color","type":"Global.Color"},{"description":"The value to set the component to.","id":"saturation","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.SetSaturationV(Color@,System.Single)"},{"children":null,"id":"SetSaturationL(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetSaturationL(ref Color, Single)","nameWithType":"Components.SetSaturationL(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nSets the saturation component of the color to the given value using\nthe HSL color model.\n","syntax":{"content":"public static void SetSaturationL(this ref Color color, float saturation)","parameters":[{"description":"The color to set the component on.","id":"color","type":"Global.Color"},{"description":"The value to set the component to.","id":"saturation","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.SetSaturationL(Color@,System.Single)"},{"children":null,"id":"SetValue(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetValue(ref Color, Single)","nameWithType":"Components.SetValue(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nSets the &quot;value&quot; component of the color to the given value using the\nHSV color model.\n","syntax":{"content":"public static void SetValue(this ref Color color, float value)","parameters":[{"description":"The color to set the component on.","id":"color","type":"Global.Color"},{"description":"The value to set the component to.","id":"value","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.SetValue(Color@,System.Single)"},{"children":null,"id":"SetBrightness(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetBrightness(ref Color, Single)","nameWithType":"Components.SetBrightness(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nSets the brightness component of the color to the given value using\nthe HSB color model.\n","syntax":{"content":"public static void SetBrightness(this ref Color color, float brightness)","parameters":[{"description":"The color to set the component on.","id":"color","type":"Global.Color"},{"description":"The value to set the component to.","id":"brightness","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.SetBrightness(Color@,System.Single)"},{"children":null,"id":"SetLightness(Color@,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetLightness(ref Color, Single)","nameWithType":"Components.SetLightness(ref Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nSets the lightness component of the color to the given value using\nthe HSL color model.\n","syntax":{"content":"public static void SetLightness(this ref Color color, float lightness)","parameters":[{"description":"The color to set the component on.","id":"color","type":"Global.Color"},{"description":"The value to set the component to.","id":"lightness","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.SetLightness(Color@,System.Single)"},{"children":null,"id":"WithRed(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"WithRed(Color, Single)","nameWithType":"Components.WithRed(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns a copy of the color with a new red component value.\n","syntax":{"content":"public static Color WithRed(this Color color, float red)","parameters":[{"description":"The color to copy.","id":"color","type":"Global.Color"},{"description":"The new component value.","id":"red","type":"System.Single"}],"return":{"description":"A copy of the color with the new red component value.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.WithRed(Color,System.Single)"},{"children":null,"id":"WithGreen(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"WithGreen(Color, Single)","nameWithType":"Components.WithGreen(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns a copy of the color with a new green component value.\n","syntax":{"content":"public static Color WithGreen(this Color color, float green)","parameters":[{"description":"The color to copy.","id":"color","type":"Global.Color"},{"description":"The new component value.","id":"green","type":"System.Single"}],"return":{"description":"A copy of the color with the new green component value.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.WithGreen(Color,System.Single)"},{"children":null,"id":"WithBlue(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"WithBlue(Color, Single)","nameWithType":"Components.WithBlue(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns a copy of the color with a new blue component value.\n","syntax":{"content":"public static Color WithBlue(this Color color, float blue)","parameters":[{"description":"The color to copy.","id":"color","type":"Global.Color"},{"description":"The new component value.","id":"blue","type":"System.Single"}],"return":{"description":"A copy of the color with the new blue component value.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.WithBlue(Color,System.Single)"},{"children":null,"id":"WithAlpha(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"WithAlpha(Color, Single)","nameWithType":"Components.WithAlpha(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns a copy of the color with a new alpha component value.\n","syntax":{"content":"public static Color WithAlpha(this Color color, float alpha)","parameters":[{"description":"The color to copy.","id":"color","type":"Global.Color"},{"description":"The new component value.","id":"alpha","type":"System.Single"}],"return":{"description":"A copy of the color with the new alpha component value.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.WithAlpha(Color,System.Single)"},{"children":null,"id":"WithCyan(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"WithCyan(Color, Single)","nameWithType":"Components.WithCyan(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns a copy of the color with a new cyan component value using\nthe CMYK color model.\n","syntax":{"content":"public static Color WithCyan(this Color color, float cyan)","parameters":[{"description":"The color to copy.","id":"color","type":"Global.Color"},{"description":"The new component value.","id":"cyan","type":"System.Single"}],"return":{"description":"A copy of the color with the new cyan component value.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.WithCyan(Color,System.Single)"},{"children":null,"id":"WithMagenta(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"WithMagenta(Color, Single)","nameWithType":"Components.WithMagenta(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns a copy of the color with a new magenta component value using\nthe CMYK color model.\n","syntax":{"content":"public static Color WithMagenta(this Color color, float magenta)","parameters":[{"description":"The color to copy.","id":"color","type":"Global.Color"},{"description":"The new component value.","id":"magenta","type":"System.Single"}],"return":{"description":"A copy of the color with the new magenta component value.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.WithMagenta(Color,System.Single)"},{"children":null,"id":"WithYellow(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"WithYellow(Color, Single)","nameWithType":"Components.WithYellow(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns a copy of the color with a new yellow component value using\nthe CMYK color model.\n","syntax":{"content":"public static Color WithYellow(this Color color, float yellow)","parameters":[{"description":"The color to copy.","id":"color","type":"Global.Color"},{"description":"The new component value.","id":"yellow","type":"System.Single"}],"return":{"description":"A copy of the color with the new yellow component value.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.WithYellow(Color,System.Single)"},{"children":null,"id":"WithBlack(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"WithBlack(Color, Single)","nameWithType":"Components.WithBlack(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns a copy of the color with a new black component value using\nthe CMYK color model.\n","syntax":{"content":"public static Color WithBlack(this Color color, float black)","parameters":[{"description":"The color to copy.","id":"color","type":"Global.Color"},{"description":"The new component value.","id":"black","type":"System.Single"}],"return":{"description":"A copy of the color with the new black component value.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.WithBlack(Color,System.Single)"},{"children":null,"id":"WithHue(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"WithHue(Color, Single)","nameWithType":"Components.WithHue(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns a copy of the color with a new hue component value.\n","syntax":{"content":"public static Color WithHue(this Color color, float hue)","parameters":[{"description":"The color to copy.","id":"color","type":"Global.Color"},{"description":"The new component value.","id":"hue","type":"System.Single"}],"return":{"description":"A copy of the color with the new hue component value.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.WithHue(Color,System.Single)"},{"children":null,"id":"WithSaturationV(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"WithSaturationV(Color, Single)","nameWithType":"Components.WithSaturationV(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns a copy of the color with a new saturation component value\nusing the HSV color model.\n","syntax":{"content":"public static Color WithSaturationV(this Color color, float saturation)","parameters":[{"description":"The color to copy.","id":"color","type":"Global.Color"},{"description":"The new component value.","id":"saturation","type":"System.Single"}],"return":{"description":"A copy of the color with the new saturation component value.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.WithSaturationV(Color,System.Single)"},{"children":null,"id":"WithSaturationL(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"WithSaturationL(Color, Single)","nameWithType":"Components.WithSaturationL(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns a copy of the color with a new saturation component value\nusing the HSL color model.\n","syntax":{"content":"public static Color WithSaturationL(this Color color, float saturation)","parameters":[{"description":"The color to copy.","id":"color","type":"Global.Color"},{"description":"The new component value.","id":"saturation","type":"System.Single"}],"return":{"description":"A copy of the color with the new saturation component value.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.WithSaturationL(Color,System.Single)"},{"children":null,"id":"WithValue(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"WithValue(Color, Single)","nameWithType":"Components.WithValue(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns a copy of the color with a new &quot;value&quot; component value using\nthe HSV color model.\n","syntax":{"content":"public static Color WithValue(this Color color, float value)","parameters":[{"description":"The color to copy.","id":"color","type":"Global.Color"},{"description":"The new component value.","id":"value","type":"System.Single"}],"return":{"description":"A copy of the color with the new &quot;value&quot; component value.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.WithValue(Color,System.Single)"},{"children":null,"id":"WithBrightness(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"WithBrightness(Color, Single)","nameWithType":"Components.WithBrightness(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns a copy of the color with a new brightness component value\nusing the HSB color model.\n","syntax":{"content":"public static Color WithBrightness(this Color color, float brightness)","parameters":[{"description":"The color to copy.","id":"color","type":"Global.Color"},{"description":"The new component value.","id":"brightness","type":"System.Single"}],"return":{"description":"A copy of the color with the new brightness component value.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.WithBrightness(Color,System.Single)"},{"children":null,"id":"WithLightness(Color,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"WithLightness(Color, Single)","nameWithType":"Components.WithLightness(Color, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Components","remarks":null,"summary":"\nReturns a copy of the color with a new lightness component value\nusing the HSL color model.\n","syntax":{"content":"public static Color WithLightness(this Color color, float lightness)","parameters":[{"description":"The color to copy.","id":"color","type":"Global.Color"},{"description":"The new component value.","id":"lightness","type":"System.Single"}],"return":{"description":"A copy of the color with the new lightness component value.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Components.WithLightness(Color,System.Single)"}]},{"items":[{"children":["Zigurous.ColorPro.Models.ToARGB(Color)","Zigurous.ColorPro.Models.ToARGB255(Color)","Zigurous.ColorPro.Models.ToCMYK(Color)","Zigurous.ColorPro.Models.ToHSB(Color)","Zigurous.ColorPro.Models.ToHSI(Color)","Zigurous.ColorPro.Models.ToHSL(Color)","Zigurous.ColorPro.Models.ToHSV(Color)","Zigurous.ColorPro.Models.ToHunterLab(Color)","Zigurous.ColorPro.Models.ToHunterLab(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.Models.ToHunterLab(Color,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Models.ToLab(Color)","Zigurous.ColorPro.Models.ToLab(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.Models.ToLab(Color,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Models.ToLCh_ab(Color)","Zigurous.ColorPro.Models.ToLCh_ab(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.Models.ToLCh_ab(Color,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Models.ToLCh_uv(Color)","Zigurous.ColorPro.Models.ToLCh_uv(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.Models.ToLCh_uv(Color,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Models.ToLMS(Color)","Zigurous.ColorPro.Models.ToLuv(Color)","Zigurous.ColorPro.Models.ToLuv(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.Models.ToLuv(Color,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Models.ToRGB(Color)","Zigurous.ColorPro.Models.ToRGB255(Color)","Zigurous.ColorPro.Models.ToRGBA(Color)","Zigurous.ColorPro.Models.ToRGBA255(Color)","Zigurous.ColorPro.Models.ToUCS(Color)","Zigurous.ColorPro.Models.ToUVW(Color)","Zigurous.ColorPro.Models.ToUVW(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","Zigurous.ColorPro.Models.ToUVW(Color,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Models.ToxyY(Color)","Zigurous.ColorPro.Models.ToXYZ(Color)","Zigurous.ColorPro.Models.ToYCbCr(Color)","Zigurous.ColorPro.Models.ToYCbCr(Color,Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.Models.ToYIQ(Color)","Zigurous.ColorPro.Models.ToYIQ(Color,Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.Models.ToYPbPr(Color)","Zigurous.ColorPro.Models.ToYPbPr(Color,Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.Models.ToYUV(Color)","Zigurous.ColorPro.Models.ToYUV(Color,Zigurous.ColorPro.SignalEncoding)"],"id":"Models","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Models","nameWithType":"Models","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nExtension methods for converting colors to different color models.\n","syntax":{"content":"public static class Models","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.Models"},{"children":null,"id":"ToARGB(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToARGB(Color)","nameWithType":"Models.ToARGB(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into ARGB (alpha, red, green, blue) components in\nthe range [0..1].\n","syntax":{"content":"public static ARGB ToARGB(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The ARGB components of the color.","type":"Zigurous.ColorPro.ARGB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToARGB(Color)"},{"children":null,"id":"ToARGB255(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToARGB255(Color)","nameWithType":"Models.ToARGB255(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into ARGB (alpha, red, green, blue) components in\nthe range [0..255].\n","syntax":{"content":"public static ARGB255 ToARGB255(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The ARGB components of the color.","type":"Zigurous.ColorPro.ARGB255"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToARGB255(Color)"},{"children":null,"id":"ToLab(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLab(Color)","nameWithType":"Models.ToLab(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE LAB components.\n","syntax":{"content":"public static CIELAB ToLab(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The CIE LAB components of the color.","type":"Zigurous.ColorPro.CIELAB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToLab(Color)"},{"children":null,"id":"ToLab(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLab(Color, Illuminant, StandardObserver)","nameWithType":"Models.ToLab(Color, Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE LAB components using the given illuminant\nand standard observer.\n","syntax":{"content":"public static CIELAB ToLab(this Color color, Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"},{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The CIE LAB components of the color.","type":"Zigurous.ColorPro.CIELAB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToLab(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToLab(Color,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLab(Color, Tristimulus)","nameWithType":"Models.ToLab(Color, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE LAB components using the given white point.\n","syntax":{"content":"public static CIELAB ToLab(this Color color, Tristimulus whitePoint)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"},{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The CIE LAB components of the color.","type":"Zigurous.ColorPro.CIELAB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToLab(Color,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToLuv(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLuv(Color)","nameWithType":"Models.ToLuv(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE LUV components.\n","syntax":{"content":"public static CIELUV ToLuv(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The CIE LUV components of the color.","type":"Zigurous.ColorPro.CIELUV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToLuv(Color)"},{"children":null,"id":"ToLuv(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLuv(Color, Illuminant, StandardObserver)","nameWithType":"Models.ToLuv(Color, Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE LUV components using the given illuminant\nand standard observer.\n","syntax":{"content":"public static CIELUV ToLuv(this Color color, Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"},{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The CIE LUV components of the color.","type":"Zigurous.ColorPro.CIELUV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToLuv(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToLuv(Color,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLuv(Color, Tristimulus)","nameWithType":"Models.ToLuv(Color, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE LUV components using the given white point.\n","syntax":{"content":"public static CIELUV ToLuv(this Color color, Tristimulus whitePoint)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"},{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The CIE LUV components of the color.","type":"Zigurous.ColorPro.CIELUV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToLuv(Color,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToLCh_ab(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLCh_ab(Color)","nameWithType":"Models.ToLCh_ab(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE LCh(ab) components.\n","syntax":{"content":"public static CIELCh_ab ToLCh_ab(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The CIE LCh(ab) components of the color.","type":"Zigurous.ColorPro.CIELCh_ab"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToLCh_ab(Color)"},{"children":null,"id":"ToLCh_ab(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLCh_ab(Color, Illuminant, StandardObserver)","nameWithType":"Models.ToLCh_ab(Color, Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE LCh(ab) components using the given illuminant\nand standard observer.\n","syntax":{"content":"public static CIELCh_ab ToLCh_ab(this Color color, Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"},{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The CIE LCh(ab) components of the color.","type":"Zigurous.ColorPro.CIELCh_ab"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToLCh_ab(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToLCh_ab(Color,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLCh_ab(Color, Tristimulus)","nameWithType":"Models.ToLCh_ab(Color, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE LCh(ab) components using the given white point.\n","syntax":{"content":"public static CIELCh_ab ToLCh_ab(this Color color, Tristimulus whitePoint)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"},{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The CIE LCh(ab) components of the color.","type":"Zigurous.ColorPro.CIELCh_ab"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToLCh_ab(Color,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToLCh_uv(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLCh_uv(Color)","nameWithType":"Models.ToLCh_uv(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE LCh(uv) components.\n","syntax":{"content":"public static CIELCh_uv ToLCh_uv(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The CIE LCh(uv) components of the color.","type":"Zigurous.ColorPro.CIELCh_uv"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToLCh_uv(Color)"},{"children":null,"id":"ToLCh_uv(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLCh_uv(Color, Illuminant, StandardObserver)","nameWithType":"Models.ToLCh_uv(Color, Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE LCh(uv) components using the given illuminant\nand standard observer.\n","syntax":{"content":"public static CIELCh_uv ToLCh_uv(this Color color, Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"},{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The CIE LCh(uv) components of the color.","type":"Zigurous.ColorPro.CIELCh_uv"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToLCh_uv(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToLCh_uv(Color,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLCh_uv(Color, Tristimulus)","nameWithType":"Models.ToLCh_uv(Color, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE LCh(uv) components using the given white point.\n","syntax":{"content":"public static CIELCh_uv ToLCh_uv(this Color color, Tristimulus whitePoint)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"},{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The CIE LCh(uv) components of the color.","type":"Zigurous.ColorPro.CIELCh_uv"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToLCh_uv(Color,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToUCS(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToUCS(Color)","nameWithType":"Models.ToUCS(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE UCS components.\n","syntax":{"content":"public static CIEUCS ToUCS(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The CIE UCS components of the color.","type":"Zigurous.ColorPro.CIEUCS"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToUCS(Color)"},{"children":null,"id":"ToUVW(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToUVW(Color)","nameWithType":"Models.ToUVW(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE UVW components.\n","syntax":{"content":"public static CIEUVW ToUVW(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The CIE UVW components of the color.","type":"Zigurous.ColorPro.CIEUVW"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToUVW(Color)"},{"children":null,"id":"ToUVW(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToUVW(Color, Illuminant, StandardObserver)","nameWithType":"Models.ToUVW(Color, Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE UVW components using the given illuminant\nand standard observer.\n","syntax":{"content":"public static CIEUVW ToUVW(this Color color, Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"},{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The CIE UVW components of the color.","type":"Zigurous.ColorPro.CIEUVW"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToUVW(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToUVW(Color,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToUVW(Color, Tristimulus)","nameWithType":"Models.ToUVW(Color, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE UVW components using the given white point.\n","syntax":{"content":"public static CIEUVW ToUVW(this Color color, Tristimulus whitePoint)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"},{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The CIE UVW components of the color.","type":"Zigurous.ColorPro.CIEUVW"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToUVW(Color,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToXYZ(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToXYZ(Color)","nameWithType":"Models.ToXYZ(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE XYZ components.\n","syntax":{"content":"public static CIEXYZ ToXYZ(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The CIE XYZ components of the color.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToXYZ(Color)"},{"children":null,"id":"ToxyY(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToxyY(Color)","nameWithType":"Models.ToxyY(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CIE xyY components.\n","syntax":{"content":"public static CIExyY ToxyY(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The CIE xyY components of the color.","type":"Zigurous.ColorPro.CIExyY"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToxyY(Color)"},{"children":null,"id":"ToCMYK(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToCMYK(Color)","nameWithType":"Models.ToCMYK(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into CMYK (cyan, magenta, yellow, black)\ncomponents in the range [0..1].\n","syntax":{"content":"public static CMYK ToCMYK(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The CMYK components of the color.","type":"Zigurous.ColorPro.CMYK"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToCMYK(Color)"},{"children":null,"id":"ToHSB(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHSB(Color)","nameWithType":"Models.ToHSB(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into HSB (hue, saturation, brightness) components\nin the range [0..1].\n","syntax":{"content":"public static HSB ToHSB(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The HSB components of the color.","type":"Zigurous.ColorPro.HSB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToHSB(Color)"},{"children":null,"id":"ToHSI(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHSI(Color)","nameWithType":"Models.ToHSI(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into HSI (hue, saturation, intensity) components\nin the range [0..1].\n","syntax":{"content":"public static HSI ToHSI(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The HSI components of the color.","type":"Zigurous.ColorPro.HSI"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToHSI(Color)"},{"children":null,"id":"ToHSL(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHSL(Color)","nameWithType":"Models.ToHSL(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into HSL (hue, saturation, lightness) components\nin the range [0..1].\n","syntax":{"content":"public static HSL ToHSL(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The HSL components of the color.","type":"Zigurous.ColorPro.HSL"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToHSL(Color)"},{"children":null,"id":"ToHSV(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHSV(Color)","nameWithType":"Models.ToHSV(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into HSV (hue, saturation, value) components in\nthe range [0..1].\n","syntax":{"content":"public static HSV ToHSV(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The HSV components of the color.","type":"Zigurous.ColorPro.HSV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToHSV(Color)"},{"children":null,"id":"ToHunterLab(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHunterLab(Color)","nameWithType":"Models.ToHunterLab(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into Hunter Lab components.\n","syntax":{"content":"public static HunterLab ToHunterLab(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The Hunter Lab components of the color.","type":"Zigurous.ColorPro.HunterLab"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToHunterLab(Color)"},{"children":null,"id":"ToHunterLab(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHunterLab(Color, Illuminant, StandardObserver)","nameWithType":"Models.ToHunterLab(Color, Illuminant, StandardObserver)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into Hunter Lab components using the given\nilluminant and standard observer.\n","syntax":{"content":"public static HunterLab ToHunterLab(this Color color, Illuminant illuminant, StandardObserver observer = StandardObserver.Two)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"},{"description":"The illuminant to use.","id":"illuminant","type":"Zigurous.ColorPro.Illuminant"},{"description":"The standard observer to use.","id":"observer","type":"Zigurous.ColorPro.StandardObserver"}],"return":{"description":"The Hunter Lab components of the color.","type":"Zigurous.ColorPro.HunterLab"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToHunterLab(Color,Zigurous.ColorPro.Illuminant,Zigurous.ColorPro.StandardObserver)"},{"children":null,"id":"ToHunterLab(Color,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToHunterLab(Color, Tristimulus)","nameWithType":"Models.ToHunterLab(Color, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into Hunter Lab components using the given white point.\n","syntax":{"content":"public static HunterLab ToHunterLab(this Color color, Tristimulus whitePoint)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"},{"description":"The white point to use.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The Hunter Lab components of the color.","type":"Zigurous.ColorPro.HunterLab"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToHunterLab(Color,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"ToLMS(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToLMS(Color)","nameWithType":"Models.ToLMS(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into LMS components.\n","syntax":{"content":"public static LMS ToLMS(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The LMS components of the color.","type":"Zigurous.ColorPro.LMS"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToLMS(Color)"},{"children":null,"id":"ToRGB(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToRGB(Color)","nameWithType":"Models.ToRGB(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into RGB (red, green, blue) components in the\nrange [0..1].\n","syntax":{"content":"public static RGB ToRGB(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The RGB components of the color.","type":"Zigurous.ColorPro.RGB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToRGB(Color)"},{"children":null,"id":"ToRGB255(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToRGB255(Color)","nameWithType":"Models.ToRGB255(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into RGB (red, green, blue) components in the\nrange [0..255].\n","syntax":{"content":"public static RGB255 ToRGB255(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The RGB components of the color.","type":"Zigurous.ColorPro.RGB255"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToRGB255(Color)"},{"children":null,"id":"ToRGBA(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToRGBA(Color)","nameWithType":"Models.ToRGBA(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into RGBA (red, green, blue, alpha) components in\nthe range [0..1].\n","syntax":{"content":"public static RGBA ToRGBA(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The RGBA components of the color.","type":"Zigurous.ColorPro.RGBA"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToRGBA(Color)"},{"children":null,"id":"ToRGBA255(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToRGBA255(Color)","nameWithType":"Models.ToRGBA255(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into RGBA (red, green, blue, alpha) components in\nthe range [0..255].\n","syntax":{"content":"public static RGBA255 ToRGBA255(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The RGBA components of the color.","type":"Zigurous.ColorPro.RGBA255"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToRGBA255(Color)"},{"children":null,"id":"ToYCbCr(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToYCbCr(Color)","nameWithType":"Models.ToYCbCr(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into Y′CbCr components.\n","syntax":{"content":"public static YCbCr ToYCbCr(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The Y′CbCr components of the color.","type":"Zigurous.ColorPro.YCbCr"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToYCbCr(Color)"},{"children":null,"id":"ToYCbCr(Color,Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToYCbCr(Color, SignalEncoding)","nameWithType":"Models.ToYCbCr(Color, SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into Y′CbCr components using the given signal encoding.\n","syntax":{"content":"public static YCbCr ToYCbCr(this Color color, SignalEncoding encoding)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"},{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The Y′CbCr components of the color.","type":"Zigurous.ColorPro.YCbCr"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToYCbCr(Color,Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"ToYPbPr(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToYPbPr(Color)","nameWithType":"Models.ToYPbPr(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into Y′PbPr components.\n","syntax":{"content":"public static YPbPr ToYPbPr(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The Y′PbPr components of the color.","type":"Zigurous.ColorPro.YPbPr"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToYPbPr(Color)"},{"children":null,"id":"ToYPbPr(Color,Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToYPbPr(Color, SignalEncoding)","nameWithType":"Models.ToYPbPr(Color, SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into Y′PbPr components using the given signal encoding.\n","syntax":{"content":"public static YPbPr ToYPbPr(this Color color, SignalEncoding encoding)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"},{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The Y′PbPr components of the color.","type":"Zigurous.ColorPro.YPbPr"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToYPbPr(Color,Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"ToYIQ(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToYIQ(Color)","nameWithType":"Models.ToYIQ(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into Y′IQ components.\n","syntax":{"content":"public static YIQ ToYIQ(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The Y′IQ components of the color.","type":"Zigurous.ColorPro.YIQ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToYIQ(Color)"},{"children":null,"id":"ToYIQ(Color,Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToYIQ(Color, SignalEncoding)","nameWithType":"Models.ToYIQ(Color, SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into Y′IQ components using the given signal encoding.\n","syntax":{"content":"public static YIQ ToYIQ(this Color color, SignalEncoding encoding)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"},{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The Y′IQ components of the color.","type":"Zigurous.ColorPro.YIQ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToYIQ(Color,Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"ToYUV(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToYUV(Color)","nameWithType":"Models.ToYUV(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into Y′UV components.\n","syntax":{"content":"public static YUV ToYUV(this Color color)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The Y′UV components of the color.","type":"Zigurous.ColorPro.YUV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToYUV(Color)"},{"children":null,"id":"ToYUV(Color,Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ToYUV(Color, SignalEncoding)","nameWithType":"Models.ToYUV(Color, SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Models","remarks":null,"summary":"\nConverts the color into Y′UV components using the given signal encoding.\n","syntax":{"content":"public static YUV ToYUV(this Color color, SignalEncoding encoding)","parameters":[{"description":"The color to convert.","id":"color","type":"Global.Color"},{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The Y′UV components of the color.","type":"Zigurous.ColorPro.YUV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Models.ToYUV(Color,Zigurous.ColorPro.SignalEncoding)"}]},{"items":[{"children":["Zigurous.ColorPro.Conversion.CMYKToRGB(System.Single,System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.HSBToRGB(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.HSIToRGB(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.HSLToHSB(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.HSLToHSV(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.HSVToRGB(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.HunterLabToXYZ(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Conversion.LabToLCh(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.LabToXYZ(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Conversion.LChToLab(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.LChToLuv(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.LMSToRGB(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.LuvToLCh(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.LuvToXYZ(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Conversion.RGBToCMYK(Color)","Zigurous.ColorPro.Conversion.RGBToCMYK(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.RGBToHSB(Color)","Zigurous.ColorPro.Conversion.RGBToHSB(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.RGBToHSI(Color)","Zigurous.ColorPro.Conversion.RGBToHSI(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.RGBToHSL(Color)","Zigurous.ColorPro.Conversion.RGBToHSL(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.RGBToHSV(Color)","Zigurous.ColorPro.Conversion.RGBToHSV(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.RGBToLMS(Color)","Zigurous.ColorPro.Conversion.RGBToLMS(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.RGBToXYZ(Color)","Zigurous.ColorPro.Conversion.RGBToXYZ(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.RGBToYPbPr(Color,Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.Conversion.RGBToYPbPr(System.Single,System.Single,System.Single,Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.Conversion.RGBToYUV(Color,Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.Conversion.RGBToYUV(System.Single,System.Single,System.Single,Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.Conversion.UCSToxyY(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.uvToCCT(System.Single,System.Single)","Zigurous.ColorPro.Conversion.UVWToUCS(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Conversion.xyToCCT(System.Single,System.Single)","Zigurous.ColorPro.Conversion.xyYToXYZ(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.XYZToHunterLab(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Conversion.XYZToLab(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Conversion.XYZToLuv(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Conversion.XYZToRGB(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.XYZToUCS(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.XYZToUVW(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)","Zigurous.ColorPro.Conversion.XYZToxyY(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.YCbCrToYPbPr(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.YIQToYUV(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.YPbPrToRGB(System.Single,System.Single,System.Single,Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.Conversion.YPbPrToYCbCr(System.Single,System.Single,System.Single)","Zigurous.ColorPro.Conversion.YUVToRGB(System.Single,System.Single,System.Single,Zigurous.ColorPro.SignalEncoding)","Zigurous.ColorPro.Conversion.YUVToYIQ(System.Single,System.Single,System.Single)"],"id":"Conversion","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Conversion","nameWithType":"Conversion","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro","remarks":null,"summary":"\nFunctions for converting color component values.\n","syntax":{"content":"public static class Conversion","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.ColorPro.Conversion"},{"children":null,"id":"CMYKToRGB(System.Single,System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"CMYKToRGB(Single, Single, Single, Single)","nameWithType":"Conversion.CMYKToRGB(Single, Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CMYK components to an RGB color.\n","syntax":{"content":"public static Color CMYKToRGB(float c, float m, float y, float k)","parameters":[{"description":"The cyan component of the color in the range [0..1].","id":"c","type":"System.Single"},{"description":"The magenta component of the color in the range [0..1].","id":"m","type":"System.Single"},{"description":"The yellow component of the color in the range [0..1].","id":"y","type":"System.Single"},{"description":"The black component of the color in the range [0..1].","id":"k","type":"System.Single"}],"return":{"description":"The converted RGB color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.CMYKToRGB(System.Single,System.Single,System.Single,System.Single)"},{"children":null,"id":"HSBToRGB(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSBToRGB(Single, Single, Single)","nameWithType":"Conversion.HSBToRGB(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts HSB components to an RGB color.\n","syntax":{"content":"public static Color HSBToRGB(float h, float s, float b)","parameters":[{"description":"The hue component of the color in the range [0..1].","id":"h","type":"System.Single"},{"description":"The saturation component of the color in the range [0..1].","id":"s","type":"System.Single"},{"description":"The brightness component of the color in the range [0..1].","id":"b","type":"System.Single"}],"return":{"description":"The converted RGB color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.HSBToRGB(System.Single,System.Single,System.Single)"},{"children":null,"id":"HSIToRGB(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSIToRGB(Single, Single, Single)","nameWithType":"Conversion.HSIToRGB(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts HSI components to an RGB color.\n","syntax":{"content":"public static Color HSIToRGB(float h, float s, float i)","parameters":[{"description":"The hue component of the color in the range [0..1].","id":"h","type":"System.Single"},{"description":"The saturation component of the color in the range [0..1].","id":"s","type":"System.Single"},{"description":"The intensity component of the color in the range [0..1].","id":"i","type":"System.Single"}],"return":{"description":"The converted RGB color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.HSIToRGB(System.Single,System.Single,System.Single)"},{"children":null,"id":"HSLToHSB(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSLToHSB(Single, Single, Single)","nameWithType":"Conversion.HSLToHSB(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts HSL components to HSB components.\n","syntax":{"content":"public static HSB HSLToHSB(float h, float s, float l)","parameters":[{"description":"The hue component of the color in the range [0..1].","id":"h","type":"System.Single"},{"description":"The saturation component of the color in the range [0..1].","id":"s","type":"System.Single"},{"description":"The lightness component of the color in the range [0..1].","id":"l","type":"System.Single"}],"return":{"description":"The converted HSB components.","type":"Zigurous.ColorPro.HSB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.HSLToHSB(System.Single,System.Single,System.Single)"},{"children":null,"id":"HSLToHSV(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSLToHSV(Single, Single, Single)","nameWithType":"Conversion.HSLToHSV(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts HSL components to HSV components.\n","syntax":{"content":"public static HSV HSLToHSV(float h, float s, float l)","parameters":[{"description":"The hue component of the color in the range [0..1].","id":"h","type":"System.Single"},{"description":"The saturation component of the color in the range [0..1].","id":"s","type":"System.Single"},{"description":"The lightness component of the color in the range [0..1].","id":"l","type":"System.Single"}],"return":{"description":"The converted HSV components.","type":"Zigurous.ColorPro.HSV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.HSLToHSV(System.Single,System.Single,System.Single)"},{"children":null,"id":"HSVToRGB(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HSVToRGB(Single, Single, Single)","nameWithType":"Conversion.HSVToRGB(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts HSV components to an RGB color.\n","syntax":{"content":"public static Color HSVToRGB(float h, float s, float v)","parameters":[{"description":"The hue component of the color in the range [0..1].","id":"h","type":"System.Single"},{"description":"The saturation component of the color in the range [0..1].","id":"s","type":"System.Single"},{"description":"The value component of the color in the range [0..1].","id":"v","type":"System.Single"}],"return":{"description":"The converted RGB color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.HSVToRGB(System.Single,System.Single,System.Single)"},{"children":null,"id":"HunterLabToXYZ(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HunterLabToXYZ(Single, Single, Single, Tristimulus)","nameWithType":"Conversion.HunterLabToXYZ(Single, Single, Single, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts Hunter Lab components to CIE XYZ components.\n","syntax":{"content":"public static CIEXYZ HunterLabToXYZ(float L, float a, float b, Tristimulus whitePoint)","parameters":[{"description":"The lightness component of the color in the range [0..100].","id":"L","type":"System.Single"},{"description":"The green-red chromaticity component of the color.","id":"a","type":"System.Single"},{"description":"The blue-yellow chromaticity component of the color.","id":"b","type":"System.Single"},{"description":"The reference white point.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The converted CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.HunterLabToXYZ(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"LabToLCh(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"LabToLCh(Single, Single, Single)","nameWithType":"Conversion.LabToLCh(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CIE LAB components to CIE LCh(ab) components.\n","syntax":{"content":"public static CIELCh_ab LabToLCh(float L, float a, float b)","parameters":[{"description":"The lightness component of the color in the range [0..100].","id":"L","type":"System.Single"},{"description":"The green-red chromaticity component of the color in the range [-128..128].","id":"a","type":"System.Single"},{"description":"The blue-yellow chromaticity component of the color in the range [-128..128].","id":"b","type":"System.Single"}],"return":{"description":"The converted CIE LCh(ab) components.","type":"Zigurous.ColorPro.CIELCh_ab"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.LabToLCh(System.Single,System.Single,System.Single)"},{"children":null,"id":"LabToXYZ(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"LabToXYZ(Single, Single, Single, Tristimulus)","nameWithType":"Conversion.LabToXYZ(Single, Single, Single, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CIE LAB components to CIE XYZ components.\n","syntax":{"content":"public static CIEXYZ LabToXYZ(float L, float a, float b, Tristimulus whitePoint)","parameters":[{"description":"The lightness component of the color in the range [0..100].","id":"L","type":"System.Single"},{"description":"The green-red chromaticity component of the color in the range [-128..128].","id":"a","type":"System.Single"},{"description":"The blue-yellow chromaticity component of the color in the range [-128..128].","id":"b","type":"System.Single"},{"description":"The reference white point.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The converted CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.LabToXYZ(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"LChToLab(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"LChToLab(Single, Single, Single)","nameWithType":"Conversion.LChToLab(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CIE LCh(ab) components to CIE LAB components.\n","syntax":{"content":"public static CIELAB LChToLab(float L, float C, float h)","parameters":[{"description":"The lightness component of the color in the range [0..100].","id":"L","type":"System.Single"},{"description":"The chroma component of the color.","id":"C","type":"System.Single"},{"description":"The hue component of the color in the range [0..360°].","id":"h","type":"System.Single"}],"return":{"description":"The converted CIE LAB components.","type":"Zigurous.ColorPro.CIELAB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.LChToLab(System.Single,System.Single,System.Single)"},{"children":null,"id":"LChToLuv(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"LChToLuv(Single, Single, Single)","nameWithType":"Conversion.LChToLuv(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CIE LCh(uv) components to CIE LUV components.\n","syntax":{"content":"public static CIELUV LChToLuv(float L, float C, float h)","parameters":[{"description":"The lightness component of the color in the range [0..100].","id":"L","type":"System.Single"},{"description":"The chroma component of the color.","id":"C","type":"System.Single"},{"description":"The hue component of the color in the range [0..360°].","id":"h","type":"System.Single"}],"return":{"description":"The converted CIE LUV components.","type":"Zigurous.ColorPro.CIELUV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.LChToLuv(System.Single,System.Single,System.Single)"},{"children":null,"id":"LMSToRGB(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"LMSToRGB(Single, Single, Single)","nameWithType":"Conversion.LMSToRGB(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts LMS components to an RGB color.\n","syntax":{"content":"public static Color LMSToRGB(float L, float M, float S)","parameters":[{"description":"The long cone cell of the human eye.","id":"L","type":"System.Single"},{"description":"The medium cone cell of the human eye.","id":"M","type":"System.Single"},{"description":"The short cone cell of the human eye.","id":"S","type":"System.Single"}],"return":{"description":"The converted RGB color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.LMSToRGB(System.Single,System.Single,System.Single)"},{"children":null,"id":"LuvToLCh(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"LuvToLCh(Single, Single, Single)","nameWithType":"Conversion.LuvToLCh(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CIE LUV components to CIE LCh(uv) components.\n","syntax":{"content":"public static CIELCh_uv LuvToLCh(float L, float u, float v)","parameters":[{"description":"The lightness component of the color in the range [0..100].","id":"L","type":"System.Single"},{"description":"The green-red chromaticity component of the color in the range [-100..100].","id":"u","type":"System.Single"},{"description":"The blue-yellow chromaticity component of the color in the range [-100..100].","id":"v","type":"System.Single"}],"return":{"description":"The converted CIE LCh(uv) components.","type":"Zigurous.ColorPro.CIELCh_uv"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.LuvToLCh(System.Single,System.Single,System.Single)"},{"children":null,"id":"LuvToXYZ(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"LuvToXYZ(Single, Single, Single, Tristimulus)","nameWithType":"Conversion.LuvToXYZ(Single, Single, Single, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CIE LUV components to CIE XYZ components.\n","syntax":{"content":"public static CIEXYZ LuvToXYZ(float L, float u, float v, Tristimulus whitePoint)","parameters":[{"description":"The lightness component of the color in the range [0..100].","id":"L","type":"System.Single"},{"description":"The green-red chromaticity component of the color in the range [-100..100].","id":"u","type":"System.Single"},{"description":"The blue-yellow chromaticity component of the color in the range [-100..100].","id":"v","type":"System.Single"},{"description":"The reference white point.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The converted CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.LuvToXYZ(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"RGBToCMYK(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToCMYK(Color)","nameWithType":"Conversion.RGBToCMYK(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts an RGB color to CMYK components.\n","syntax":{"content":"public static CMYK RGBToCMYK(Color color)","parameters":[{"description":"The RGB color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The converted CMYK components.","type":"Zigurous.ColorPro.CMYK"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToCMYK(Color)"},{"children":null,"id":"RGBToCMYK(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToCMYK(Single, Single, Single)","nameWithType":"Conversion.RGBToCMYK(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts RGB components to CMYK components.\n","syntax":{"content":"public static CMYK RGBToCMYK(float R, float G, float B)","parameters":[{"description":"The red component of the color in the range [0..1].","id":"R","type":"System.Single"},{"description":"The green component of the color in the range [0..1].","id":"G","type":"System.Single"},{"description":"The blue component of the color in the range [0..1].","id":"B","type":"System.Single"}],"return":{"description":"The converted CMYK components.","type":"Zigurous.ColorPro.CMYK"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToCMYK(System.Single,System.Single,System.Single)"},{"children":null,"id":"RGBToHSB(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToHSB(Color)","nameWithType":"Conversion.RGBToHSB(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts an RGB color to HSB components.\n","syntax":{"content":"public static HSB RGBToHSB(Color color)","parameters":[{"description":"The RGB color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The converted HSB components.","type":"Zigurous.ColorPro.HSB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToHSB(Color)"},{"children":null,"id":"RGBToHSB(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToHSB(Single, Single, Single)","nameWithType":"Conversion.RGBToHSB(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts RGB components to HSB components.\n","syntax":{"content":"public static HSB RGBToHSB(float R, float G, float B)","parameters":[{"description":"The red component of the color in the range [0..1].","id":"R","type":"System.Single"},{"description":"The green component of the color in the range [0..1].","id":"G","type":"System.Single"},{"description":"The blue component of the color in the range [0..1].","id":"B","type":"System.Single"}],"return":{"description":"The converted HSB components.","type":"Zigurous.ColorPro.HSB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToHSB(System.Single,System.Single,System.Single)"},{"children":null,"id":"RGBToHSI(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToHSI(Color)","nameWithType":"Conversion.RGBToHSI(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts an RGB color to HSI components.\n","syntax":{"content":"public static HSI RGBToHSI(Color color)","parameters":[{"description":"The RGB color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The converted HSI components.","type":"Zigurous.ColorPro.HSI"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToHSI(Color)"},{"children":null,"id":"RGBToHSI(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToHSI(Single, Single, Single)","nameWithType":"Conversion.RGBToHSI(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts RGB components to HSI components.\n","syntax":{"content":"public static HSI RGBToHSI(float R, float G, float B)","parameters":[{"description":"The red component of the color in the range [0..1].","id":"R","type":"System.Single"},{"description":"The green component of the color in the range [0..1].","id":"G","type":"System.Single"},{"description":"The blue component of the color in the range [0..1].","id":"B","type":"System.Single"}],"return":{"description":"The converted HSI components.","type":"Zigurous.ColorPro.HSI"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToHSI(System.Single,System.Single,System.Single)"},{"children":null,"id":"RGBToHSL(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToHSL(Color)","nameWithType":"Conversion.RGBToHSL(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts an RGB color to HSL components.\n","syntax":{"content":"public static HSL RGBToHSL(Color color)","parameters":[{"description":"The RGB color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The converted HSL components.","type":"Zigurous.ColorPro.HSL"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToHSL(Color)"},{"children":null,"id":"RGBToHSL(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToHSL(Single, Single, Single)","nameWithType":"Conversion.RGBToHSL(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts RGB components to HSL components.\n","syntax":{"content":"public static HSL RGBToHSL(float R, float G, float B)","parameters":[{"description":"The red component of the color in the range [0..1].","id":"R","type":"System.Single"},{"description":"The green component of the color in the range [0..1].","id":"G","type":"System.Single"},{"description":"The blue component of the color in the range [0..1].","id":"B","type":"System.Single"}],"return":{"description":"The converted HSL components.","type":"Zigurous.ColorPro.HSL"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToHSL(System.Single,System.Single,System.Single)"},{"children":null,"id":"RGBToHSV(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToHSV(Color)","nameWithType":"Conversion.RGBToHSV(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts an RGB color to HSV components.\n","syntax":{"content":"public static HSV RGBToHSV(Color color)","parameters":[{"description":"The RGB color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The converted HSV components.","type":"Zigurous.ColorPro.HSV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToHSV(Color)"},{"children":null,"id":"RGBToHSV(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToHSV(Single, Single, Single)","nameWithType":"Conversion.RGBToHSV(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts RGB components to HSV components.\n","syntax":{"content":"public static HSV RGBToHSV(float R, float G, float B)","parameters":[{"description":"The red component of the color in the range [0..1].","id":"R","type":"System.Single"},{"description":"The green component of the color in the range [0..1].","id":"G","type":"System.Single"},{"description":"The blue component of the color in the range [0..1].","id":"B","type":"System.Single"}],"return":{"description":"The converted HSV components.","type":"Zigurous.ColorPro.HSV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToHSV(System.Single,System.Single,System.Single)"},{"children":null,"id":"RGBToLMS(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToLMS(Color)","nameWithType":"Conversion.RGBToLMS(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts an RGB color to LMS components.\n","syntax":{"content":"public static LMS RGBToLMS(Color color)","parameters":[{"description":"The RGB color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The converted LMS components.","type":"Zigurous.ColorPro.LMS"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToLMS(Color)"},{"children":null,"id":"RGBToLMS(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToLMS(Single, Single, Single)","nameWithType":"Conversion.RGBToLMS(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts RGB components to LMS components.\n","syntax":{"content":"public static LMS RGBToLMS(float R, float G, float B)","parameters":[{"description":"The red component of the color in the range [0..1].","id":"R","type":"System.Single"},{"description":"The green component of the color in the range [0..1].","id":"G","type":"System.Single"},{"description":"The blue component of the color in the range [0..1].","id":"B","type":"System.Single"}],"return":{"description":"The converted LMS components.","type":"Zigurous.ColorPro.LMS"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToLMS(System.Single,System.Single,System.Single)"},{"children":null,"id":"RGBToXYZ(Color)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToXYZ(Color)","nameWithType":"Conversion.RGBToXYZ(Color)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts an RGB color to CIE XYZ components.\n","syntax":{"content":"public static CIEXYZ RGBToXYZ(Color color)","parameters":[{"description":"The RGB color to convert.","id":"color","type":"Global.Color"}],"return":{"description":"The converted CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToXYZ(Color)"},{"children":null,"id":"RGBToXYZ(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToXYZ(Single, Single, Single)","nameWithType":"Conversion.RGBToXYZ(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts RGB components to CIE XYZ components.\n","syntax":{"content":"public static CIEXYZ RGBToXYZ(float R, float G, float B)","parameters":[{"description":"The red component of the color in the range [0..1].","id":"R","type":"System.Single"},{"description":"The green component of the color in the range [0..1].","id":"G","type":"System.Single"},{"description":"The blue component of the color in the range [0..1].","id":"B","type":"System.Single"}],"return":{"description":"The converted CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToXYZ(System.Single,System.Single,System.Single)"},{"children":null,"id":"RGBToYPbPr(Color,Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToYPbPr(Color, SignalEncoding)","nameWithType":"Conversion.RGBToYPbPr(Color, SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts an RGB color to Y′PbPr components.\n","syntax":{"content":"public static YPbPr RGBToYPbPr(Color color, SignalEncoding encoding)","parameters":[{"description":"The RGB color to convert.","id":"color","type":"Global.Color"},{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The converted Y′PbPr components.","type":"Zigurous.ColorPro.YPbPr"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToYPbPr(Color,Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"RGBToYPbPr(System.Single,System.Single,System.Single,Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToYPbPr(Single, Single, Single, SignalEncoding)","nameWithType":"Conversion.RGBToYPbPr(Single, Single, Single, SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts RGB components to Y′PbPr components.\n","syntax":{"content":"public static YPbPr RGBToYPbPr(float R, float G, float B, SignalEncoding encoding)","parameters":[{"description":"The red component of the color in the range [0..1].","id":"R","type":"System.Single"},{"description":"The green component of the color in the range [0..1].","id":"G","type":"System.Single"},{"description":"The blue component of the color in the range [0..1].","id":"B","type":"System.Single"},{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The converted Y′PbPr components.","type":"Zigurous.ColorPro.YPbPr"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToYPbPr(System.Single,System.Single,System.Single,Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"RGBToYUV(Color,Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToYUV(Color, SignalEncoding)","nameWithType":"Conversion.RGBToYUV(Color, SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts an RGB color to Y′UV components.\n","syntax":{"content":"public static YUV RGBToYUV(Color color, SignalEncoding encoding)","parameters":[{"description":"The RGB color to convert.","id":"color","type":"Global.Color"},{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The converted Y′UV components.","type":"Zigurous.ColorPro.YUV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToYUV(Color,Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"RGBToYUV(System.Single,System.Single,System.Single,Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"RGBToYUV(Single, Single, Single, SignalEncoding)","nameWithType":"Conversion.RGBToYUV(Single, Single, Single, SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts RGB components to Y′UV components.\n","syntax":{"content":"public static YUV RGBToYUV(float R, float G, float B, SignalEncoding encoding)","parameters":[{"description":"The red component of the color in the range [0..1].","id":"R","type":"System.Single"},{"description":"The green component of the color in the range [0..1].","id":"G","type":"System.Single"},{"description":"The blue component of the color in the range [0..1].","id":"B","type":"System.Single"},{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The converted Y′UV components.","type":"Zigurous.ColorPro.YUV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.RGBToYUV(System.Single,System.Single,System.Single,Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"UCSToxyY(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"UCSToxyY(Single, Single, Single)","nameWithType":"Conversion.UCSToxyY(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CIE UCS components to CIE xyY components.\n","syntax":{"content":"public static CIExyY UCSToxyY(float u, float v, float Y)","parameters":[{"description":"The u-axis chromaticity coordinate of the color in the range [0..1].","id":"u","type":"System.Single"},{"description":"The v-axis chromaticity coordinate of the color in the range [0..1].","id":"v","type":"System.Single"},{"description":"The luminance component of the color in the range [0..100].","id":"Y","type":"System.Single"}],"return":{"description":"The converted CIE xyY components.","type":"Zigurous.ColorPro.CIExyY"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.UCSToxyY(System.Single,System.Single,System.Single)"},{"children":null,"id":"UVWToUCS(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"UVWToUCS(Single, Single, Single, Tristimulus)","nameWithType":"Conversion.UVWToUCS(Single, Single, Single, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CIE UVW components to CIE UCS components.\n","syntax":{"content":"public static CIEUCS UVWToUCS(float U, float V, float W, Tristimulus whitePoint)","parameters":[{"description":"The U chromaticity component of the color in the range [-100..100].","id":"U","type":"System.Single"},{"description":"The V chromaticity component of the color in the range [-100..100].","id":"V","type":"System.Single"},{"description":"The lightness component of the color in the range [0..100].","id":"W","type":"System.Single"},{"description":"The reference white point.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The converted CIE UCS components.","type":"Zigurous.ColorPro.CIEUCS"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.UVWToUCS(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"uvToCCT(System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"uvToCCT(Single, Single)","nameWithType":"Conversion.uvToCCT(Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts uv chromaticity coordinates to CCT temperature in Kelvin.\n","syntax":{"content":"public static float uvToCCT(float u, float v)","parameters":[{"description":"The u-axis chromaticity coordinate of the color in the range [0..1].","id":"u","type":"System.Single"},{"description":"The v-axis chromaticity coordinate of the color in the range [0..1].","id":"v","type":"System.Single"}],"return":{"description":"The converted CCT temperature in Kelvin.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.uvToCCT(System.Single,System.Single)"},{"children":null,"id":"xyToCCT(System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"xyToCCT(Single, Single)","nameWithType":"Conversion.xyToCCT(Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts xy chromaticity coordinates to CCT temperature in Kelvin.\n","syntax":{"content":"public static float xyToCCT(float x, float y)","parameters":[{"description":"The x-axis chromaticity coordinate of the color in the range [0..1].","id":"x","type":"System.Single"},{"description":"The y-axis chromaticity coordinate of the color in the range [0..1].","id":"y","type":"System.Single"}],"return":{"description":"The converted CCT temperature in Kelvin.","type":"System.Single"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.xyToCCT(System.Single,System.Single)"},{"children":null,"id":"xyYToXYZ(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"xyYToXYZ(Single, Single, Single)","nameWithType":"Conversion.xyYToXYZ(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CIE xyY components to CIE XYZ components.\n","syntax":{"content":"public static CIEXYZ xyYToXYZ(float x, float y, float Y)","parameters":[{"description":"The x-axis chromaticity coordinate of the color in the range [0..1].","id":"x","type":"System.Single"},{"description":"The y-axis chromaticity coordinate of the color in the range [0..1].","id":"y","type":"System.Single"},{"description":"The luminance component of the color in the range [0..100].","id":"Y","type":"System.Single"}],"return":{"description":"The converted CIE XYZ components.","type":"Zigurous.ColorPro.CIEXYZ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.xyYToXYZ(System.Single,System.Single,System.Single)"},{"children":null,"id":"XYZToHunterLab(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"XYZToHunterLab(Single, Single, Single, Tristimulus)","nameWithType":"Conversion.XYZToHunterLab(Single, Single, Single, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CIE XYZ components to Hunter Lab components.\n","syntax":{"content":"public static HunterLab XYZToHunterLab(float X, float Y, float Z, Tristimulus whitePoint)","parameters":[{"description":"A mix of cone response curves chosen to be orthogonal to luminance and non-negative in the range [0..95.047].","id":"X","type":"System.Single"},{"description":"The luminance component of the color in the range [0..100].","id":"Y","type":"System.Single"},{"description":"Somewhat equal to blue, or the &quot;S&quot; cone response in the range [0..108.883].","id":"Z","type":"System.Single"},{"description":"The reference white point.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The converted Hunter Lab components.","type":"Zigurous.ColorPro.HunterLab"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.XYZToHunterLab(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"XYZToLab(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"XYZToLab(Single, Single, Single, Tristimulus)","nameWithType":"Conversion.XYZToLab(Single, Single, Single, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CIE XYZ components to CIE LAB components.\n","syntax":{"content":"public static CIELAB XYZToLab(float X, float Y, float Z, Tristimulus whitePoint)","parameters":[{"description":"A mix of cone response curves chosen to be orthogonal to luminance and non-negative in the range [0..95.047].","id":"X","type":"System.Single"},{"description":"The luminance component of the color in the range [0..100].","id":"Y","type":"System.Single"},{"description":"Somewhat equal to blue, or the &quot;S&quot; cone response in the range [0..108.883].","id":"Z","type":"System.Single"},{"description":"The reference white point.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The converted CIE LAB components.","type":"Zigurous.ColorPro.CIELAB"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.XYZToLab(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"XYZToLuv(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"XYZToLuv(Single, Single, Single, Tristimulus)","nameWithType":"Conversion.XYZToLuv(Single, Single, Single, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CIE XYZ components to CIE LUV components.\n","syntax":{"content":"public static CIELUV XYZToLuv(float X, float Y, float Z, Tristimulus whitePoint)","parameters":[{"description":"A mix of cone response curves chosen to be orthogonal to luminance and non-negative in the range [0..95.047].","id":"X","type":"System.Single"},{"description":"The luminance component of the color in the range [0..100].","id":"Y","type":"System.Single"},{"description":"Somewhat equal to blue, or the &quot;S&quot; cone response in the range [0..108.883].","id":"Z","type":"System.Single"},{"description":"The reference white point.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The converted CIE LUV components.","type":"Zigurous.ColorPro.CIELUV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.XYZToLuv(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"XYZToRGB(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"XYZToRGB(Single, Single, Single)","nameWithType":"Conversion.XYZToRGB(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CIE XYZ components to an RGB color.\n","syntax":{"content":"public static Color XYZToRGB(float X, float Y, float Z)","parameters":[{"description":"A mix of cone response curves chosen to be orthogonal to luminance and non-negative in the range [0..95.047].","id":"X","type":"System.Single"},{"description":"The luminance component of the color in the range [0..100].","id":"Y","type":"System.Single"},{"description":"Somewhat equal to blue, or the &quot;S&quot; cone response in the range [0..108.883].","id":"Z","type":"System.Single"}],"return":{"description":"The converted RGB color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.XYZToRGB(System.Single,System.Single,System.Single)"},{"children":null,"id":"XYZToUCS(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"XYZToUCS(Single, Single, Single)","nameWithType":"Conversion.XYZToUCS(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CIE XYZ components to CIE UCS components.\n","syntax":{"content":"public static CIEUCS XYZToUCS(float X, float Y, float Z)","parameters":[{"description":"A mix of cone response curves chosen to be orthogonal to luminance and non-negative in the range [0..95.047].","id":"X","type":"System.Single"},{"description":"The luminance component of the color in the range [0..100].","id":"Y","type":"System.Single"},{"description":"Somewhat equal to blue, or the &quot;S&quot; cone response in the range [0..108.883].","id":"Z","type":"System.Single"}],"return":{"description":"The converted CIE UCS components.","type":"Zigurous.ColorPro.CIEUCS"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.XYZToUCS(System.Single,System.Single,System.Single)"},{"children":null,"id":"XYZToUVW(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"XYZToUVW(Single, Single, Single, Tristimulus)","nameWithType":"Conversion.XYZToUVW(Single, Single, Single, Tristimulus)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CIE XYZ components to CIE UVW components.\n","syntax":{"content":"public static CIEUVW XYZToUVW(float X, float Y, float Z, Tristimulus whitePoint)","parameters":[{"description":"A mix of cone response curves chosen to be orthogonal to luminance and non-negative in the range [0..95.047].","id":"X","type":"System.Single"},{"description":"The luminance component of the color in the range [0..100].","id":"Y","type":"System.Single"},{"description":"Somewhat equal to blue, or the &quot;S&quot; cone response in the range [0..108.883].","id":"Z","type":"System.Single"},{"description":"The reference white point.","id":"whitePoint","type":"Zigurous.ColorPro.Tristimulus"}],"return":{"description":"The converted CIE UVW components.","type":"Zigurous.ColorPro.CIEUVW"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.XYZToUVW(System.Single,System.Single,System.Single,Zigurous.ColorPro.Tristimulus)"},{"children":null,"id":"XYZToxyY(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"XYZToxyY(Single, Single, Single)","nameWithType":"Conversion.XYZToxyY(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts CIE XYZ components to CIE xyY components.\n","syntax":{"content":"public static CIExyY XYZToxyY(float X, float Y, float Z)","parameters":[{"description":"A mix of cone response curves chosen to be orthogonal to luminance and non-negative in the range [0..95.047].","id":"X","type":"System.Single"},{"description":"The luminance component of the color in the range [0..100].","id":"Y","type":"System.Single"},{"description":"Somewhat equal to blue, or the &quot;S&quot; cone response in the range [0..108.883].","id":"Z","type":"System.Single"}],"return":{"description":"The converted CIE xyY components.","type":"Zigurous.ColorPro.CIExyY"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.XYZToxyY(System.Single,System.Single,System.Single)"},{"children":null,"id":"YCbCrToYPbPr(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YCbCrToYPbPr(Single, Single, Single)","nameWithType":"Conversion.YCbCrToYPbPr(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts Y′CbCr components to Y′PbPr components.\n","syntax":{"content":"public static YPbPr YCbCrToYPbPr(float Y, float Cb, float Cr)","parameters":[{"description":"The luma component of the color in the full range [0..255].","id":"Y","type":"System.Single"},{"description":"The blue-difference chroma component of the color in the full range [0..255].","id":"Cb","type":"System.Single"},{"description":"The red-difference chroma component of the color in the full range [0..255].","id":"Cr","type":"System.Single"}],"return":{"description":"The converted Y′PbPr components.","type":"Zigurous.ColorPro.YPbPr"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.YCbCrToYPbPr(System.Single,System.Single,System.Single)"},{"children":null,"id":"YPbPrToYCbCr(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YPbPrToYCbCr(Single, Single, Single)","nameWithType":"Conversion.YPbPrToYCbCr(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts Y′PbPr components to Y′CbCr components.\n","syntax":{"content":"public static YCbCr YPbPrToYCbCr(float Y, float Pb, float Pr)","parameters":[{"description":"The luma component of the color in the range [0..1].","id":"Y","type":"System.Single"},{"description":"The blue-difference chroma component of the color in the range [-0.5..0.5].","id":"Pb","type":"System.Single"},{"description":"The red-difference chroma component of the color in the range [-0.5..0.5].","id":"Pr","type":"System.Single"}],"return":{"description":"The converted Y′CbCr components.","type":"Zigurous.ColorPro.YCbCr"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.YPbPrToYCbCr(System.Single,System.Single,System.Single)"},{"children":null,"id":"YPbPrToRGB(System.Single,System.Single,System.Single,Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YPbPrToRGB(Single, Single, Single, SignalEncoding)","nameWithType":"Conversion.YPbPrToRGB(Single, Single, Single, SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts Y′PbPr components to an RGB color.\n","syntax":{"content":"public static Color YPbPrToRGB(float Y, float Pb, float Pr, SignalEncoding encoding)","parameters":[{"description":"The luma component of the color in the range [0..1].","id":"Y","type":"System.Single"},{"description":"The blue-difference chroma component of the color in the range [-0.5..0.5].","id":"Pb","type":"System.Single"},{"description":"The red-difference chroma component of the color in the range [-0.5..0.5].","id":"Pr","type":"System.Single"},{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The converted RGB color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.YPbPrToRGB(System.Single,System.Single,System.Single,Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"YUVToRGB(System.Single,System.Single,System.Single,Zigurous.ColorPro.SignalEncoding)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YUVToRGB(Single, Single, Single, SignalEncoding)","nameWithType":"Conversion.YUVToRGB(Single, Single, Single, SignalEncoding)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts Y′UV components to an RGB color.\n","syntax":{"content":"public static Color YUVToRGB(float Y, float U, float V, SignalEncoding encoding)","parameters":[{"description":"The luma component of the color in the range [0..1].","id":"Y","type":"System.Single"},{"description":"The blue-difference chroma component of the color in the range [-0.436..0.436].","id":"U","type":"System.Single"},{"description":"The red-difference chroma component of the color in the range [-0.615..0.615].","id":"V","type":"System.Single"},{"description":"The signal encoding to use.","id":"encoding","type":"Zigurous.ColorPro.SignalEncoding"}],"return":{"description":"The converted RGB color.","type":"Global.Color"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.YUVToRGB(System.Single,System.Single,System.Single,Zigurous.ColorPro.SignalEncoding)"},{"children":null,"id":"YUVToYIQ(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YUVToYIQ(Single, Single, Single)","nameWithType":"Conversion.YUVToYIQ(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts Y′UV components to Y′IQ components.\n","syntax":{"content":"public static YIQ YUVToYIQ(float Y, float U, float V)","parameters":[{"description":"The luma component of the color in the range [0..1].","id":"Y","type":"System.Single"},{"description":"The blue-difference chroma component of the color in the range [-0.436..0.436].","id":"U","type":"System.Single"},{"description":"The red-difference chroma component of the color in the range [-0.615..0.615].","id":"V","type":"System.Single"}],"return":{"description":"The converted Y′IQ components.","type":"Zigurous.ColorPro.YIQ"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.YUVToYIQ(System.Single,System.Single,System.Single)"},{"children":null,"id":"YIQToYUV(System.Single,System.Single,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"YIQToYUV(Single, Single, Single)","nameWithType":"Conversion.YIQToYUV(Single, Single, Single)","namespace":"Zigurous.ColorPro","parent":"Zigurous.ColorPro.Conversion","remarks":null,"summary":"\nConverts Y′IQ components to Y′UV components.\n","syntax":{"content":"public static YUV YIQToYUV(float Y, float I, float Q)","parameters":[{"description":"The luma component of the color in the range [0..1].","id":"Y","type":"System.Single"},{"description":"The orange-blue chroma component of the color in the range [-0.596..0.596].","id":"I","type":"System.Single"},{"description":"The purple-green chroma component of the color in the range [-0.523..0.523].","id":"Q","type":"System.Single"}],"return":{"description":"The converted Y′UV components.","type":"Zigurous.ColorPro.YUV"},"typeParameters":null},"type":"Method","uid":"Zigurous.ColorPro.Conversion.YIQToYUV(System.Single,System.Single,System.Single)"}]}]}}}