{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-js","path":"/manual/conversion","result":{"data":{"markdownRemark":{"html":"<h1>Conversion</h1>\n<p>The <strong>Color Pro</strong> package supports converting colors to and from 20+ color models. Every supported type has its own data structure (except Hex). The <a href=\"/com.zigurous.color/api/Zigurous.ColorPro/Conversion\">Conversion</a> class declares functions to convert between different types, but in most cases this class does not need to be used directly. Extension methods exist on colors to convert between types, see below.</p>\n<hr/>\n<h3>Generic Conversion</h3>\n<p>Colors can be converted using generic type constraints. Any of the color models specified on this page can be used. For example:</p>\n<pre><code class=\"language-csharp\">RGB rgb = color.To&#x3C;RGB>();\r\nHSV hsv = color.To&#x3C;HSV>();\r\nCMYK cmyk = color.To&#x3C;CMYK>();\n</code></pre>\n<p>Additionally, any color model can be converted to any other color model.</p>\n<pre><code class=\"language-csharp\">RGB rgb = color.To&#x3C;RGB>();\r\nHSV hsv = rgb.To&#x3C;HSV>();\r\nCMYK cmyk = hsv.To&#x3C;CMYK>();\n</code></pre>\n<p>Some color models have direct conversions to other color models. When possible, it is better to use the direct conversion methods rather than the generic ones.</p>\n<pre><code class=\"language-csharp\">RGB rgb = color.ToRGB();\r\nHSV hsv = rgb.ToHSV();\r\nHSL hsl = hsv.ToHSL();\r\n\r\nCIEXYZ xyz = rgb.ToXYZ();\r\nCIELAB lab = xyz.ToLAB();\n</code></pre>\n<p>See the <a href=\"/com.zigurous.color/api/Zigurous.ColorPro\">Scripting API</a> for more detailed usage. All available color models are listed below.</p>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/ARGB\">ARGB</a></h3>\n<p>The ARGB (alpha, red, green, blue) components of a color in the range [0..1].</p>\n<pre><code class=\"language-csharp\">ARGB argb = color.ToARGB();\r\nColor color = argb.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/ARGB255\">ARGB255</a></h3>\n<p>The ARGB (alpha, red, green, blue) components of a color in the range [0..255].</p>\n<pre><code class=\"language-csharp\">ARGB255 argb = color.ToARGB255();\r\nColor color = argb.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CIELAB\">CIE LAB</a></h3>\n<p>The CIE LAB components of a color - lightness (L) and chromaticity (a,b).</p>\n<pre><code class=\"language-csharp\">CIELAB lab = color.ToLab();\r\nColor color = lab.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CIELUV\">CIE LUV</a></h3>\n<p>The CIE LUV components of a color - lightness (L) and chromaticity (u,v).</p>\n<pre><code class=\"language-csharp\">CIELUV luv = color.ToLuv();\r\nColor color = luv.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CIELCh_ab\">CIE LCh(ab)</a></h3>\n<p>The CIE LCh(ab) components of a color - lightness (L), chroma (C), and hue (h).</p>\n<pre><code class=\"language-csharp\">CIELCh_ab lch = color.ToLCh_ab();\r\nColor color = lch.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CIELCh_uv\">CIE LCh(uv)</a></h3>\n<p>The CIE LCh(uv) components of a color - lightness (L), chroma (C), and hue (h).</p>\n<pre><code class=\"language-csharp\">CIELCh_uv lch = color.ToLCh_uv();\r\nColor color = lch.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CIEUCS\">CIE UCS</a></h3>\n<p>The CIE UCS components of a color - (u,v) chromaticity coordinates.</p>\n<pre><code class=\"language-csharp\">CIEUCS ucs = color.ToUCS();\r\nColor color = ucs.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CIEUVW\">CIE UVW</a></h3>\n<p>The CIE UVW components of a color - chromaticity (U,V) and lightness (W).</p>\n<pre><code class=\"language-csharp\">CIEUVW uvw = color.ToUVW();\r\nColor color = uvw.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CIExyY\">CIE xyY</a></h3>\n<p>The CIE xyY components of a color - chromaticity (x,y) and luminance (Y).</p>\n<pre><code class=\"language-csharp\">CIExyY xyY = color.ToxyY();\r\nColor color = xyY.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CIEXYZ\">CIE XYZ</a></h3>\n<p>The CIE XYZ components of a color - chromaticity (X,Z) and luminance (Y).</p>\n<pre><code class=\"language-csharp\">CIEXYZ xyz = color.ToXYZ();\r\nColor color = xyz.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CMYK\">CMYK</a></h3>\n<p>The CMYK (cyan, magenta, yellow, black) components of a color in the range [0..1].</p>\n<pre><code class=\"language-csharp\">CMYK cmyk = color.ToCMYK();\r\nColor color = cmyk.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/Hex\">Hex</a></h3>\n<p>Hexadecimal colors are represented as strings \"#ff0000\" or integers 0xff0000. Colors can be converted using RGB, RGBA, and ARGB formats which determine the order of the bits.</p>\n<pre><code class=\"language-csharp\">int hex = color.ToHex();\r\nint hex_rgba = color.ToHexRGBA();\r\nint hex_argb = color.ToHexARGB();\r\n\r\nstring hex = color.ToHexString();\r\nstring hex_rgba = color.ToHexStringRGBA();\r\nstring hex_argb = color.ToHexStringARGB();\r\n\r\nColor color = Hex.ToColor(hex);\r\nColor color = Hex.ToRGBAColor(hex_rgba);\r\nColor color = Hex.ToARGBColor(hex_argb);\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/HSB\">HSB</a></h3>\n<p>The HSB (hue, saturation, brightness) components of a color in the range [0..1].</p>\n<pre><code class=\"language-csharp\">HSB components = color.ToHSB();\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/HSI\">HSI</a></h3>\n<p>The HSI (hue, saturation, intensity) components of a color in the range [0..1].</p>\n<pre><code class=\"language-csharp\">HSI components = color.ToHSI();\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/HSL\">HSL</a></h3>\n<p>The HSL (hue, saturation, lightness) components of a color in the range [0..1].</p>\n<pre><code class=\"language-csharp\">HSL components = color.ToHSL();\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/HSV\">HSV</a></h3>\n<p>The HSV (hue, saturation, value) components of a color in the range [0..1].</p>\n<pre><code class=\"language-csharp\">HSV components = color.ToHSV();\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/HunterLab\">Hunter Lab</a></h3>\n<p>The Hunter Lab components of a color - lightness (L) and chromaticity (a,b).</p>\n<pre><code class=\"language-csharp\">HunterLab components = color.ToHunterLab();\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/LMS\">LMS</a></h3>\n<p>The LMS (long, medium, short) components of a color.</p>\n<pre><code class=\"language-csharp\">LMS components = color.ToLMS();\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/RGB\">RGB</a></h3>\n<p>The RGB (red, green, blue) components of a color in the range [0..1].</p>\n<pre><code class=\"language-csharp\">RGB components = color.ToRGB();\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/RGB255\">RGB255</a></h3>\n<p>The RGB (red, green, blue) components of a color in the range [0..255].</p>\n<pre><code class=\"language-csharp\">RGB255 components = color.ToRGB255();\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/RGBA\">RGBA</a></h3>\n<p>The RGBA (red, green, blue, alpha) components of a color in the range [0..1].</p>\n<pre><code class=\"language-csharp\">RGBA components = color.ToRGBA();\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/RGBA255\">RGBA255</a></h3>\n<p>The RGBA (red, green, blue, alpha) components of a color in the range [0..255].</p>\n<pre><code class=\"language-csharp\">RGBA255 components = color.ToRGBA255();\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/YCbCr\">YCbCr</a></h3>\n<p>The Y′CbCr components of a color - luma (Y′) and chroma (Cb,Cr).</p>\n<pre><code class=\"language-csharp\">YCbCr components = color.ToYCbCr();\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/YPbPr\">YPbPr</a></h3>\n<p>The Y′PbPr components of a color - luma (Y′) and chroma (Pb,Pr).</p>\n<pre><code class=\"language-csharp\">YPbPr components = color.ToYPbPr();\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/YIQ\">YIQ</a></h3>\n<p>The Y′IQ components of a color - luma (Y′) and chroma (I,Q).</p>\n<pre><code class=\"language-csharp\">YIQ components = color.ToYIQ();\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/YUV\">YUV</a></h3>\n<p>The Y′UV components of a color - luma (Y′) and chroma (U,V).</p>\n<pre><code class=\"language-csharp\">YUV components = color.ToYUV();\r\nColor color = components.ToColor();\n</code></pre>","frontmatter":{"slug":"/manual/conversion","class":null,"title":""}}},"pageContext":{"id":"90f8cf03-3fe9-579e-afbb-86f9814f5f12","frontmatter__slug":"/manual/conversion","__params":{"frontmatter__slug":"manual"}}},"staticQueryHashes":["1654257956","2011016986","3218290725"]}