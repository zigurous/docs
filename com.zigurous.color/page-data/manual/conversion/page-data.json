{
    "componentChunkName": "component---src-pages-markdown-remark-frontmatter-slug-js",
    "path": "/manual/conversion",
    "result": {"data":{"markdownRemark":{"html":"<h1>Conversion</h1>\n<p>The <strong>Color Pro</strong> package supports converting colors to and from 20+ color models / spaces. Every supported type has its own data structure (except Hex) and several ways to convert between, whether through extension methods, static methods, or instance methods.</p>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/ARGB\">ARGB</a></h3>\n<p>The ARGB (alpha, red, green, blue) components of a color in the range [0..1].</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToARGB(out a, out r, out g, out b);\r\nARGB components = color.ToARGB();\r\n\r\n// Static methods\r\nARGB.Convert(color, out a, out r, out g, out b);\r\nColor color = ARGB.ToColor(a, r, g, b);\r\n\r\n// Instance methods\r\nARGB components = new ARGB(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/ARGB255\">ARGB255</a></h3>\n<p>The ARGB (alpha, red, green, blue) components of a color in the range [0..255].</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToARGB255(out a, out r, out g, out b);\r\nARGB255 components = color.ToARGB255();\r\n\r\n// Static methods\r\nARGB255.Convert(color, out a, out r, out g, out b);\r\nColor color = ARGB255.ToColor(a, r, g, b);\r\n\r\n// Instance methods\r\nARGB255 components = new ARGB255(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CIELAB\">CIE LAB</a></h3>\n<p>The CIE LAB components of a color - lightness (L) and chromaticity (a,b).</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToCIELAB(out L, out a, out b);\r\nCIELAB components = color.ToCIELAB();\r\n\r\n// Static methods\r\nCIELAB.Convert(color, out L, out a, out b);\r\nColor color = CIELAB.ToColor(L, a, b);\r\n\r\n// Instance methods\r\nCIELAB components = new CIELAB(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CIELUV\">CIE LUV</a></h3>\n<p>The CIE LUV components of a color - lightness (L) and chromaticity (u,v).</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToCIELUV(out L, out u, out v);\r\nCIELUV components = color.ToCIELUV();\r\n\r\n// Static methods\r\nCIELUV.Convert(color, out L, out u, out v);\r\nColor color = CIELUV.ToColor(L, u, v);\r\n\r\n// Instance methods\r\nCIELUV components = new CIELUV(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CIELCh_ab\">CIE LCh(ab)</a></h3>\n<p>The CIE LCh(ab) components of a color - lightness (L), chroma (C), and hue (h).</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToCIELCh_ab(out L, out C, out h);\r\nCIELCh_ab components = color.ToCIELCh_ab();\r\n\r\n// Static methods\r\nCIELCh_ab.Convert(color, out L, out C, out h);\r\nColor color = CIELCh_ab.ToColor(L, C, h);\r\n\r\n// Instance methods\r\nCIELCh_ab components = new CIELCh_ab(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CIELCh_uv\">CIE LCh(uv)</a></h3>\n<p>The CIE LCh(uv) components of a color - lightness (L), chroma (C), and hue (h).</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToCIELCh_uv(out L, out C, out h);\r\nCIELCh_uv components = color.ToCIELCh_uv();\r\n\r\n// Static methods\r\nCIELCh_uv.Convert(color, out L, out C, out h);\r\nColor color = CIELCh_uv.ToColor(L, C, h);\r\n\r\n// Instance methods\r\nCIELCh_uv components = new CIELCh_uv(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CIEUCS\">CIE UCS</a></h3>\n<p>The CIE UCS components of a color - (u,v) chromaticity coordinates.</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToCIEUCS(out u, out v);\r\nCIEUCS components = color.ToCIEUCS();\r\n\r\n// Static methods\r\nCIEUCS.Convert(color, out u, out v);\r\nColor color = CIEUCS.ToColor(u, v);\r\n\r\n// Instance methods\r\nCIEUCS components = new CIEUCS(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CIEUVW\">CIE UVW</a></h3>\n<p>The CIE UVW components of a color - chromaticity (U,V) and lightness (W).</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToCIEUVW(out U, out V, out W);\r\nCIEUVW components = color.ToCIEUVW();\r\n\r\n// Static methods\r\nCIEUVW.Convert(color, out U, out V, out W);\r\nColor color = CIEUVW.ToColor(U, V, W);\r\n\r\n// Instance methods\r\nCIEUVW components = new CIEUVW(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CIExyY\">CIE xyY</a></h3>\n<p>The CIE xyY components of a color - chromaticity (x,y) and luminance (Y).</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToCIExyY(out x, out y, out Y);\r\nCIExyY components = color.ToCIExyY();\r\n\r\n// Static methods\r\nCIExyY.Convert(color, out x, out y, out Y);\r\nColor color = CIExyY.ToColor(x, y, Y);\r\n\r\n// Instance methods\r\nCIExyY components = new CIExyY(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CIEXYZ\">CIE XYZ</a></h3>\n<p>The CIE XYZ components of a color - chromaticity (X,Z) and luminance (Y).</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToCIEXYZ(out X, out Y, out Z);\r\nCIEXYZ components = color.ToCIEXYZ();\r\n\r\n// Static methods\r\nCIEXYZ.Convert(color, out X, out Y, out Z);\r\nColor color = CIEXYZ.ToColor(X, Y, Z);\r\n\r\n// Instance methods\r\nCIEXYZ components = new CIEXYZ(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/CMYK\">CMYK</a></h3>\n<p>The CMYK (cyan, magenta, yellow, black) components of a color in the range [0..1].</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToCMYK(out c, out m, out y, out k);\r\nCMYK components = color.ToCMYK();\r\n\r\n// Static methods\r\nCMYK.Convert(color, out c, out m, out y, out k);\r\nColor color = CMYK.ToColor(c, m, y, k);\r\n\r\n// Instance methods\r\nCMYK components = new CMYK(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/Hex\">Hex</a></h3>\n<p>Hexadecimal colors are represented as strings \"#ff0000\" or integers 0xff0000. Colors can be converted to and from using RGB, RGBA, and ARGB formats which determine the order of the bits.</p>\n<pre><code class=\"language-csharp\">int hex = color.ToHex();\r\nint hex_rgba = color.ToHexRGBA();\r\nint hex_argb = color.ToHexARGB();\r\n\r\nstring hex = color.ToHexString();\r\nstring hex_rgba = color.ToHexStringRGBA();\r\nstring hex_argb = color.ToHexStringARGB();\r\n\r\nColor color = Hex.ToRGBColor(hex);\r\nColor color = Hex.ToRGBAColor(hex_rgba);\r\nColor color = Hex.ToARGBColor(hex_argb);\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/HSB\">HSB</a></h3>\n<p>The HSB (hue, saturation, brightness) components of a color in the range [0..1].</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToHSB(out h, out s, out b);\r\nHSB components = color.ToHSB();\r\n\r\n// Static methods\r\nHSB.Convert(color, out h, out s, out b);\r\nColor color = HSB.ToColor(h, s, b);\r\n\r\n// Instance methods\r\nHSB components = new HSB(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/HSI\">HSI</a></h3>\n<p>The HSI (hue, saturation, intensity) components of a color in the range [0..1].</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToHSI(out h, out s, out b);\r\nHSI components = color.ToHSI();\r\n\r\n// Static methods\r\nHSI.Convert(color, out h, out s, out b);\r\nColor color = HSI.ToColor(h, s, b);\r\n\r\n// Instance methods\r\nHSI components = new HSI(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/HSL\">HSL</a></h3>\n<p>The HSL (hue, saturation, lightness) components of a color in the range [0..1].</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToHSL(out h, out s, out b);\r\nHSL components = color.ToHSL();\r\n\r\n// Static methods\r\nHSL.Convert(color, out h, out s, out b);\r\nColor color = HSL.ToColor(h, s, b);\r\n\r\n// Instance methods\r\nHSL components = new HSL(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/HSV\">HSV</a></h3>\n<p>The HSV (hue, saturation, value) components of a color in the range [0..1].</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToHSV(out h, out s, out b);\r\nHSV components = color.ToHSV();\r\n\r\n// Static methods\r\nHSV.Convert(color, out h, out s, out b);\r\nColor color = HSV.ToColor(h, s, b);\r\n\r\n// Instance methods\r\nHSV components = new HSV(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/HunterLab\">Hunter Lab</a></h3>\n<p>The Hunter Lab components of a color - lightness (L) and chromaticity (a,b).</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToHunterLab(out L, out a, out b);\r\nHunterLab components = color.ToHunterLab();\r\n\r\n// Static methods\r\nHunterLab.Convert(color, out L, out a, out b);\r\nColor color = HunterLab.ToColor(L, a, b);\r\n\r\n// Instance methods\r\nHunterLab components = new HunterLab(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/LMS\">LMS</a></h3>\n<p>The LMS (long, medium, short) components of a color.</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToLMS(out L, out M, out S);\r\nLMS components = color.ToLMS();\r\n\r\n// Static methods\r\nLMS.Convert(color, out L, out M, out S);\r\nColor color = LMS.ToColor(L, M, S);\r\n\r\n// Instance methods\r\nLMS components = new LMS(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/RGB\">RGB</a></h3>\n<p>The RGB (red, green, blue) components of a color in the range [0..1].</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToRGB(out r, out g, out b);\r\nRGB components = color.ToRGB();\r\n\r\n// Static methods\r\nRGB.Convert(color, out r, out g, out b);\r\nColor color = RGB.ToColor(r, g, b);\r\n\r\n// Instance methods\r\nRGB components = new RGB(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/RGB255\">RGB255</a></h3>\n<p>The RGB (red, green, blue) components of a color in the range [0..255].</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToRGB255(out r, out g, out b);\r\nRGB255 components = color.ToRGB255();\r\n\r\n// Static methods\r\nRGB255.Convert(color, out r, out g, out b);\r\nColor color = RGB255.ToColor(r, g, b);\r\n\r\n// Instance methods\r\nRGB255 components = new RGB255(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/RGBA\">RGBA</a></h3>\n<p>The RGBA (red, green, blue, alpha) components of a color in the range [0..1].</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToRGBA(out r, out g, out b, out a);\r\nRGBA components = color.ToRGBA();\r\n\r\n// Static methods\r\nRGBA.Convert(color, out r, out g, out b, out a);\r\nColor color = RGBA.ToColor(r, g, b, a);\r\n\r\n// Instance methods\r\nRGBA components = new RGBA(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/RGBA255\">RGBA255</a></h3>\n<p>The RGBA (red, green, blue, alpha) components of a color in the range [0..255].</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToRGBA255(out r, out g, out b, out a);\r\nRGBA255 components = color.ToRGBA255();\r\n\r\n// Static methods\r\nRGBA255.Convert(color, out r, out g, out b, out a);\r\nColor color = RGBA255.ToColor(r, g, b, a);\r\n\r\n// Instance methods\r\nRGBA255 components = new RGBA255(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/YCbCr\">YCbCr</a></h3>\n<p>The Y′CbCr components of a color - luma (Y′) and chroma (Cb,Cr).</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToYCbCr(out Y, out Cb, out Cr);\r\nYCbCr components = color.ToYCbCr();\r\n\r\n// Static methods\r\nYCbCr.Convert(color, out Y, out Cb, out Cr);\r\nColor color = YCbCr.ToColor(Y, Cb, Cr);\r\n\r\n// Instance methods\r\nYCbCr components = new YCbCr(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/YPbPr\">YPbPr</a></h3>\n<p>The Y′PbPr components of a color - luma (Y′) and chroma (Pb,Pr).</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToYPbPr(out Y, out Pb, out Pr);\r\nYPbPr components = color.ToYPbPr();\r\n\r\n// Static methods\r\nYPbPr.Convert(color, out Y, out Pb, out Pr);\r\nColor color = YPbPr.ToColor(Y, Pb, Pr);\r\n\r\n// Instance methods\r\nYPbPr components = new YPbPr(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/YIQ\">YIQ</a></h3>\n<p>The Y′IQ components of a color - luma (Y′) and chroma (I,Q).</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToYIQ(out Y, out I, out Q);\r\nYIQ components = color.ToYIQ();\r\n\r\n// Static methods\r\nYIQ.Convert(color, out Y, out I, out Q);\r\nColor color = YIQ.ToColor(Y, I, Q);\r\n\r\n// Instance methods\r\nYIQ components = new YIQ(color);\r\nColor color = components.ToColor();\n</code></pre>\n<hr/>\n<h3><a href=\"/com.zigurous.color/api/Zigurous.ColorPro/YUV\">YUV</a></h3>\n<p>The Y′UV components of a color - luma (Y′) and chroma (U,V).</p>\n<pre><code class=\"language-csharp\">// Extension methods\r\ncolor.ToYUV(out Y, out U, out V);\r\nYUV components = color.ToYUV();\r\n\r\n// Static methods\r\nYUV.Convert(color, out Y, out U, out V);\r\nColor color = YUV.ToColor(Y, U, V);\r\n\r\n// Instance methods\r\nYUV components = new YUV(color);\r\nColor color = components.ToColor();\n</code></pre>","frontmatter":{"slug":"/manual/conversion","class":null,"title":""}}},"pageContext":{"id":"90f8cf03-3fe9-579e-afbb-86f9814f5f12","frontmatter__slug":"/manual/conversion","__params":{"frontmatter__slug":"manual"}}},
    "staticQueryHashes": ["1119773448","2497133658","3218290725"]}