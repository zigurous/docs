{
    "componentChunkName": "component---src-pages-markdown-remark-frontmatter-slug-js",
    "path": "/manual/adjustment",
    "result": {"data":{"markdownRemark":{"html":"<h1>Adjustment</h1>\n<p>Adjusting color values is one of the most commonly used features included in the <strong>Color Pro</strong> package. Functions for adjusting colors are defined as extension methods in the static class <a href=\"/com.zigurous.color/api/Zigurous.ColorPro/Adjustment\">Adjustment</a>. To change the values of individual components, see the <a href=\"/com.zigurous.color/manual/components\">Components</a> manual.</p>\n<hr/>\n<h2>Hue Shift</h2>\n<pre><code class=\"language-csharp\">Color shift = color.HueShifted(30.0f); // 30° shift\r\ncolor.HueShift(30.0f); // change existing color\r\n\r\nColor[] hues = color.Hues(30.0f); // 30° shift = 12 colors (360/30=12)\r\nColor[] hues = color.Hues(12); // 12 colors = 30° shift (360/12=30)\r\n\r\ncolor.HuesNonAlloc(array); // prevent heap allocations\n</code></pre>\n<hr/>\n<h2>Saturate</h2>\n<pre><code class=\"language-csharp\">Color saturated = color.Saturated(0.1f); // 10% increase\r\ncolor.Saturate(0.1f); // change existing color\r\n\r\nColor[] saturated = color.Saturated(10); // generate 10 saturated colors\r\ncolor.SaturatedNonAlloc(array); // prevent heap allocations\n</code></pre>\n<hr/>\n<h2>Desaturate</h2>\n<pre><code class=\"language-csharp\">Color desaturated = color.Desaturated(0.1f); // 10% decrease\r\ncolor.Desaturate(0.1f); // change existing color\r\n\r\nColor[] desaturated = color.Desaturated(10); // generate 10 desaturated colors\r\ncolor.DesaturatedNonAlloc(array); // prevent heap allocations\n</code></pre>\n<hr/>\n<h2>Grayscale</h2>\n<pre><code class=\"language-csharp\">Color grayscaled = color.Grayscaled();\r\ncolor.Grayscale(); // change existing color\n</code></pre>\n<hr/>\n<h2>Lighter</h2>\n<pre><code class=\"language-csharp\">Color lighter = color.Lighter(0.1f); // 10% increase\r\ncolor.Lighten(0.1f); // change existing color\r\n\r\nColor[] lighter = color.Lighter(10); // generate 10 lighter colors\r\ncolor.LighterNonAlloc(array); // prevent heap allocations\n</code></pre>\n<hr/>\n<h2>Darker</h2>\n<pre><code class=\"language-csharp\">Color darker = color.Darker(0.1f); // 10% decrease\r\ncolor.Darken(0.1f); // change existing color\r\n\r\nColor[] darker = color.Darker(10); // generate 10 darker colors\r\ncolor.DarkerNonAlloc(array); // prevent heap allocations\n</code></pre>\n<hr/>\n<h2>Invert</h2>\n<pre><code class=\"language-csharp\">Color inverted = color.Inverted();\r\ncolor.Invert(); // change existing color\n</code></pre>\n<hr/>\n<h2>Complement</h2>\n<pre><code class=\"language-csharp\">Color complement = color.Complement();\n</code></pre>\n<hr/>\n<h2>Websafe</h2>\n<pre><code class=\"language-csharp\">Color websafe = color.WebSafe();\n</code></pre>","frontmatter":{"slug":"/manual/adjustment","class":null,"title":""}}},"pageContext":{"id":"eeb09bc5-f1eb-5c87-9531-a2d93e384aff","frontmatter__slug":"/manual/adjustment","__params":{"frontmatter__slug":"manual"}}},
    "staticQueryHashes": ["1119773448","2497133658","3218290725"]}