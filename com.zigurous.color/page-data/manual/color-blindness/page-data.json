{
    "componentChunkName": "component---src-pages-markdown-remark-frontmatter-slug-js",
    "path": "/manual/color-blindness",
    "result": {"data":{"markdownRemark":{"html":"<h1>Color Blindness</h1>\n<p>For accessibility purposes it is useful to simulate color blindness when picking colors to ensure your palettes are favorable for as many people as possible. The <strong>Color Pro</strong> package includes functions to return a simulated color blindness for a given color. These extension methods are declared in the static class <a href=\"/com.zigurous.color/api/Zigurous.ColorPro/ColorBlindness\">Color Blindess</a>.</p>\n<p>The <strong>Color Pro</strong> package also includes a post-processing filter for each supported color blindness type. These can be useful for testing color blindness while playing your game to ensure it is accessible for colorblind people.</p>\n<p><img src=\"https://miro.medium.com/max/2000/1*vEU5WV7Ho3FqQRcL2n5BEw.png\" alt=\"\"></p>\n<hr/>\n<h2>Protanopia</h2>\n<p>Protanopia is a blindness to red, a state in which the red cones are absent.</p>\n<pre><code class=\"language-csharp\">Color protanopia = color.Protanopia();\r\nColor[] protanopia = colors.Protanopia();\n</code></pre>\n<hr/>\n<h2>Protanomaly</h2>\n<p>Protanomaly is a reduced sensitivity to red, a result of functionally limited red cones.</p>\n<pre><code class=\"language-csharp\">Color protanomaly = color.Protanomaly();\r\nColor[] protanomaly = colors.Protanomaly();\n</code></pre>\n<hr/>\n<h2>Deuteranopia</h2>\n<p>Deuteranopia is a blindness to green, a state in which the green cones are absent.</p>\n<pre><code class=\"language-csharp\">Color deuteranopia = color.Deuteranopia();\r\nColor[] deuteranopia = colors.Deuteranopia();\n</code></pre>\n<hr/>\n<h2>Deuteranomaly</h2>\n<p>Deuteranomaly is a reduced sensitivity to green, a result of functionally limited green cones.</p>\n<pre><code class=\"language-csharp\">Color deuteranomaly = color.Deuteranomaly();\r\nColor[] deuteranomaly = colors.Deuteranomaly();\n</code></pre>\n<hr/>\n<h2>Tritanopia</h2>\n<p>Tritanopia is a blindness to blue, a state in which the blue cones are absent.</p>\n<pre><code class=\"language-csharp\">Color tritanopia = color.Tritanopia();\r\nColor[] tritanopia = colors.Tritanopia();\n</code></pre>\n<hr/>\n<h2>Tritanomaly</h2>\n<p>Tritanomaly is a reduced sensitivity to blue, a result of functionally limited blue cones.</p>\n<pre><code class=\"language-csharp\">Color tritanomaly = color.Tritanomaly();\r\nColor[] tritanomaly = colors.Tritanomaly();\n</code></pre>\n<hr/>\n<h2>Achromatopsia</h2>\n<p>Achromatopsia is a condition characterized by a total absense of color vision.</p>\n<pre><code class=\"language-csharp\">Color achromatopsia = color.Achromatopsia();\r\nColor[] achromatopsia = colors.Achromatopsia();\n</code></pre>\n<hr/>\n<h2>Achromatomaly</h2>\n<p>Achromatomaly is a condition characterized by a partial absense of color vision.</p>\n<pre><code class=\"language-csharp\">Color achromatomaly = color.Achromatomaly();\r\nColor[] achromatomaly = colors.Achromatomaly();\n</code></pre>","frontmatter":{"slug":"/manual/color-blindness","class":null,"title":""}}},"pageContext":{"id":"3b9665a7-b1b7-5f44-ae13-8b705d64faf3","frontmatter__slug":"/manual/color-blindness","__params":{"frontmatter__slug":"manual"}}},
    "staticQueryHashes": ["1119773448","2497133658","3218290725"]}