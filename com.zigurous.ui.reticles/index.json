{
  "api/Zigurous.Reticles.CircularReticleSpread.html": {
    "href": "api/Zigurous.Reticles.CircularReticleSpread.html",
    "title": "Class CircularReticleSpread | UI Reticles",
    "keywords": "Class CircularReticleSpread Handles reticle spread by changing the position of circular shaped reticle images. Inheritance System.Object ReticleSpread PositionalReticleSpread CircularReticleSpread Inherited Members PositionalReticleSpread.Update(RectTransform, ReticleConfiguration, Single, Int32) Namespace : Zigurous.Reticles Syntax public class CircularReticleSpread : PositionalReticleSpread Methods CalculateOffset(Single, Single, Single) Declaration public override float CalculateOffset(float spread, float reticleSize, float reticleThickness) Parameters Type Name Description System.Single spread System.Single reticleSize System.Single reticleThickness Returns Type Description System.Single Overrides PositionalReticleSpread.CalculateOffset(Single, Single, Single)"
  },
  "api/Zigurous.Reticles.CrosshairEditor.html": {
    "href": "api/Zigurous.Reticles.CrosshairEditor.html",
    "title": "Class CrosshairEditor | UI Reticles",
    "keywords": "Class CrosshairEditor Provides realtime editing of a simple crosshair reticle. Inheritance System.Object CrosshairEditor Namespace : Zigurous.Reticles Syntax public sealed class CrosshairEditor : MonoBehaviour Properties color Declaration public Color color { get; set; } offset Declaration public float offset { get; set; } outline Declaration public bool outline { get; set; } outlineOpacity Declaration public float outlineOpacity { get; set; } outlineThickness Declaration public float outlineThickness { get; set; } size Declaration public float size { get; set; } thickness Declaration public float thickness { get; set; }"
  },
  "api/Zigurous.Reticles.Hitmarker.html": {
    "href": "api/Zigurous.Reticles.Hitmarker.html",
    "title": "Class Hitmarker | UI Reticles",
    "keywords": "Class Hitmarker Animates a hitmarker reticle when triggered. Inheritance System.Object Hitmarker Namespace : Zigurous.Reticles Syntax public sealed class Hitmarker : MonoBehaviour Fields animated Fades the hitmarker in and out. Declaration public bool animated duration The amount of seconds the hitmarker stays active. Declaration public float duration Properties canvasGroup The canvas group that sets the alpha of the hitmarker. Declaration public CanvasGroup canvasGroup { get; }"
  },
  "api/Zigurous.Reticles.html": {
    "href": "api/Zigurous.Reticles.html",
    "title": "Namespace Zigurous.Reticles | UI Reticles",
    "keywords": "Namespace Zigurous.Reticles Classes CircularReticleSpread Handles reticle spread by changing the position of circular shaped reticle images. CrosshairEditor Provides realtime editing of a simple crosshair reticle. Hitmarker Animates a hitmarker reticle when triggered. NoReticleSpread Prevents all reticle spread by ignoring updates. PositionalReticleSpread Handles reticle spread by changing the position of the reticle image(s). RectangularReticleSpread Handles reticle spread by changing the position of rectangular shaped reticle images. Reticle Generates and controls a reticle based on a set configuration. ReticleBloom Handles dynamically changing the spread of a reticle based on a given bloom amount. Bloom is a way of visualizing the accuracy of a weapon. The more bloom the less accurate a weapon is. ReticleConfiguration Defines all reticle configuration properties that can be saved as a predefined asset. ReticleGroup Groups together multiple reticles into one. ReticleImage Provides methods to change the styling of reticle images. ReticleSpread An abstract type that defines how a reticle handles spread. ReticleTarget Indicates an entity that can be targeted by a reticle. ReticleTargeting Handles changing the appearance of the reticle when targeting other objects. For example, the reticle might become red when targeting an enemy or green when targeting a friendly. ReticleTargeting.Colors A set of colors that commonly represent targets. ScalingReticleSpread Handles reticle spread by scaling the reticle image(s) to increase the overall size. Enums ReticleConfiguration.Layout Determines how the reticle images are displayed which changes how the reticle is positioned. ReticleConfiguration.Shape Defines the overall shape of the reticle images which changes how the reticle is sized. ReticleConfiguration.Spread Determines the behavior of the reticle spread."
  },
  "api/Zigurous.Reticles.NoReticleSpread.html": {
    "href": "api/Zigurous.Reticles.NoReticleSpread.html",
    "title": "Class NoReticleSpread | UI Reticles",
    "keywords": "Class NoReticleSpread Prevents all reticle spread by ignoring updates. Inheritance System.Object ReticleSpread NoReticleSpread Namespace : Zigurous.Reticles Syntax public class NoReticleSpread : ReticleSpread Methods Update(RectTransform, ReticleConfiguration, Single, Int32) Declaration public override void Update(RectTransform transform, ReticleConfiguration config, float spread, int index) Parameters Type Name Description RectTransform transform ReticleConfiguration config System.Single spread System.Int32 index Overrides ReticleSpread.Update(RectTransform, ReticleConfiguration, Single, Int32)"
  },
  "api/Zigurous.Reticles.PositionalReticleSpread.html": {
    "href": "api/Zigurous.Reticles.PositionalReticleSpread.html",
    "title": "Class PositionalReticleSpread | UI Reticles",
    "keywords": "Class PositionalReticleSpread Handles reticle spread by changing the position of the reticle image(s). Inheritance System.Object ReticleSpread PositionalReticleSpread CircularReticleSpread RectangularReticleSpread Namespace : Zigurous.Reticles Syntax public abstract class PositionalReticleSpread : ReticleSpread Methods CalculateOffset(Single, Single, Single) Declaration public abstract float CalculateOffset(float spread, float reticleSize, float reticleThickness) Parameters Type Name Description System.Single spread System.Single reticleSize System.Single reticleThickness Returns Type Description System.Single Update(RectTransform, ReticleConfiguration, Single, Int32) Declaration public override void Update(RectTransform transform, ReticleConfiguration config, float spread, int index) Parameters Type Name Description RectTransform transform ReticleConfiguration config System.Single spread System.Int32 index Overrides ReticleSpread.Update(RectTransform, ReticleConfiguration, Single, Int32)"
  },
  "api/Zigurous.Reticles.RectangularReticleSpread.html": {
    "href": "api/Zigurous.Reticles.RectangularReticleSpread.html",
    "title": "Class RectangularReticleSpread | UI Reticles",
    "keywords": "Class RectangularReticleSpread Handles reticle spread by changing the position of rectangular shaped reticle images. Inheritance System.Object ReticleSpread PositionalReticleSpread RectangularReticleSpread Inherited Members PositionalReticleSpread.Update(RectTransform, ReticleConfiguration, Single, Int32) Namespace : Zigurous.Reticles Syntax public class RectangularReticleSpread : PositionalReticleSpread Methods CalculateOffset(Single, Single, Single) Declaration public override float CalculateOffset(float spread, float reticleSize, float reticleThickness) Parameters Type Name Description System.Single spread System.Single reticleSize System.Single reticleThickness Returns Type Description System.Single Overrides PositionalReticleSpread.CalculateOffset(Single, Single, Single)"
  },
  "api/Zigurous.Reticles.Reticle.html": {
    "href": "api/Zigurous.Reticles.Reticle.html",
    "title": "Class Reticle | UI Reticles",
    "keywords": "Class Reticle Generates and controls a reticle based on a set configuration. Inheritance System.Object Reticle Namespace : Zigurous.Reticles Syntax public sealed class Reticle : MonoBehaviour Fields preGenerated When set to false the reticle will be generated on start, otherwise it is assumed the reticles image are already created and configured. Declaration public bool preGenerated Properties color The active color of the reticle. Declaration public Color color { get; set; } config The configuration applied to this reticle. Declaration public ReticleConfiguration config { get; set; } spread The amount of spread applied to the reticle (an indication of a weapon's accuracy). Declaration public float spread { get; set; }"
  },
  "api/Zigurous.Reticles.ReticleBloom.html": {
    "href": "api/Zigurous.Reticles.ReticleBloom.html",
    "title": "Class ReticleBloom | UI Reticles",
    "keywords": "Class ReticleBloom Handles dynamically changing the spread of a reticle based on a given bloom amount. Bloom is a way of visualizing the accuracy of a weapon. The more bloom the less accurate a weapon is. Inheritance System.Object ReticleBloom Namespace : Zigurous.Reticles Syntax public class ReticleBloom : MonoBehaviour Fields decayRate How quickly the reticle bloom decays back to zero. Declaration public float decayRate maxSpread The maximum amount of spread that can be applied to the reticle. Declaration public float maxSpread reticle The reticle that the bloom effect is applied to. Declaration public Reticle reticle spread The amount of spread to apply to the reticle when bloomed. Declaration public float spread Properties baseSpread The base amount of spread on the reticle without bloom. Declaration public float baseSpread { get; } bloom The current amount of bloom applied to the reticle. Declaration public float bloom { get; } Methods Apply() Declaration public void Apply()"
  },
  "api/Zigurous.Reticles.ReticleConfiguration.html": {
    "href": "api/Zigurous.Reticles.ReticleConfiguration.html",
    "title": "Class ReticleConfiguration | UI Reticles",
    "keywords": "Class ReticleConfiguration Defines all reticle configuration properties that can be saved as a predefined asset. Inheritance System.Object ReticleConfiguration Namespace : Zigurous.Reticles Syntax public sealed class ReticleConfiguration : ScriptableObject Fields center The center point of the reticle. Declaration public Vector3 center color The color of the reticle images. Declaration public Color color elements The amount of images that make up the reticle. Declaration public int elements layout Determines how the reticle images are displayed. Declaration public ReticleConfiguration.Layout layout mask Applies a mask fill to the reticle. Declaration public bool mask maskFillAmount The percentage of fill applied to the reticle mask. Declaration public float maskFillAmount offset The offset of the reticle images from the center point. The offset is used as the initial spread amount for static reticles. Declaration public float offset outline Draws an outline around the reticle images. Declaration public bool outline outlineColor The color of the reticle outline. Declaration public Color outlineColor outlineDistance The distance of the reticle outline effect from the base sprite. Declaration public Vector2 outlineDistance rotation The local rotation of the reticle. Declaration public float rotation shape The shape of the reticle images. Declaration public ReticleConfiguration.Shape shape size The overall size of the reticle. Declaration public float size spread The behavior of the reticle spread. Declaration public ReticleConfiguration.Spread spread sprite The sprite rendered for each reticle image. Declaration public Sprite sprite thickness The thickness of reticle crosshairs (only applicable to rectangular shaped reticle images). Declaration public float thickness"
  },
  "api/Zigurous.Reticles.ReticleConfiguration.Layout.html": {
    "href": "api/Zigurous.Reticles.ReticleConfiguration.Layout.html",
    "title": "Enum ReticleConfiguration.Layout | UI Reticles",
    "keywords": "Enum ReticleConfiguration.Layout Determines how the reticle images are displayed which changes how the reticle is positioned. Namespace : Zigurous.Reticles Syntax public enum Layout Fields Name Description Cardinal Displays the reticle images along the cardinal axes. Radial Displays the reticle images in a radial pattern around the center point."
  },
  "api/Zigurous.Reticles.ReticleConfiguration.Shape.html": {
    "href": "api/Zigurous.Reticles.ReticleConfiguration.Shape.html",
    "title": "Enum ReticleConfiguration.Shape | UI Reticles",
    "keywords": "Enum ReticleConfiguration.Shape Defines the overall shape of the reticle images which changes how the reticle is sized. Namespace : Zigurous.Reticles Syntax public enum Shape Fields Name Description Circular Defines the reticle images as circular with a set radius. Rectangular Defines the reticle images as rectangular with a set width and height."
  },
  "api/Zigurous.Reticles.ReticleConfiguration.Spread.html": {
    "href": "api/Zigurous.Reticles.ReticleConfiguration.Spread.html",
    "title": "Enum ReticleConfiguration.Spread | UI Reticles",
    "keywords": "Enum ReticleConfiguration.Spread Determines the behavior of the reticle spread. Namespace : Zigurous.Reticles Syntax public enum Spread Fields Name Description Dynamic Indicates the reticle has spread and the amount can change dynamically. None Indicates the reticle does not spread. Static Indicates the reticle has spread but the amount does not change."
  },
  "api/Zigurous.Reticles.ReticleGroup.html": {
    "href": "api/Zigurous.Reticles.ReticleGroup.html",
    "title": "Class ReticleGroup | UI Reticles",
    "keywords": "Class ReticleGroup Groups together multiple reticles into one. Inheritance System.Object ReticleGroup Namespace : Zigurous.Reticles Syntax public class ReticleGroup : MonoBehaviour Properties reticles The reticles contained in the group. Declaration public List<Reticle> reticles { get; protected set; } Methods Add(Reticle) Declaration public void Add(Reticle reticle) Parameters Type Name Description Reticle reticle Awake() Declaration protected virtual void Awake() Clear() Declaration public void Clear() Remove(Int32) Declaration public void Remove(int index) Parameters Type Name Description System.Int32 index Remove(Reticle) Declaration public void Remove(Reticle reticle) Parameters Type Name Description Reticle reticle"
  },
  "api/Zigurous.Reticles.ReticleImage.html": {
    "href": "api/Zigurous.Reticles.ReticleImage.html",
    "title": "Class ReticleImage | UI Reticles",
    "keywords": "Class ReticleImage Provides methods to change the styling of reticle images. Inheritance System.Object ReticleImage Namespace : Zigurous.Reticles Syntax public sealed class ReticleImage : Image Methods SetMask(ReticleConfiguration.Shape, Boolean, Single) Declaration public void SetMask(ReticleConfiguration.Shape shape, bool masked, float fillAmount) Parameters Type Name Description ReticleConfiguration.Shape shape System.Boolean masked System.Single fillAmount SetOutline(Boolean, Color, Vector2) Declaration public void SetOutline(bool outlined, Color color, Vector2 distance) Parameters Type Name Description System.Boolean outlined Color color Vector2 distance SetPosition(Vector3) Declaration public void SetPosition(Vector3 offset) Parameters Type Name Description Vector3 offset SetRotation(Single, Int32) Declaration public void SetRotation(float rotation, int index) Parameters Type Name Description System.Single rotation System.Int32 index SetSize(ReticleConfiguration.Shape, Single, Single) Declaration public void SetSize(ReticleConfiguration.Shape shape, float size, float thickness) Parameters Type Name Description ReticleConfiguration.Shape shape System.Single size System.Single thickness"
  },
  "api/Zigurous.Reticles.ReticleSpread.html": {
    "href": "api/Zigurous.Reticles.ReticleSpread.html",
    "title": "Class ReticleSpread | UI Reticles",
    "keywords": "Class ReticleSpread An abstract type that defines how a reticle handles spread. Inheritance System.Object ReticleSpread NoReticleSpread PositionalReticleSpread ScalingReticleSpread Namespace : Zigurous.Reticles Syntax public abstract class ReticleSpread Methods Update(RectTransform, ReticleConfiguration, Single, Int32) Declaration public abstract void Update(RectTransform transform, ReticleConfiguration config, float spread, int index) Parameters Type Name Description RectTransform transform ReticleConfiguration config System.Single spread System.Int32 index"
  },
  "api/Zigurous.Reticles.ReticleTarget.html": {
    "href": "api/Zigurous.Reticles.ReticleTarget.html",
    "title": "Class ReticleTarget | UI Reticles",
    "keywords": "Class ReticleTarget Indicates an entity that can be targeted by a reticle. Inheritance System.Object ReticleTarget Namespace : Zigurous.Reticles Syntax public sealed class ReticleTarget : MonoBehaviour Fields reticleColor The color of the reticle when the target is looked at. Declaration public Color reticleColor"
  },
  "api/Zigurous.Reticles.ReticleTargeting.Colors.html": {
    "href": "api/Zigurous.Reticles.ReticleTargeting.Colors.html",
    "title": "Class ReticleTargeting.Colors | UI Reticles",
    "keywords": "Class ReticleTargeting.Colors A set of colors that commonly represent targets. Inheritance System.Object ReticleTargeting.Colors Namespace : Zigurous.Reticles Syntax public static class Colors Fields cautious A common color for cautious targets, usually yellow. Declaration public static Color cautious friendly A common color for friendly targets, usually green. Declaration public static Color friendly hostile A common color for hostile targets, usually red. Declaration public static Color hostile neutral A common color for neutral targets, usually white. Declaration public static Color neutral"
  },
  "api/Zigurous.Reticles.ReticleTargeting.html": {
    "href": "api/Zigurous.Reticles.ReticleTargeting.html",
    "title": "Class ReticleTargeting | UI Reticles",
    "keywords": "Class ReticleTargeting Handles changing the appearance of the reticle when targeting other objects. For example, the reticle might become red when targeting an enemy or green when targeting a friendly. Inheritance System.Object ReticleTargeting Namespace : Zigurous.Reticles Syntax public sealed class ReticleTargeting : MonoBehaviour Fields layerMask The layer mask used to selectively ignore colliders when raycasting. Declaration public LayerMask layerMask lookTransform The transform from which raycasts originate, usually the camera. Declaration public Transform lookTransform maxDistance The max distance the ray can check for targets. Declaration public float maxDistance scanRate The amount of seconds between raycasts. Declaration public float scanRate Properties nextScanTime The time at which the next scan will occur. Declaration public float nextScanTime { get; } reticle The reticle that changes color. Declaration public Reticle reticle { get; } Methods ChangeAppearance(ReticleTarget) Declaration public void ChangeAppearance(ReticleTarget target) Parameters Type Name Description ReticleTarget target ResetAppearance() Declaration public void ResetAppearance() Scan() Declaration public void Scan()"
  },
  "api/Zigurous.Reticles.ScalingReticleSpread.html": {
    "href": "api/Zigurous.Reticles.ScalingReticleSpread.html",
    "title": "Class ScalingReticleSpread | UI Reticles",
    "keywords": "Class ScalingReticleSpread Handles reticle spread by scaling the reticle image(s) to increase the overall size. Inheritance System.Object ReticleSpread ScalingReticleSpread Namespace : Zigurous.Reticles Syntax public class ScalingReticleSpread : ReticleSpread Methods Update(RectTransform, ReticleConfiguration, Single, Int32) Declaration public override void Update(RectTransform transform, ReticleConfiguration config, float spread, int index) Parameters Type Name Description RectTransform transform ReticleConfiguration config System.Single spread System.Int32 index Overrides ReticleSpread.Update(RectTransform, ReticleConfiguration, Single, Int32)"
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | UI Reticles",
    "keywords": "Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . [1.1.1] - 2021/06/28 Changed [AddComponentMenu] attribute added to all behaviors [1.1.0] - 2021/06/09 Added New ReticleBloom script Changed Renamed namespace to Zigurous.Reticles Disable Hitmarker script by default Removed debug property from Hitmarker [1.0.3] - 2021/06/08 Changed Shotgun spread changed from static to dynamic [1.0.2] - 2021/05/19 Changed Code cleanup and formatting [1.0.1] - 2021/04/13 Fixed Moved non-compiled assets outside of the Runtime directory [1.0.0] - 2021/03/21 Added Preconfigured Reticles Default Dot Tiny Dot Small Dot Medium Dot Large Circle Small Circle Medium Circle Large Pistol Rifle Shotgun Hitmarker Plus X Scripts Reticle.cs ReticleConfiguration.cs ReticleGroup.cs ReticleImage.cs ReticleSpread.cs ReticleTarget.cs ReticleTargeting.cs CrosshairEditor.cs Hitmarker.cs"
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "License | UI Reticles",
    "keywords": "License MIT License Copyright (c) 2021 Zigurous Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "UI Reticles | UI Reticles",
    "keywords": "UI Reticles The UI Reticles package provides customizable UI reticles and related scripts for controlling reticle behaviors in Unity. Included in the package are 12+ pre-configured reticles. Supported functionality: Reticle Customization Reticle Spread/Bloom Reticle Targeting Hitmarker Animation Crosshair Editor"
  },
  "manual/installation.html": {
    "href": "manual/installation.html",
    "title": "Installation | UI Reticles",
    "keywords": "Installation Use the Unity Package Manager to install the UI Reticles package. Open the Package Manager in Window > Package Manager Click the add ( + ) button in the status bar Select Add package from git URL from the add menu Enter the following Git URL in the text box and click Add: https://github.com/zigurous/unity-ui-reticles.git For more information on the Package Manager and installing packages, see the following pages: Unity's Package Manager Installing from a Git URL Importing Import the package namespace in each script or file you want to use it. Note : You may need to regenerate project files/assemblies first. using Zigurous.Reticles; Source Code The source code for the UI Reticles package is in the following repository: https://github.com/zigurous/unity-ui-reticles"
  }
}