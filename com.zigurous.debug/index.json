{
  "api/Zigurous.Debug.ComparePerformance.html": {
    "href": "api/Zigurous.Debug.ComparePerformance.html",
    "title": "Class ComparePerformance | Debug Tools",
    "keywords": "Class ComparePerformance Measures the execution time of two functions with a given amount of iterations. Inheritance System.Object ComparePerformance Namespace : Zigurous.Debug Syntax public abstract class ComparePerformance : MonoBehaviour Fields execute Triggers the script to be executed again. Declaration public bool execute iterations The amount of times each function is executed. Declaration public int iterations Methods Iterate() Declaration public void Iterate() Iterate(Int32) Declaration public void Iterate(int iterations) Parameters Type Name Description System.Int32 iterations Iterate(Int32, Action) Declaration public float Iterate(int iterations, Action test) Parameters Type Name Description System.Int32 iterations System.Action test Returns Type Description System.Single TestA() Declaration protected abstract void TestA() TestB() Declaration protected abstract void TestB()"
  },
  "api/Zigurous.Debug.CompareResults-1.html": {
    "href": "api/Zigurous.Debug.CompareResults-1.html",
    "title": "Class CompareResults<T> | Debug Tools",
    "keywords": "Class CompareResults<T> Executes two functions a given amount of times and compares how many results are equal. Inheritance System.Object CompareResults<T> Namespace : Zigurous.Debug Syntax public abstract class CompareResults<T> : MonoBehaviour where T : IEquatable<T> Type Parameters Name Description T Fields execute Triggers the script to be executed again. Declaration public bool execute iterations The amount of times each function is executed. Declaration public int iterations printIndividualResults Prints the result of each iteration of the functions. Declaration public bool printIndividualResults Methods Iterate() Declaration public void Iterate() Iterate(Int32) Declaration public void Iterate(int iterations) Parameters Type Name Description System.Int32 iterations Iterate(Int32, Func<T>, Func<T>) Declaration public void Iterate(int iterations, Func<T> a, Func<T> b) Parameters Type Name Description System.Int32 iterations System.Func <T> a System.Func <T> b TestA() Declaration protected abstract T TestA() Returns Type Description T TestB() Declaration protected abstract T TestB() Returns Type Description T"
  },
  "api/Zigurous.Debug.FPSDisplay.html": {
    "href": "api/Zigurous.Debug.FPSDisplay.html",
    "title": "Class FPSDisplay | Debug Tools",
    "keywords": "Class FPSDisplay Displays the framerate of the application in realtime. Inheritance System.Object FPSDisplay Namespace : Zigurous.Debug Syntax public class FPSDisplay : MonoBehaviour Fields _nextUpdate The time of the next framerate update. Declaration protected float _nextUpdate displayText The UI text that display the framerate. Declaration public Text displayText refreshRate The amount of seconds between display updates. Declaration public float refreshRate Properties decimals The number of decimal digits to display. Declaration public int decimals { get; set; } displayFormat The text format of the framerate display. Declaration public string displayFormat { get; protected set; } Methods UpdateDisplay(Single) Declaration protected virtual void UpdateDisplay(float fps) Parameters Type Name Description System.Single fps"
  },
  "api/Zigurous.Debug.html": {
    "href": "api/Zigurous.Debug.html",
    "title": "Namespace Zigurous.Debug | Debug Tools",
    "keywords": "Namespace Zigurous.Debug Classes ComparePerformance Measures the execution time of two functions with a given amount of iterations. CompareResults<T> Executes two functions a given amount of times and compares how many results are equal. FPSDisplay Displays the framerate of the application in realtime. Log Provides more robust console logging functions compared to UnityEngine.Debug."
  },
  "api/Zigurous.Debug.Log.html": {
    "href": "api/Zigurous.Debug.Log.html",
    "title": "Class Log | Debug Tools",
    "keywords": "Class Log Provides more robust console logging functions compared to UnityEngine.Debug. Inheritance System.Object Log Namespace : Zigurous.Debug Syntax public static class Log Fields delimiter The delimiter used when joining multiple messages into a single log message printed to the console. Declaration public static string delimiter nullReference The display string for any null references that are logged to the console. Declaration public static string nullReference prefix A prefix appended to every log message printed to the console. Declaration public static string prefix Methods Error(Object) Logs an error message to the Unity console. Declaration public static void Error(object message) Parameters Type Name Description System.Object message Error(Object, UnityEngine.Object) Logs an error message to the Unity console under a given context. Declaration public static void Error(object message, UnityEngine.Object context) Parameters Type Name Description System.Object message UnityEngine.Object context Error(Object[]) Logs multiple error messages as a single statement to the Unity console. Declaration public static void Error(params object[] messages) Parameters Type Name Description System.Object [] messages Message(Object) Logs a message to the Unity console. Declaration public static void Message(object message) Parameters Type Name Description System.Object message Message(Object, UnityEngine.Object) Logs a message to the Unity console under a given context. Declaration public static void Message(object message, UnityEngine.Object context) Parameters Type Name Description System.Object message UnityEngine.Object context Message(Object[]) Logs multiple messages as a single statement to the Unity console. Declaration public static void Message(params object[] messages) Parameters Type Name Description System.Object [] messages Warning(Object) Logs a warning message to the Unity console. Declaration public static void Warning(object message) Parameters Type Name Description System.Object message Warning(Object, UnityEngine.Object) Logs a warning message to the Unity console under a given context. Declaration public static void Warning(object message, UnityEngine.Object context) Parameters Type Name Description System.Object message UnityEngine.Object context Warning(Object[]) Logs multiple warning messages as a single statement to the Unity console. Declaration public static void Warning(params object[] messages) Parameters Type Name Description System.Object [] messages"
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | Debug Tools",
    "keywords": "Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . [1.1.0] - 2021/06/28 Changed Improved FPS display formatting Namespace changed from DebugTools to Debug [AddComponentMenu] added to FPSDisplay [1.0.4] - 2021/04/13 Changed Package description Fixed Moved non-compiled assets outside of the Runtime directory [1.0.3] - 2021/03/26 Changed Renamed \"Debug\" class to \"Log\" to prevent naming conflict with Unity [1.0.2] - 2021/03/21 Changed Updated package metadata [1.0.1] - 2021/03/07 Changed Updated package metadata [1.0.0] - 2021/02/27 Added Enhanced console logging Performance and equality testing FPS Display Shaders Bitangets Normals Tangents UV1 UV2 VertexColor"
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "License | Debug Tools",
    "keywords": "License MIT License Copyright (c) 2021 Zigurous Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Debug Tools | Debug Tools",
    "keywords": "Debug Tools The Debug Tools package contains assets and scripts for debugging Unity projects. Included in the package are scripts for enhanced console logging, comparing performance, displaying framerate, and more."
  },
  "manual/installation.html": {
    "href": "manual/installation.html",
    "title": "Installation | Debug Tools",
    "keywords": "Installation Use the Unity Package Manager to install the Debug Tools package. Open the Package Manager in Window > Package Manager Click the add ( + ) button in the status bar Select Add package from git URL from the add menu Enter the following Git URL in the text box and click Add: https://github.com/zigurous/unity-debug-tools.git For more information on the Package Manager and installing packages, see the following pages: Unity's Package Manager Installing from a Git URL Importing Import the package namespace in each script or file you want to use it. Note : You may need to regenerate project files/assemblies first. using Zigurous.Debug; Source Code The source code for the Debug Tools package is in the following repository: https://github.com/zigurous/unity-debug-tools"
  }
}