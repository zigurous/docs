{
    "componentChunkName": "component---src-pages-markdown-remark-frontmatter-slug-js",
    "path": "/manual/shader-properties",
    "result": {"data":{"markdownRemark":{"html":"<h1>Shader Properties</h1>\n<p>When setting shader properties on materials, it is more efficient to use property ids instead of strings. The <strong>Graphics Utils</strong> package comes with a static class <a href=\"/com.zigurous.graphics/api/Zigurous.Graphics/Identifier\">Identifier</a> with predefined ids for common shader properties.</p>\n<pre><code class=\"language-csharp\">private void Start()\r\n{\r\n    Material material = GetComponent&#x3C;MeshRenderer>().material;\r\n    material.SetFloat(Identifier.Glossiness, 1f);\r\n}\n</code></pre>\n<hr/>\n<h2>ðŸ”– Automatic Property Ids</h2>\n<p>The <a href=\"/com.zigurous.graphics/api/Zigurous.Graphics/ShaderProperty\">ShaderProperty</a> struct included in the <strong>Graphics Utils</strong> package automatically creates a property id for a given shader property name. Anywhere you might declare a variable for a custom shader property name use <code>ShaderProperty</code> instead. It will still be serialized as a string in the editor, but you can use the id when getting or setting a shader property on a material.</p>\n<pre><code class=\"language-csharp\">public ShaderProperty property = \"_Custom\";\r\n\r\nprivate void Start()\r\n{\r\n    Material material = GetComponent&#x3C;MeshRenderer>().material;\r\n    material.SetFloat(property.id, 1f);\r\n}\n</code></pre>\n<hr/>\n<h2>ðŸŒ  Animated Properties</h2>\n<p>Sometimes you want to animate a shader property over time. The <strong>Graphics Utils</strong> package includes a few data structures to accomplish this. You can declare any of the following:</p>\n<ul>\n<li><a href=\"/com.zigurous.graphics/api/Zigurous.Graphics/AnimatedShaderIntProperty\">AnimatedShaderIntProperty</a></li>\n<li><a href=\"/com.zigurous.graphics/api/Zigurous.Graphics/AnimatedShaderFloatProperty\">AnimatedShaderFloatProperty</a></li>\n<li><a href=\"/com.zigurous.graphics/api/Zigurous.Graphics/AnimatedShaderColorProperty\">AnimatedShaderColorProperty</a></li>\n</ul>\n<p>These structs provide properties to set the animated values (usually done in the editor). At this point your script can call <code>Animate(material, time)</code> to evaluate the value at the given time and apply it to the provided material.</p>\n<pre><code class=\"language-csharp\">public AnimatedShaderFloatProperty property;\r\n\r\nprivate void Update()\r\n{\r\n    property.Animate(material, time);\r\n}\n</code></pre>","frontmatter":{"slug":"/manual/shader-properties","class":null,"title":""}}},"pageContext":{"id":"3cb26d98-4e5d-5fdc-913d-bde409b6d302","frontmatter__slug":"/manual/shader-properties","__params":{"frontmatter__slug":"manual"}}},
    "staticQueryHashes": ["1119773448","2497133658","3218290725"]}