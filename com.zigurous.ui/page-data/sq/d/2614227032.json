{"data":{"api":{"nodes":[{"items":[{"children":["Zigurous.UI.CanvasExtensions.FadeInGraphics(Canvas,System.Single,System.Boolean)","Zigurous.UI.CanvasExtensions.FadeOutGraphics(Canvas,System.Single,System.Boolean)"],"id":"CanvasExtensions","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"CanvasExtensions","nameWithType":"CanvasExtensions","namespace":"Zigurous.UI","parent":"Zigurous.UI","remarks":null,"summary":"\nExtension methods for UI canvas.\n","syntax":{"content":"public static class CanvasExtensions","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.UI.CanvasExtensions"},{"children":null,"id":"FadeInGraphics(Canvas,System.Single,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"FadeInGraphics(Canvas, Single, Boolean)","nameWithType":"CanvasExtensions.FadeInGraphics(Canvas, Single, Boolean)","namespace":"Zigurous.UI","parent":"Zigurous.UI.CanvasExtensions","remarks":null,"summary":"\nFades the alpha of all graphics of the canvas to 100% over the given\nduration.\n","syntax":{"content":"public static void FadeInGraphics(this Canvas canvas, float duration, bool ignoreTimeScale = false)","parameters":[{"description":"The canvas to fade.","id":"canvas","type":"Global.Canvas"},{"description":"The amount of seconds it takes to fade the graphics.","id":"duration","type":"System.Single"},{"description":"Ignores the time scale when fading the graphics.","id":"ignoreTimeScale","type":"System.Boolean"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.CanvasExtensions.FadeInGraphics(Canvas,System.Single,System.Boolean)"},{"children":null,"id":"FadeOutGraphics(Canvas,System.Single,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"FadeOutGraphics(Canvas, Single, Boolean)","nameWithType":"CanvasExtensions.FadeOutGraphics(Canvas, Single, Boolean)","namespace":"Zigurous.UI","parent":"Zigurous.UI.CanvasExtensions","remarks":null,"summary":"\nFades the alpha of all graphics of the canvas to 0% over the given\nduration.\n","syntax":{"content":"public static void FadeOutGraphics(this Canvas canvas, float duration, bool ignoreTimeScale = false)","parameters":[{"description":"The canvas to fade.","id":"canvas","type":"Global.Canvas"},{"description":"The amount of seconds it takes to fade the graphics.","id":"duration","type":"System.Single"},{"description":"Ignores the time scale when fading the graphics.","id":"ignoreTimeScale","type":"System.Boolean"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.CanvasExtensions.FadeOutGraphics(Canvas,System.Single,System.Boolean)"}]},{"items":[{"children":["Zigurous.UI.CinematicBars.animationDuration","Zigurous.UI.CinematicBars.aspectRatio","Zigurous.UI.CinematicBars.color","Zigurous.UI.CinematicBars.material","Zigurous.UI.CinematicBars.matteBottom","Zigurous.UI.CinematicBars.matteHeight","Zigurous.UI.CinematicBars.matteTop"],"id":"CinematicBars","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"CinematicBars","nameWithType":"CinematicBars","namespace":"Zigurous.UI","parent":"Zigurous.UI","remarks":null,"summary":"\nDisplays mattes on the top and bottom of the screen to crop the screen\nto a specified aspect ratio. This is also referred to as letterboxing\nand is useful for cutscenes.\n","syntax":{"content":"public sealed class CinematicBars : MonoBehaviour","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.UI.CinematicBars"},{"children":null,"id":"matteTop","implements":null,"inheritance":null,"inheritedMembers":null,"name":"matteTop","nameWithType":"CinematicBars.matteTop","namespace":"Zigurous.UI","parent":"Zigurous.UI.CinematicBars","remarks":null,"summary":"\nThe top letterbox matte (Read only).\n","syntax":{"content":"public RectTransform matteTop { get; }","parameters":[],"return":{"description":null,"type":"Global.RectTransform"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.CinematicBars.matteTop"},{"children":null,"id":"matteBottom","implements":null,"inheritance":null,"inheritedMembers":null,"name":"matteBottom","nameWithType":"CinematicBars.matteBottom","namespace":"Zigurous.UI","parent":"Zigurous.UI.CinematicBars","remarks":null,"summary":"\nThe bottom letterbox matte (Read only).\n","syntax":{"content":"public RectTransform matteBottom { get; }","parameters":[],"return":{"description":null,"type":"Global.RectTransform"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.CinematicBars.matteBottom"},{"children":null,"id":"matteHeight","implements":null,"inheritance":null,"inheritedMembers":null,"name":"matteHeight","nameWithType":"CinematicBars.matteHeight","namespace":"Zigurous.UI","parent":"Zigurous.UI.CinematicBars","remarks":null,"summary":"\nThe current height of the letterbox mattes (Read only).\n","syntax":{"content":"public float matteHeight { get; }","parameters":[],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.CinematicBars.matteHeight"},{"children":null,"id":"color","implements":null,"inheritance":null,"inheritedMembers":null,"name":"color","nameWithType":"CinematicBars.color","namespace":"Zigurous.UI","parent":"Zigurous.UI.CinematicBars","remarks":null,"summary":"\nThe color of the mattes.\n","syntax":{"content":"public Color color { get; set; }","parameters":[],"return":{"description":null,"type":"Global.Color"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.CinematicBars.color"},{"children":null,"id":"material","implements":null,"inheritance":null,"inheritedMembers":null,"name":"material","nameWithType":"CinematicBars.material","namespace":"Zigurous.UI","parent":"Zigurous.UI.CinematicBars","remarks":null,"summary":"\nThe material of the mattes.\n","syntax":{"content":"public Material material { get; set; }","parameters":[],"return":{"description":null,"type":"Global.Material"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.CinematicBars.material"},{"children":null,"id":"aspectRatio","implements":null,"inheritance":null,"inheritedMembers":null,"name":"aspectRatio","nameWithType":"CinematicBars.aspectRatio","namespace":"Zigurous.UI","parent":"Zigurous.UI.CinematicBars","remarks":null,"summary":"\nThe aspect ratio of the mattes.\n","syntax":{"content":"public float aspectRatio { get; set; }","parameters":[],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.CinematicBars.aspectRatio"},{"children":null,"id":"animationDuration","implements":null,"inheritance":null,"inheritedMembers":null,"name":"animationDuration","nameWithType":"CinematicBars.animationDuration","namespace":"Zigurous.UI","parent":"Zigurous.UI.CinematicBars","remarks":null,"summary":"\nThe amount of seconds it takes to animate the mattes.\n","syntax":{"content":"public float animationDuration { get; set; }","parameters":[],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.CinematicBars.animationDuration"}]},{"items":[{"children":["Zigurous.UI.GraphicExtensions.FadeIn(Graphic,System.Single,System.Boolean)","Zigurous.UI.GraphicExtensions.FadeOut(Graphic,System.Single,System.Boolean)"],"id":"GraphicExtensions","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"GraphicExtensions","nameWithType":"GraphicExtensions","namespace":"Zigurous.UI","parent":"Zigurous.UI","remarks":null,"summary":"\nExtension methods for UI graphics.\n","syntax":{"content":"public static class GraphicExtensions","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.UI.GraphicExtensions"},{"children":null,"id":"FadeIn(Graphic,System.Single,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"FadeIn(Graphic, Single, Boolean)","nameWithType":"GraphicExtensions.FadeIn(Graphic, Single, Boolean)","namespace":"Zigurous.UI","parent":"Zigurous.UI.GraphicExtensions","remarks":null,"summary":"\nFades the alpha of the graphic to 100% over the given duration.\n","syntax":{"content":"public static void FadeIn(this Graphic graphic, float duration, bool ignoreTimeScale = false)","parameters":[{"description":"The graphic to fade.","id":"graphic","type":"Global.Graphic"},{"description":"The amount of seconds it takes to fade the graphic.","id":"duration","type":"System.Single"},{"description":"Ignores the time scale when fading the graphic.","id":"ignoreTimeScale","type":"System.Boolean"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.GraphicExtensions.FadeIn(Graphic,System.Single,System.Boolean)"},{"children":null,"id":"FadeOut(Graphic,System.Single,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"FadeOut(Graphic, Single, Boolean)","nameWithType":"GraphicExtensions.FadeOut(Graphic, Single, Boolean)","namespace":"Zigurous.UI","parent":"Zigurous.UI.GraphicExtensions","remarks":null,"summary":"\nFades the alpha of the graphic to 0% over the given duration.\n","syntax":{"content":"public static void FadeOut(this Graphic graphic, float duration, bool ignoreTimeScale = false)","parameters":[{"description":"The graphic to fade.","id":"graphic","type":"Global.Graphic"},{"description":"The amount of seconds it takes to fade the graphic.","id":"duration","type":"System.Single"},{"description":"Ignores the time scale when fading the graphic.","id":"ignoreTimeScale","type":"System.Boolean"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.GraphicExtensions.FadeOut(Graphic,System.Single,System.Boolean)"}]},{"items":[{"children":["Zigurous.UI.InverseMask.contentMaterial","Zigurous.UI.InverseMask.cutoutMaterial"],"id":"InverseMask","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"InverseMask","nameWithType":"InverseMask","namespace":"Zigurous.UI","parent":"Zigurous.UI","remarks":null,"summary":"\nApplies materials to the image and its children to create an\ninverse mask.\n","syntax":{"content":"public sealed class InverseMask : MonoBehaviour","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.UI.InverseMask"},{"children":null,"id":"cutoutMaterial","implements":null,"inheritance":null,"inheritedMembers":null,"name":"cutoutMaterial","nameWithType":"InverseMask.cutoutMaterial","namespace":"Zigurous.UI","parent":"Zigurous.UI.InverseMask","remarks":null,"summary":"\nThe shared material applied to an image that is masking another\nimage. This image acts as a cutout, thus its contents are not visible.\n","syntax":{"content":"public static Material cutoutMaterial { get; }","parameters":[],"return":{"description":null,"type":"Global.Material"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.InverseMask.cutoutMaterial"},{"children":null,"id":"contentMaterial","implements":null,"inheritance":null,"inheritedMembers":null,"name":"contentMaterial","nameWithType":"InverseMask.contentMaterial","namespace":"Zigurous.UI","parent":"Zigurous.UI.InverseMask","remarks":null,"summary":"\nThe shared material applied to the children images being masked.\nThe content of these images will be visible in the shape of the\nparent cutout mask.\n","syntax":{"content":"public static Material contentMaterial { get; }","parameters":[],"return":{"description":null,"type":"Global.Material"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.InverseMask.contentMaterial"}]},{"items":[{"children":["Zigurous.UI.Letterboxing.animationDuration","Zigurous.UI.Letterboxing.aspectRatio","Zigurous.UI.Letterboxing.camera","Zigurous.UI.Letterboxing.viewportHeight"],"id":"Letterboxing","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"Letterboxing","nameWithType":"Letterboxing","namespace":"Zigurous.UI","parent":"Zigurous.UI","remarks":null,"summary":"\nCrops the screen to a specified aspect ratio by changing the camera&apos;s\nviewport. This is known as letterboxing and is useful for cutscenes.\n","syntax":{"content":"public sealed class Letterboxing : MonoBehaviour","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.UI.Letterboxing"},{"children":null,"id":"camera","implements":null,"inheritance":null,"inheritedMembers":null,"name":"camera","nameWithType":"Letterboxing.camera","namespace":"Zigurous.UI","parent":"Zigurous.UI.Letterboxing","remarks":null,"summary":"\nThe camera being letterboxed (Read only).\n","syntax":{"content":"public Camera camera { get; }","parameters":[],"return":{"description":null,"type":"Global.Camera"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.Letterboxing.camera"},{"children":null,"id":"viewportHeight","implements":null,"inheritance":null,"inheritedMembers":null,"name":"viewportHeight","nameWithType":"Letterboxing.viewportHeight","namespace":"Zigurous.UI","parent":"Zigurous.UI.Letterboxing","remarks":null,"summary":"\nThe current height of the viewport (Read only).\n","syntax":{"content":"public float viewportHeight { get; }","parameters":[],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.Letterboxing.viewportHeight"},{"children":null,"id":"aspectRatio","implements":null,"inheritance":null,"inheritedMembers":null,"name":"aspectRatio","nameWithType":"Letterboxing.aspectRatio","namespace":"Zigurous.UI","parent":"Zigurous.UI.Letterboxing","remarks":null,"summary":"\nThe aspect ratio of the mattes.\n","syntax":{"content":"public float aspectRatio { get; set; }","parameters":[],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.Letterboxing.aspectRatio"},{"children":null,"id":"animationDuration","implements":null,"inheritance":null,"inheritedMembers":null,"name":"animationDuration","nameWithType":"Letterboxing.animationDuration","namespace":"Zigurous.UI","parent":"Zigurous.UI.Letterboxing","remarks":null,"summary":"\nThe amount of seconds it takes to animate the mattes.\n","syntax":{"content":"public float animationDuration { get; set; }","parameters":[],"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.Letterboxing.animationDuration"}]},{"items":[{"children":["Zigurous.UI.NavigationStack.allowEmptyStack","Zigurous.UI.NavigationStack.allowNullSelections","Zigurous.UI.NavigationStack.eventSystem","Zigurous.UI.NavigationStack.items","Zigurous.UI.NavigationStack.Pop","Zigurous.UI.NavigationStack.Push(GameObject)","Zigurous.UI.NavigationStack.rootGameObject","Zigurous.UI.NavigationStack.setActiveState","Zigurous.UI.NavigationStack.top"],"id":"NavigationStack","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"NavigationStack","nameWithType":"NavigationStack","namespace":"Zigurous.UI","parent":"Zigurous.UI","remarks":null,"summary":"\nManages a stack of game objects for menu navigation purposes. This is\nespecially useful to handle backwards navigation by simply popping off\nthe last item in the stack.\n","syntax":{"content":"public class NavigationStack : MonoBehaviour","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.UI.NavigationStack"},{"children":null,"id":"eventSystem","implements":null,"inheritance":null,"inheritedMembers":null,"name":"eventSystem","nameWithType":"NavigationStack.eventSystem","namespace":"Zigurous.UI","parent":"Zigurous.UI.NavigationStack","remarks":null,"summary":"\nThe event system being tracked by the navigation stack (Read only).\n","syntax":{"content":"public EventSystem eventSystem { get; }","parameters":[],"return":{"description":null,"type":"Global.EventSystem"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.NavigationStack.eventSystem"},{"children":null,"id":"items","implements":null,"inheritance":null,"inheritedMembers":null,"name":"items","nameWithType":"NavigationStack.items","namespace":"Zigurous.UI","parent":"Zigurous.UI.NavigationStack","remarks":null,"summary":"\nThe game objects added to the stack (Read only).\n","syntax":{"content":"public Stack<GameObject> items { get; }","parameters":[],"return":{"description":null,"type":"System.Collections.Stack{GameObject}"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.NavigationStack.items"},{"children":null,"id":"top","implements":null,"inheritance":null,"inheritedMembers":null,"name":"top","nameWithType":"NavigationStack.top","namespace":"Zigurous.UI","parent":"Zigurous.UI.NavigationStack","remarks":null,"summary":"\nThe current selected game object at the top of the stack (Read only).\n","syntax":{"content":"public GameObject top { get; }","parameters":[],"return":{"description":null,"type":"Global.GameObject"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.NavigationStack.top"},{"children":null,"id":"rootGameObject","implements":null,"inheritance":null,"inheritedMembers":null,"name":"rootGameObject","nameWithType":"NavigationStack.rootGameObject","namespace":"Zigurous.UI","parent":"Zigurous.UI.NavigationStack","remarks":null,"summary":"\nThe root game object added to the bottom of the stack.\n","syntax":{"content":"public GameObject rootGameObject","parameters":null,"return":{"description":null,"type":"Global.GameObject"},"typeParameters":null},"type":"Field","uid":"Zigurous.UI.NavigationStack.rootGameObject"},{"children":null,"id":"setActiveState","implements":null,"inheritance":null,"inheritedMembers":null,"name":"setActiveState","nameWithType":"NavigationStack.setActiveState","namespace":"Zigurous.UI","parent":"Zigurous.UI.NavigationStack","remarks":null,"summary":"\nAutomatically sets the active state of game objects as they are\npushed on and off the stack.\n","syntax":{"content":"public bool setActiveState","parameters":null,"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Field","uid":"Zigurous.UI.NavigationStack.setActiveState"},{"children":null,"id":"allowEmptyStack","implements":null,"inheritance":null,"inheritedMembers":null,"name":"allowEmptyStack","nameWithType":"NavigationStack.allowEmptyStack","namespace":"Zigurous.UI","parent":"Zigurous.UI.NavigationStack","remarks":null,"summary":"\nAllows for all items to be popped off the stack. Often times you\nwant to maintain at least the root game object.\n","syntax":{"content":"public bool allowEmptyStack","parameters":null,"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Field","uid":"Zigurous.UI.NavigationStack.allowEmptyStack"},{"children":null,"id":"allowNullSelections","implements":null,"inheritance":null,"inheritedMembers":null,"name":"allowNullSelections","nameWithType":"NavigationStack.allowNullSelections","namespace":"Zigurous.UI","parent":"Zigurous.UI.NavigationStack","remarks":null,"summary":"\nAllows for null game objects to be pushed onto the stack.\n","syntax":{"content":"public bool allowNullSelections","parameters":null,"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Field","uid":"Zigurous.UI.NavigationStack.allowNullSelections"},{"children":null,"id":"Push(GameObject)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Push(GameObject)","nameWithType":"NavigationStack.Push(GameObject)","namespace":"Zigurous.UI","parent":"Zigurous.UI.NavigationStack","remarks":null,"summary":"\nPushes a game object onto the stack, effectively navigating\nforwards.\n","syntax":{"content":"public void Push(GameObject selected)","parameters":[{"description":"The game object to push onto the stack.","id":"selected","type":"Global.GameObject"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.NavigationStack.Push(GameObject)"},{"children":null,"id":"Pop","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Pop()","nameWithType":"NavigationStack.Pop()","namespace":"Zigurous.UI","parent":"Zigurous.UI.NavigationStack","remarks":null,"summary":"\nPops the last game object off the stack, effectively navigating\nbackwards.\n","syntax":{"content":"public GameObject Pop()","parameters":null,"return":{"description":"The game object that was popped off the stack.","type":"Global.GameObject"},"typeParameters":null},"type":"Method","uid":"Zigurous.UI.NavigationStack.Pop"}]},{"items":[{"children":["Zigurous.UI.RectTransformExtensions.SetAnchorMaxX(RectTransform,System.Single)","Zigurous.UI.RectTransformExtensions.SetAnchorMaxY(RectTransform,System.Single)","Zigurous.UI.RectTransformExtensions.SetAnchorMinX(RectTransform,System.Single)","Zigurous.UI.RectTransformExtensions.SetAnchorMinY(RectTransform,System.Single)","Zigurous.UI.RectTransformExtensions.SetBottom(RectTransform,System.Single)","Zigurous.UI.RectTransformExtensions.SetHeight(RectTransform,System.Single)","Zigurous.UI.RectTransformExtensions.SetLeft(RectTransform,System.Single)","Zigurous.UI.RectTransformExtensions.SetRight(RectTransform,System.Single)","Zigurous.UI.RectTransformExtensions.SetTop(RectTransform,System.Single)","Zigurous.UI.RectTransformExtensions.SetWidth(RectTransform,System.Single)"],"id":"RectTransformExtensions","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"RectTransformExtensions","nameWithType":"RectTransformExtensions","namespace":"Zigurous.UI","parent":"Zigurous.UI","remarks":null,"summary":"\nExtension methods for RectTransform.\n","syntax":{"content":"public static class RectTransformExtensions","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.UI.RectTransformExtensions"},{"children":null,"id":"SetWidth(RectTransform,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetWidth(RectTransform, Single)","nameWithType":"RectTransformExtensions.SetWidth(RectTransform, Single)","namespace":"Zigurous.UI","parent":"Zigurous.UI.RectTransformExtensions","remarks":null,"summary":"\nSets the width of the rect transform to the given value.\n","syntax":{"content":"public static void SetWidth(this RectTransform rect, float width)","parameters":[{"description":"The rect transform to update.","id":"rect","type":"Global.RectTransform"},{"description":"The width value to set.","id":"width","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.RectTransformExtensions.SetWidth(RectTransform,System.Single)"},{"children":null,"id":"SetHeight(RectTransform,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetHeight(RectTransform, Single)","nameWithType":"RectTransformExtensions.SetHeight(RectTransform, Single)","namespace":"Zigurous.UI","parent":"Zigurous.UI.RectTransformExtensions","remarks":null,"summary":"\nSets the height of the rect transform to the given value.\n","syntax":{"content":"public static void SetHeight(this RectTransform rect, float height)","parameters":[{"description":"The rect transform to update.","id":"rect","type":"Global.RectTransform"},{"description":"The height value to set.","id":"height","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.RectTransformExtensions.SetHeight(RectTransform,System.Single)"},{"children":null,"id":"SetLeft(RectTransform,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetLeft(RectTransform, Single)","nameWithType":"RectTransformExtensions.SetLeft(RectTransform, Single)","namespace":"Zigurous.UI","parent":"Zigurous.UI.RectTransformExtensions","remarks":null,"summary":"\nSets the left offset of the rect transform to the given value.\n","syntax":{"content":"public static void SetLeft(this RectTransform rect, float left)","parameters":[{"description":"The rect transform to update.","id":"rect","type":"Global.RectTransform"},{"description":"The left offset value to set.","id":"left","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.RectTransformExtensions.SetLeft(RectTransform,System.Single)"},{"children":null,"id":"SetRight(RectTransform,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetRight(RectTransform, Single)","nameWithType":"RectTransformExtensions.SetRight(RectTransform, Single)","namespace":"Zigurous.UI","parent":"Zigurous.UI.RectTransformExtensions","remarks":null,"summary":"\nSets the right offset of the rect transform to the given value.\n","syntax":{"content":"public static void SetRight(this RectTransform rect, float right)","parameters":[{"description":"The rect transform to update.","id":"rect","type":"Global.RectTransform"},{"description":"The right offset value to set.","id":"right","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.RectTransformExtensions.SetRight(RectTransform,System.Single)"},{"children":null,"id":"SetTop(RectTransform,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetTop(RectTransform, Single)","nameWithType":"RectTransformExtensions.SetTop(RectTransform, Single)","namespace":"Zigurous.UI","parent":"Zigurous.UI.RectTransformExtensions","remarks":null,"summary":"\nSets the top offset of the rect transform to the given value.\n","syntax":{"content":"public static void SetTop(this RectTransform rect, float top)","parameters":[{"description":"The rect transform to update.","id":"rect","type":"Global.RectTransform"},{"description":"The top offset value to set.","id":"top","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.RectTransformExtensions.SetTop(RectTransform,System.Single)"},{"children":null,"id":"SetBottom(RectTransform,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetBottom(RectTransform, Single)","nameWithType":"RectTransformExtensions.SetBottom(RectTransform, Single)","namespace":"Zigurous.UI","parent":"Zigurous.UI.RectTransformExtensions","remarks":null,"summary":"\nSets the bottom offset of the rect transform to the given value.\n","syntax":{"content":"public static void SetBottom(this RectTransform rect, float bottom)","parameters":[{"description":"The rect transform to update.","id":"rect","type":"Global.RectTransform"},{"description":"The bottom offset value to set.","id":"bottom","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.RectTransformExtensions.SetBottom(RectTransform,System.Single)"},{"children":null,"id":"SetAnchorMinX(RectTransform,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetAnchorMinX(RectTransform, Single)","nameWithType":"RectTransformExtensions.SetAnchorMinX(RectTransform, Single)","namespace":"Zigurous.UI","parent":"Zigurous.UI.RectTransformExtensions","remarks":null,"summary":"\nSets the left anchor of the rect transform to the given value.\n","syntax":{"content":"public static void SetAnchorMinX(this RectTransform rect, float minX)","parameters":[{"description":"The rect transform to update.","id":"rect","type":"Global.RectTransform"},{"description":"The left anchor value to set.","id":"minX","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.RectTransformExtensions.SetAnchorMinX(RectTransform,System.Single)"},{"children":null,"id":"SetAnchorMinY(RectTransform,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetAnchorMinY(RectTransform, Single)","nameWithType":"RectTransformExtensions.SetAnchorMinY(RectTransform, Single)","namespace":"Zigurous.UI","parent":"Zigurous.UI.RectTransformExtensions","remarks":null,"summary":"\nSets the bottom anchor of the rect transform to the given value.\n","syntax":{"content":"public static void SetAnchorMinY(this RectTransform rect, float minY)","parameters":[{"description":"The rect transform to update.","id":"rect","type":"Global.RectTransform"},{"description":"The bottom anchor value to set.","id":"minY","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.RectTransformExtensions.SetAnchorMinY(RectTransform,System.Single)"},{"children":null,"id":"SetAnchorMaxX(RectTransform,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetAnchorMaxX(RectTransform, Single)","nameWithType":"RectTransformExtensions.SetAnchorMaxX(RectTransform, Single)","namespace":"Zigurous.UI","parent":"Zigurous.UI.RectTransformExtensions","remarks":null,"summary":"\nSets the right anchor of the rect transform to the given value.\n","syntax":{"content":"public static void SetAnchorMaxX(this RectTransform rect, float maxX)","parameters":[{"description":"The rect transform to update.","id":"rect","type":"Global.RectTransform"},{"description":"The right anchor value to set.","id":"maxX","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.RectTransformExtensions.SetAnchorMaxX(RectTransform,System.Single)"},{"children":null,"id":"SetAnchorMaxY(RectTransform,System.Single)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"SetAnchorMaxY(RectTransform, Single)","nameWithType":"RectTransformExtensions.SetAnchorMaxY(RectTransform, Single)","namespace":"Zigurous.UI","parent":"Zigurous.UI.RectTransformExtensions","remarks":null,"summary":"\nSets the top anchor of the rect transform to the given value.\n","syntax":{"content":"public static void SetAnchorMaxY(this RectTransform rect, float maxY)","parameters":[{"description":"The rect transform to update.","id":"rect","type":"Global.RectTransform"},{"description":"The top anchor value to set.","id":"maxY","type":"System.Single"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.RectTransformExtensions.SetAnchorMaxY(RectTransform,System.Single)"}]},{"items":[{"children":[],"id":"ScreenSizeListener.OnResize","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ScreenSizeListener.OnResize","nameWithType":"ScreenSizeListener.OnResize","namespace":"Zigurous.UI","parent":"Zigurous.UI","remarks":null,"summary":"\nA function delegate invoked when the screen size changes.\n","syntax":{"content":"public delegate void OnResize(int width, int height);","parameters":[{"description":"The new width of the screen.","id":"width","type":"System.Int32"},{"description":"The new height of the screen.","id":"height","type":"System.Int32"}],"return":null,"typeParameters":null},"type":"Delegate","uid":"Zigurous.UI.ScreenSizeListener.OnResize"}]},{"items":[{"children":["Zigurous.UI.ScreenSizeListener.HasInstance","Zigurous.UI.ScreenSizeListener.height","Zigurous.UI.ScreenSizeListener.Instance","Zigurous.UI.ScreenSizeListener.resized","Zigurous.UI.ScreenSizeListener.size","Zigurous.UI.ScreenSizeListener.width"],"id":"ScreenSizeListener","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"ScreenSizeListener","nameWithType":"ScreenSizeListener","namespace":"Zigurous.UI","parent":"Zigurous.UI","remarks":null,"summary":"\nListens for changes in the screen size.\n","syntax":{"content":"public sealed class ScreenSizeListener : MonoBehaviour","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.UI.ScreenSizeListener"},{"children":null,"id":"Instance","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Instance","nameWithType":"ScreenSizeListener.Instance","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScreenSizeListener","remarks":null,"summary":"\nThe current instance of the class. The instance will be created if\nit does not already exist.\n","syntax":{"content":"public static ScreenSizeListener Instance { get; }","parameters":[],"return":{"description":"The instance of the class.","type":"Zigurous.UI.ScreenSizeListener"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.ScreenSizeListener.Instance"},{"children":null,"id":"HasInstance","implements":null,"inheritance":null,"inheritedMembers":null,"name":"HasInstance","nameWithType":"ScreenSizeListener.HasInstance","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScreenSizeListener","remarks":null,"summary":"\nChecks if the singleton has been initialized and an instance is\navailable to use.\n","syntax":{"content":"public static bool HasInstance { get; }","parameters":[],"return":{"description":"True if an instance is available, false otherwise.","type":"System.Boolean"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.ScreenSizeListener.HasInstance"},{"children":null,"id":"resized","implements":null,"inheritance":null,"inheritedMembers":null,"name":"resized","nameWithType":"ScreenSizeListener.resized","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScreenSizeListener","remarks":null,"summary":"\nA callback invoked when the screen size changes.\n","syntax":{"content":"public ScreenSizeListener.OnResize resized","parameters":null,"return":{"description":null,"type":"Zigurous.UI.ScreenSizeListener.OnResize"},"typeParameters":null},"type":"Field","uid":"Zigurous.UI.ScreenSizeListener.resized"},{"children":null,"id":"size","implements":null,"inheritance":null,"inheritedMembers":null,"name":"size","nameWithType":"ScreenSizeListener.size","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScreenSizeListener","remarks":null,"summary":"\nThe current size of the screen (Read only).\n","syntax":{"content":"public Vector2Int size { get; }","parameters":[],"return":{"description":null,"type":"Global.Vector2Int"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.ScreenSizeListener.size"},{"children":null,"id":"width","implements":null,"inheritance":null,"inheritedMembers":null,"name":"width","nameWithType":"ScreenSizeListener.width","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScreenSizeListener","remarks":null,"summary":"\nThe current width of the screen (Read only).\n","syntax":{"content":"public int width { get; }","parameters":[],"return":{"description":null,"type":"System.Int32"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.ScreenSizeListener.width"},{"children":null,"id":"height","implements":null,"inheritance":null,"inheritedMembers":null,"name":"height","nameWithType":"ScreenSizeListener.height","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScreenSizeListener","remarks":null,"summary":"\nThe current height of the screen (Read only).\n","syntax":{"content":"public int height { get; }","parameters":[],"return":{"description":null,"type":"System.Int32"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.ScreenSizeListener.height"}]},{"items":[{"children":["Zigurous.UI.ScrollDirection.Both","Zigurous.UI.ScrollDirection.Horizontal","Zigurous.UI.ScrollDirection.Vertical"],"id":"ScrollDirection","implements":null,"inheritance":null,"inheritedMembers":null,"name":"ScrollDirection","nameWithType":"ScrollDirection","namespace":"Zigurous.UI","parent":"Zigurous.UI","remarks":null,"summary":"\nA scroll direction.\n","syntax":{"content":"public enum ScrollDirection","parameters":null,"return":null,"typeParameters":null},"type":"Enum","uid":"Zigurous.UI.ScrollDirection"},{"children":null,"id":"Vertical","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Vertical","nameWithType":"ScrollDirection.Vertical","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScrollDirection","remarks":null,"summary":"\nScrolls in the y-axis.\n","syntax":{"content":"Vertical = 0","parameters":null,"return":{"description":null,"type":"Zigurous.UI.ScrollDirection"},"typeParameters":null},"type":"Field","uid":"Zigurous.UI.ScrollDirection.Vertical"},{"children":null,"id":"Horizontal","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Horizontal","nameWithType":"ScrollDirection.Horizontal","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScrollDirection","remarks":null,"summary":"\nScrolls in the x-axis.\n","syntax":{"content":"Horizontal = 1","parameters":null,"return":{"description":null,"type":"Zigurous.UI.ScrollDirection"},"typeParameters":null},"type":"Field","uid":"Zigurous.UI.ScrollDirection.Horizontal"},{"children":null,"id":"Both","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Both","nameWithType":"ScrollDirection.Both","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScrollDirection","remarks":null,"summary":"\nScrolls in both the x-axis and the y-axis.\n","syntax":{"content":"Both = 2","parameters":null,"return":{"description":null,"type":"Zigurous.UI.ScrollDirection"},"typeParameters":null},"type":"Field","uid":"Zigurous.UI.ScrollDirection.Both"}]},{"items":[{"children":["Zigurous.UI.ScrollToSelection.manualScrolling","Zigurous.UI.ScrollToSelection.scrollDirection","Zigurous.UI.ScrollToSelection.scrollRect","Zigurous.UI.ScrollToSelection.scrollSpeed","Zigurous.UI.ScrollToSelection.scrollTransform","Zigurous.UI.ScrollToSelection.selectedGameObject","Zigurous.UI.ScrollToSelection.selectedTransform"],"id":"ScrollToSelection","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"ScrollToSelection","nameWithType":"ScrollToSelection","namespace":"Zigurous.UI","parent":"Zigurous.UI","remarks":null,"summary":"\nHandles scrolling a ScrollRect component to the selected child element.\nThis is especially useful for controller support.\n","syntax":{"content":"public class ScrollToSelection : MonoBehaviour","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.UI.ScrollToSelection"},{"children":null,"id":"scrollRect","implements":null,"inheritance":null,"inheritedMembers":null,"name":"scrollRect","nameWithType":"ScrollToSelection.scrollRect","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScrollToSelection","remarks":null,"summary":"\nThe ScrollRect component being scrolled (Read only).\n","syntax":{"content":"public ScrollRect scrollRect { get; }","parameters":[],"return":{"description":null,"type":"Global.ScrollRect"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.ScrollToSelection.scrollRect"},{"children":null,"id":"scrollTransform","implements":null,"inheritance":null,"inheritedMembers":null,"name":"scrollTransform","nameWithType":"ScrollToSelection.scrollTransform","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScrollToSelection","remarks":null,"summary":"\nThe RectTransform component of the scroll rect (Read only).\n","syntax":{"content":"public RectTransform scrollTransform { get; }","parameters":[],"return":{"description":null,"type":"Global.RectTransform"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.ScrollToSelection.scrollTransform"},{"children":null,"id":"selectedGameObject","implements":null,"inheritance":null,"inheritedMembers":null,"name":"selectedGameObject","nameWithType":"ScrollToSelection.selectedGameObject","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScrollToSelection","remarks":null,"summary":"\nThe current selected game object (Read only).\n","syntax":{"content":"public GameObject selectedGameObject { get; }","parameters":[],"return":{"description":null,"type":"Global.GameObject"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.ScrollToSelection.selectedGameObject"},{"children":null,"id":"selectedTransform","implements":null,"inheritance":null,"inheritedMembers":null,"name":"selectedTransform","nameWithType":"ScrollToSelection.selectedTransform","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScrollToSelection","remarks":null,"summary":"\nThe RectTransform of the current selected game object (Read only).\n","syntax":{"content":"public RectTransform selectedTransform { get; }","parameters":[],"return":{"description":null,"type":"Global.RectTransform"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.ScrollToSelection.selectedTransform"},{"children":null,"id":"scrollDirection","implements":null,"inheritance":null,"inheritedMembers":null,"name":"scrollDirection","nameWithType":"ScrollToSelection.scrollDirection","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScrollToSelection","remarks":null,"summary":"\nThe direction to scroll the ScrollRect.\n","syntax":{"content":"public ScrollDirection scrollDirection","parameters":null,"return":{"description":null,"type":"Zigurous.UI.ScrollDirection"},"typeParameters":null},"type":"Field","uid":"Zigurous.UI.ScrollToSelection.scrollDirection"},{"children":null,"id":"scrollSpeed","implements":null,"inheritance":null,"inheritedMembers":null,"name":"scrollSpeed","nameWithType":"ScrollToSelection.scrollSpeed","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScrollToSelection","remarks":null,"summary":"\nHow quickly the ScrollRect scrolls.\n","syntax":{"content":"public float scrollSpeed","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.UI.ScrollToSelection.scrollSpeed"},{"children":null,"id":"manualScrolling","implements":null,"inheritance":null,"inheritedMembers":null,"name":"manualScrolling","nameWithType":"ScrollToSelection.manualScrolling","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScrollToSelection","remarks":null,"summary":"\nWhether the ScrollRect is currently being scrolled manually. This\nallows the user to freely scroll with the mouse even when a child\nelement is selected (Read only).\n","syntax":{"content":"public bool manualScrolling { get; }","parameters":[],"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.ScrollToSelection.manualScrolling"}]},{"items":[{"children":["Zigurous.UI.ScrollWithInput.direction","Zigurous.UI.ScrollWithInput.scrollRect","Zigurous.UI.ScrollWithInput.sensitivity"],"id":"ScrollWithInput","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"ScrollWithInput","nameWithType":"ScrollWithInput","namespace":"Zigurous.UI","parent":"Zigurous.UI","remarks":null,"summary":"\nHandles scrolling a ScrollRect component with user input. This is\nespecially useful for controller support.\n","syntax":{"content":"public class ScrollWithInput : MonoBehaviour","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.UI.ScrollWithInput"},{"children":null,"id":"scrollRect","implements":null,"inheritance":null,"inheritedMembers":null,"name":"scrollRect","nameWithType":"ScrollWithInput.scrollRect","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScrollWithInput","remarks":null,"summary":"\nThe ScrollRect component being scrolled (Read only).\n","syntax":{"content":"public ScrollRect scrollRect { get; }","parameters":[],"return":{"description":null,"type":"Global.ScrollRect"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.ScrollWithInput.scrollRect"},{"children":null,"id":"sensitivity","implements":null,"inheritance":null,"inheritedMembers":null,"name":"sensitivity","nameWithType":"ScrollWithInput.sensitivity","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScrollWithInput","remarks":null,"summary":"\nThe sensitivity multiplier applied to the input.\n","syntax":{"content":"public float sensitivity","parameters":null,"return":{"description":null,"type":"System.Single"},"typeParameters":null},"type":"Field","uid":"Zigurous.UI.ScrollWithInput.sensitivity"},{"children":null,"id":"direction","implements":null,"inheritance":null,"inheritedMembers":null,"name":"direction","nameWithType":"ScrollWithInput.direction","namespace":"Zigurous.UI","parent":"Zigurous.UI.ScrollWithInput","remarks":null,"summary":"\nThe direction to scroll the ScrollRect.\n","syntax":{"content":"public ScrollDirection direction","parameters":null,"return":{"description":null,"type":"Zigurous.UI.ScrollDirection"},"typeParameters":null},"type":"Field","uid":"Zigurous.UI.ScrollWithInput.direction"}]},{"items":[{"children":["Zigurous.UI.StretchToScreenSize.rectTransform","Zigurous.UI.StretchToScreenSize.Stretch","Zigurous.UI.StretchToScreenSize.Stretch(System.Boolean,System.Boolean)","Zigurous.UI.StretchToScreenSize.stretchHeight","Zigurous.UI.StretchToScreenSize.stretchWidth"],"id":"StretchToScreenSize","implements":null,"inheritance":["System.Object"],"inheritedMembers":null,"name":"StretchToScreenSize","nameWithType":"StretchToScreenSize","namespace":"Zigurous.UI","parent":"Zigurous.UI","remarks":null,"summary":"\nStretches a UI element to the screen size.\n","syntax":{"content":"public sealed class StretchToScreenSize : MonoBehaviour","parameters":null,"return":null,"typeParameters":null},"type":"Class","uid":"Zigurous.UI.StretchToScreenSize"},{"children":null,"id":"rectTransform","implements":null,"inheritance":null,"inheritedMembers":null,"name":"rectTransform","nameWithType":"StretchToScreenSize.rectTransform","namespace":"Zigurous.UI","parent":"Zigurous.UI.StretchToScreenSize","remarks":null,"summary":"\nThe RectTransform component of the object.\n","syntax":{"content":"public RectTransform rectTransform { get; }","parameters":[],"return":{"description":null,"type":"Global.RectTransform"},"typeParameters":null},"type":"Property","uid":"Zigurous.UI.StretchToScreenSize.rectTransform"},{"children":null,"id":"stretchWidth","implements":null,"inheritance":null,"inheritedMembers":null,"name":"stretchWidth","nameWithType":"StretchToScreenSize.stretchWidth","namespace":"Zigurous.UI","parent":"Zigurous.UI.StretchToScreenSize","remarks":null,"summary":"\nStretches the width of the RectTransform to match the screen width.\n","syntax":{"content":"public bool stretchWidth","parameters":null,"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Field","uid":"Zigurous.UI.StretchToScreenSize.stretchWidth"},{"children":null,"id":"stretchHeight","implements":null,"inheritance":null,"inheritedMembers":null,"name":"stretchHeight","nameWithType":"StretchToScreenSize.stretchHeight","namespace":"Zigurous.UI","parent":"Zigurous.UI.StretchToScreenSize","remarks":null,"summary":"\nStretches the height of the RectTransform to match the screen height.\n","syntax":{"content":"public bool stretchHeight","parameters":null,"return":{"description":null,"type":"System.Boolean"},"typeParameters":null},"type":"Field","uid":"Zigurous.UI.StretchToScreenSize.stretchHeight"},{"children":null,"id":"Stretch","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Stretch()","nameWithType":"StretchToScreenSize.Stretch()","namespace":"Zigurous.UI","parent":"Zigurous.UI.StretchToScreenSize","remarks":null,"summary":"\nStretches the RectTransform to match the screen size.\n","syntax":{"content":"public void Stretch()","parameters":null,"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.StretchToScreenSize.Stretch"},{"children":null,"id":"Stretch(System.Boolean,System.Boolean)","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Stretch(Boolean, Boolean)","nameWithType":"StretchToScreenSize.Stretch(Boolean, Boolean)","namespace":"Zigurous.UI","parent":"Zigurous.UI.StretchToScreenSize","remarks":null,"summary":"\nStretches the RectTransform to match the screen size.\n","syntax":{"content":"public void Stretch(bool stretchWidth, bool stretchHeight)","parameters":[{"description":"Whether to stretch the width.","id":"stretchWidth","type":"System.Boolean"},{"description":"Whether to stretch the height.","id":"stretchHeight","type":"System.Boolean"}],"return":null,"typeParameters":null},"type":"Method","uid":"Zigurous.UI.StretchToScreenSize.Stretch(System.Boolean,System.Boolean)"}]},{"items":[{"children":["Zigurous.UI.CanvasExtensions","Zigurous.UI.CinematicBars","Zigurous.UI.GraphicExtensions","Zigurous.UI.InverseMask","Zigurous.UI.Letterboxing","Zigurous.UI.NavigationStack","Zigurous.UI.RectTransformExtensions","Zigurous.UI.ScreenSizeListener","Zigurous.UI.ScreenSizeListener.OnResize","Zigurous.UI.ScrollDirection","Zigurous.UI.ScrollToSelection","Zigurous.UI.ScrollWithInput","Zigurous.UI.StretchToScreenSize"],"id":"Zigurous.UI","implements":null,"inheritance":null,"inheritedMembers":null,"name":"Zigurous.UI","nameWithType":"Zigurous.UI","namespace":null,"parent":null,"remarks":null,"summary":null,"syntax":null,"type":"Namespace","uid":"Zigurous.UI"}]}]}}}