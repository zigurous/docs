{
    "componentChunkName": "component---src-pages-markdown-remark-frontmatter-slug-js",
    "path": "/manual/animator-parameters",
    "result": {"data":{"markdownRemark":{"html":"<h1>Animator Parameters</h1>\n<p>When setting animator parameters in code, it is more efficient to use hash ids instead of strings. The <strong>Animation Library</strong> package comes with a static class <a href=\"/com.zigurous.animation/api/Zigurous.Animation.Parameter\">Parameter</a> with predefined ids for common animator parameters.</p>\n<pre><code class=\"language-csharp\">private void Foo()\r\n{\r\n    animator.SetTrigger(Parameter.Jump);\r\n    animator.SetBool(Parameter.Grounded, false);\r\n    animator.SetFloat(Parameter.Speed, 4f);\r\n}\n</code></pre>\n<br/>\n<h4>Automatic Hash Ids</h4>\n<p>The <a href=\"/com.zigurous.animation/api/Zigurous.Animation.AnimatorParameter\">AnimatorParameter</a> struct included in the <strong>Animation Library</strong> package automatically creates a hash id for a given parameter name. Anywhere you might declare a variable for a custom parameter use <code>AnimatorParameter</code> instead. It will still be serialized as a string in the editor, but you can use the id when getting or setting an animator parameter.</p>\n<pre><code class=\"language-csharp\">public AnimatorParameter parameter = \"Time\";\r\n\r\nprivate void Update()\r\n{\r\n    animator.SetFloat(parameter.id, time);\r\n}\n</code></pre>","frontmatter":{"slug":"/manual/animator-parameters","class":null,"title":""}}},"pageContext":{"id":"4fefde91-369c-5196-bb5a-60e45ee75a18","frontmatter__slug":"/manual/animator-parameters","__params":{"frontmatter__slug":"manual"}}},
    "staticQueryHashes": ["3218290725","3618555707","576882587"]}