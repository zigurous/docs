{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-js","path":"/manual/scriptable-variables","result":{"data":{"markdownRemark":{"html":"<h1>Scriptable Variables</h1>\n<p>The <strong>Architecture Toolkit</strong> defines <a href=\"https://docs.unity3d.com/ScriptReference/ScriptableObject.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ScriptableObject</a> variables for all primitive types and common Unity structs like vectors. Saving a variable as a ScriptableObject allows that variable to be referenced by different systems without having to deal with object dependencies.</p>\n<p>All of these variables can be created through the Asset menu, <code>Zigurous > Variables > ...</code>. Custom variable types can be created as needed. They all derive from <a href=\"/com.zigurous.architecture@1.0.0/api/Zigurous.Architecture/ScriptableVariable-1\">ScriptableVariable&#x3C;T></a> which derives from <a href=\"https://docs.unity3d.com/ScriptReference/ScriptableObject.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ScriptableObject</a>.</p>\n<p>For example, the player can declare their hitpoints as a <code>FloatVariable</code> instead of a <code>float</code>. A health bar script would also declare a hitpoints property as a <code>FloatVariable</code>. Both behaviours could reference the same variable asset without needing any dependencies between them.</p>\n<p>The downside with this is it can be cumbersome to create assets for every variable declared in a behaviour. Instead of declaring <code>FloatVariable</code> we can declare a <code>FloatReference</code> for additional flexibility. This allows the value to either be a constant value or a reference to a variable asset; the choice is customizable in the editor. These reference types derive from <a href=\"/com.zigurous.architecture@1.0.0/api/Zigurous.Architecture/ValueReference-2\">ValueReference&#x3C;TValue, TVariable></a>.</p>\n<hr/>\n<h2>ðŸ“œ Supported Types</h2>\n<ul>\n<li>Bool</li>\n<li>Bounds</li>\n<li>Double</li>\n<li>Float</li>\n<li>Int</li>\n<li>Long</li>\n<li>Quaternion</li>\n<li>Rect</li>\n<li>Short</li>\n<li>String</li>\n<li>UInt</li>\n<li>Vector2</li>\n<li>Vector2Int</li>\n<li>Vector3</li>\n<li>Vector3Int</li>\n<li>Vector4</li>\n</ul>","frontmatter":{"slug":"/manual/scriptable-variables","class":null,"title":""}}},"pageContext":{"id":"fa355458-82a4-535e-a1c4-1005d14f4020","frontmatter__slug":"/manual/scriptable-variables","__params":{"frontmatter__slug":"manual"}}},"staticQueryHashes":["1654257956","2011016986","3218290725"]}